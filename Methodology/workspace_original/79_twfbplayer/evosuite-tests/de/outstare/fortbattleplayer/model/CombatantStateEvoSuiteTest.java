/*
 * This file was automatically generated by EvoSuite
 */

package de.outstare.fortbattleplayer.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.outstare.fortbattleplayer.model.Area;
import de.outstare.fortbattleplayer.model.CharacterClass;
import de.outstare.fortbattleplayer.model.CombatantState;
import de.outstare.fortbattleplayer.model.Sector;
import de.outstare.fortbattleplayer.model.impl.SimpleArea;
import de.outstare.fortbattleplayer.model.impl.SimpleSector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CombatantStateEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CharacterClass characterClass0 = CharacterClass.WORKER;
      SimpleSector simpleSector0 = new SimpleSector(0, true, true, (-899), (-899), true, 0, characterClass0);
      SimpleArea simpleArea0 = new SimpleArea((-899), 0, (Sector) simpleSector0);
      CombatantState combatantState0 = new CombatantState((Area) simpleArea0, (-899), (Area) simpleArea0, false);
      CombatantState combatantState1 = combatantState0.changePosition((Area) simpleArea0);
      assertEquals("de.outstare.fortbattleplayer.model.CombatantState position=Area -899/0 [occupied by null], healt=-899, target=Area -899/0 [occupied by null], online=false", combatantState0.toString());
      assertEquals("de.outstare.fortbattleplayer.model.CombatantState position=Area -899/0 [occupied by null], healt=-899, target=Area -899/0 [occupied by null], online=false", combatantState1.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      CharacterClass characterClass0 = CharacterClass.WORKER;
      SimpleSector simpleSector0 = new SimpleSector(0, true, true, (-899), (-899), true, 0, characterClass0);
      SimpleArea simpleArea0 = new SimpleArea((-899), 0, (Sector) simpleSector0);
      CombatantState combatantState0 = new CombatantState((Area) simpleArea0, (-899), (Area) simpleArea0, false);
      CombatantState combatantState1 = combatantState0.reduceHealthBy((-899));
      assertEquals("de.outstare.fortbattleplayer.model.CombatantState position=Area -899/0 [occupied by null], healt=0, target=Area -899/0 [occupied by null], online=false", combatantState1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      CombatantState combatantState0 = new CombatantState((Area) null, 1, (Area) null, false);
      CombatantState combatantState1 = combatantState0.changeTarget((Area) null);
      assertEquals(1, combatantState0.getHealth());
      assertEquals("de.outstare.fortbattleplayer.model.CombatantState position=null, healt=1, target=null, online=false", combatantState1.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      CombatantState combatantState0 = new CombatantState((Area) null, 1, (Area) null, false);
      CombatantState combatantState1 = combatantState0.setOnline(false);
      assertEquals("de.outstare.fortbattleplayer.model.CombatantState position=null, healt=1, target=null, online=false", combatantState1.toString());
      assertEquals(1, combatantState0.getHealth());
  }

  @Test
  public void test4()  throws Throwable  {
      CombatantState combatantState0 = new CombatantState((Area) null, 1657, (Area) null, true);
      String string0 = combatantState0.toString();
      assertNotNull(string0);
      assertEquals("de.outstare.fortbattleplayer.model.CombatantState position=null, healt=1657, target=null, online=true", string0);
      assertEquals(true, combatantState0.isGamerOnline());
  }
}
