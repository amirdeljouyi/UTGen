/*
 * This file was automatically generated by EvoSuite
 */

package de.outstare.fortbattleplayer.gui.statistics;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.outstare.fortbattleplayer.gui.statistics.CritTableModel;
import de.outstare.fortbattleplayer.statistics.CriticalHit;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.TableRowSorter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CritTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CritTableModel critTableModel0 = new CritTableModel((List<CriticalHit>) null);
      critTableModel0.findColumn(">&");
      assertEquals(4, critTableModel0.getColumnCount());
  }

  @Test
  public void test1()  throws Throwable  {
      TableRowSorter<CritTableModel> tableRowSorter0 = new TableRowSorter<CritTableModel>();
      List<?> list0 = tableRowSorter0.getSortKeys();
      CritTableModel critTableModel0 = new CritTableModel(list0);
      tableRowSorter0.setModel(critTableModel0);
      assertEquals(4, critTableModel0.getColumnCount());
  }

  @Test
  public void test2()  throws Throwable  {
      CritTableModel critTableModel0 = new CritTableModel((List<CriticalHit>) null);
      String string0 = critTableModel0.getColumnName((-1));
      assertEquals("", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      CritTableModel critTableModel0 = new CritTableModel((List<CriticalHit>) null);
      Class<?> class0 = critTableModel0.getColumnClass((-1));
      assertEquals(1, class0.getModifiers());
  }

  @Test
  public void test4()  throws Throwable  {
      LinkedList<CriticalHit> linkedList0 = new LinkedList<CriticalHit>();
      CritTableModel critTableModel0 = new CritTableModel((List<CriticalHit>) linkedList0);
      linkedList0.add((CriticalHit) null);
      // Undeclared exception!
      try {
        critTableModel0.getValueAt(0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<CriticalHit> linkedList0 = new LinkedList<CriticalHit>();
      CritTableModel critTableModel0 = new CritTableModel((List<CriticalHit>) linkedList0);
      linkedList0.add((CriticalHit) null);
      Object object0 = critTableModel0.getValueAt(0, 1393);
      assertNull(object0);
  }
}
