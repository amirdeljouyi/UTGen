/*
 * This file was automatically generated by EvoSuite
 */

package de.outstare.fortbattleplayer.gui.statistics;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm;
import java.awt.Component;
import java.awt.event.ComponentEvent;
import java.awt.event.FocusEvent;
import java.awt.event.MouseEvent;
import org.jCharts.properties.LineChartProperties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StatisticDiagrammEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[][] doubleArray0 = new double[2][4];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm(".T_3L", ".T_3L", ".T_3L", doubleArray0);
      assertNotNull(statisticDiagramm0);
      
      // Undeclared exception!
      try {
        statisticDiagramm0.createIcon();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      String[] stringArray0 = new String[15];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm("'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", doubleArray0, stringArray0);
      assertNotNull(statisticDiagramm0);
      
      StatisticDiagramm.AsyncImageUpdater statisticDiagramm_AsyncImageUpdater0 = statisticDiagramm0.new AsyncImageUpdater();
      statisticDiagramm_AsyncImageUpdater0.run();
      assertEquals("Thread[Thread-12995,5,Test Execution]", statisticDiagramm_AsyncImageUpdater0.toString());
      assertEquals(19273L, statisticDiagramm_AsyncImageUpdater0.getId());
  }

  @Test
  public void test2()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      String[] stringArray0 = new String[15];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm("'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", doubleArray0, stringArray0);
      assertNotNull(statisticDiagramm0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) statisticDiagramm0, 0, (long) 0, 0, 0, 0, 0, false, 0);
      statisticDiagramm0.componentHidden((ComponentEvent) mouseEvent0);
      assertEquals("java.awt.event.MouseEvent[unknown type,(0,0),absolute(0,0),button=0,clickCount=0] on de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", mouseEvent0.toString());
      assertEquals("de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", statisticDiagramm0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      String[] stringArray0 = new String[15];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm("'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", doubleArray0, stringArray0);
      assertNotNull(statisticDiagramm0);
      
      FocusEvent focusEvent0 = new FocusEvent((Component) statisticDiagramm0, 0, false, (Component) statisticDiagramm0);
      statisticDiagramm0.componentShown((ComponentEvent) focusEvent0);
      assertEquals("java.awt.event.FocusEvent[unknown type,permanent,opposite=null] on de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", focusEvent0.toString());
      assertEquals("de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", statisticDiagramm0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      String[] stringArray0 = new String[15];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm("'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", doubleArray0, stringArray0);
      assertNotNull(statisticDiagramm0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) statisticDiagramm0, 0, (long) 0, 0, 0, 0, 0, false, 0);
      statisticDiagramm0.componentResized((ComponentEvent) mouseEvent0);
      assertEquals("java.awt.event.MouseEvent[unknown type,(0,0),absolute(0,0),button=0,clickCount=0] on de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", mouseEvent0.toString());
      assertEquals(333, statisticDiagramm0.getHeight());
  }

  @Test
  public void test5()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      String[] stringArray0 = new String[15];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm("'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", doubleArray0, stringArray0);
      assertNotNull(statisticDiagramm0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) statisticDiagramm0, 0, (long) 0, 0, 0, 0, 0, false, 0);
      statisticDiagramm0.componentMoved((ComponentEvent) mouseEvent0);
      assertEquals("de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", statisticDiagramm0.toString());
      assertEquals("java.awt.event.MouseEvent[unknown type,(0,0),absolute(0,0),button=0,clickCount=0] on de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", mouseEvent0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      double[][] doubleArray0 = new double[6][5];
      StatisticDiagramm statisticDiagramm0 = null;
      try {
        statisticDiagramm0 = new StatisticDiagramm("X'fFpE?+", "X'fFpE?+", "X'fFpE?+", doubleArray0);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
        /*
         * each team must have a data set!
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      double[][] doubleArray0 = new double[2][4];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm(".T_3L", ".T_3L", ".T_3L", doubleArray0);
      assertNotNull(statisticDiagramm0);
      
      LineChartProperties lineChartProperties0 = (LineChartProperties)statisticDiagramm0.defaultLineChartProperties();
      assertEquals("de.outstare.fortbattleplayer.gui.statistics.StatisticDiagramm[,0,0,600x333,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]", statisticDiagramm0.toString());
      assertNotNull(lineChartProperties0);
      assertEquals(600, statisticDiagramm0.getWidth());
  }

  @Test
  public void test8()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      String[] stringArray0 = new String[15];
      StatisticDiagramm statisticDiagramm0 = new StatisticDiagramm("'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", "'@NO^?N^<<)90UU;", doubleArray0, stringArray0);
      statisticDiagramm0.setBounds((-14), (-14), (-14), 0);
      MouseEvent mouseEvent0 = new MouseEvent((Component) statisticDiagramm0, 0, (long) 0, 0, 0, 0, 0, false, 0);
      statisticDiagramm0.componentResized((ComponentEvent) mouseEvent0);
      assertEquals(false, mouseEvent0.isConsumed());
  }
}
