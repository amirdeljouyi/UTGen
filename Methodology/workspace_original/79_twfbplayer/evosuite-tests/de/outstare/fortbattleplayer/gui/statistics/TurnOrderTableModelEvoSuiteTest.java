/*
 * This file was automatically generated by EvoSuite
 */

package de.outstare.fortbattleplayer.gui.statistics;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.outstare.fortbattleplayer.gui.statistics.TurnOrderTableModel;
import de.outstare.fortbattleplayer.model.Combatant;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.TableRowSorter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TurnOrderTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<Combatant> linkedList0 = new LinkedList<Combatant>();
      TurnOrderTableModel turnOrderTableModel0 = new TurnOrderTableModel((List<Combatant>) linkedList0);
      String string0 = turnOrderTableModel0.getColumnName(65);
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TableRowSorter<TurnOrderTableModel> tableRowSorter0 = new TableRowSorter<TurnOrderTableModel>();
      List<?> list0 = tableRowSorter0.getSortKeys();
      TurnOrderTableModel turnOrderTableModel0 = new TurnOrderTableModel(list0);
      int int0 = turnOrderTableModel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      TableRowSorter<TurnOrderTableModel> tableRowSorter0 = new TableRowSorter<TurnOrderTableModel>();
      List<?> list0 = tableRowSorter0.getSortKeys();
      TurnOrderTableModel turnOrderTableModel0 = new TurnOrderTableModel(list0);
      int int0 = turnOrderTableModel0.findColumn("");
      assertEquals(2, turnOrderTableModel0.getColumnCount());
      assertEquals((-1), int0);
  }

  @Test
  public void test3()  throws Throwable  {
      TurnOrderTableModel turnOrderTableModel0 = new TurnOrderTableModel((List<Combatant>) null);
      Integer integer0 = (Integer)turnOrderTableModel0.getValueAt(0, 0);
      assertEquals(1, (int)integer0);
  }

  @Test
  public void test4()  throws Throwable  {
      TableRowSorter<TurnOrderTableModel> tableRowSorter0 = new TableRowSorter<TurnOrderTableModel>();
      List<?> list0 = tableRowSorter0.getSortKeys();
      TurnOrderTableModel turnOrderTableModel0 = new TurnOrderTableModel(list0);
      // Undeclared exception!
      try {
        turnOrderTableModel0.getValueAt((-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * invalid column index: -1
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TurnOrderTableModel turnOrderTableModel0 = new TurnOrderTableModel((List<Combatant>) null);
      // Undeclared exception!
      try {
        turnOrderTableModel0.getValueAt(2, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
