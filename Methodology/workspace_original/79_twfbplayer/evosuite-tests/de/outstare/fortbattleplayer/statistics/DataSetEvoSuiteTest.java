/*
 * This file was automatically generated by EvoSuite
 */

package de.outstare.fortbattleplayer.statistics;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.outstare.fortbattleplayer.model.CombatantSide;
import de.outstare.fortbattleplayer.statistics.DataAggregationType;
import de.outstare.fortbattleplayer.statistics.DataSet;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DataSetEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DataSet dataSet0 = new DataSet();
      assertNotNull(dataSet0);
      
      String string0 = dataSet0.toString();
      assertEquals("class de.outstare.fortbattleplayer.statistics.DataSet values A: []", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DataSet dataSet0 = new DataSet();
      assertNotNull(dataSet0);
      
      CombatantSide combatantSide0 = CombatantSide.ATTACKER;
      Integer integer0 = new Integer(1147);
      dataSet0.addData(combatantSide0, integer0);
      int int0 = dataSet0.countOfValuesWith((Integer) 1147, combatantSide0);
      assertEquals("class de.outstare.fortbattleplayer.statistics.DataSet values A: [1147]", dataSet0.toString());
      assertEquals(1, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      DataSet dataSet0 = new DataSet();
      assertNotNull(dataSet0);
      
      CombatantSide combatantSide0 = CombatantSide.ATTACKER;
      // Undeclared exception!
      try {
        dataSet0.addData(combatantSide0, (Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * value cannot be null!
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DataSet dataSet0 = new DataSet();
      assertNotNull(dataSet0);
      
      DataAggregationType dataAggregationType0 = DataAggregationType.SUM;
      dataSet0.aggregate((CombatantSide) null, dataAggregationType0);
      assertEquals("class de.outstare.fortbattleplayer.statistics.DataSet values A: []", dataSet0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      DataSet dataSet0 = new DataSet();
      assertNotNull(dataSet0);
      
      CombatantSide combatantSide0 = CombatantSide.ATTACKER;
      dataSet0.addData(combatantSide0, (Integer) 1);
      int int0 = dataSet0.countOfValuesWith((Integer) 1147, combatantSide0);
      assertEquals("class de.outstare.fortbattleplayer.statistics.DataSet values A: [1]", dataSet0.toString());
      assertEquals(0, int0);
  }
}
