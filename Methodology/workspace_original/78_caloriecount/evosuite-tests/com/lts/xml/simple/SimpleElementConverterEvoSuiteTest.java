/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.xml.simple;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.xml.simple.ConversionException;
import com.lts.xml.simple.SimpleElement;
import com.lts.xml.simple.SimpleElementConverter;
import javax.imageio.metadata.IIOMetadataNode;
import org.junit.BeforeClass;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoSuiteRunner.class)
public class SimpleElementConverterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SimpleElementConverter simpleElementConverter0 = new SimpleElementConverter();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      SimpleElement simpleElement0 = simpleElementConverter0.toSimpleElement((Element) iIOMetadataNode0);
      // Undeclared exception!
      try {
        simpleElementConverter0.toElement(simpleElement0, (Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SimpleElementConverter simpleElementConverter0 = new SimpleElementConverter();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("_3z6");
      SimpleElement simpleElement0 = simpleElementConverter0.toSimpleElement((Element) iIOMetadataNode0);
      assertEquals("_3z6", simpleElement0.toString());
      assertNotNull(simpleElement0);
  }

  @Test
  public void test2()  throws Throwable  {
      SimpleElementConverter simpleElementConverter0 = new SimpleElementConverter();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild((Node) iIOMetadataNode0);
      // Undeclared exception!
      try {
        simpleElementConverter0.toSimpleElement((Element) iIOMetadataNode0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SimpleElementConverter simpleElementConverter0 = new SimpleElementConverter();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttributeNS("_3z6", "_3z6", "_3z6");
      SimpleElement simpleElement0 = simpleElementConverter0.toSimpleElement((Element) iIOMetadataNode0);
      assertEquals("<null>[_3z6=_3z6]", simpleElement0.toString());
      assertNotNull(simpleElement0);
  }
}
