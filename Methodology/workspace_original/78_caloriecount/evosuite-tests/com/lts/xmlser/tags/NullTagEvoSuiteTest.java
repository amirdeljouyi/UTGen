/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.xmlser.tags;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.LTSException;
import com.lts.io.IndentingPrintWriter;
import com.lts.xmlser.XmlSerializer;
import com.lts.xmlser.tags.NullTag;
import java.io.BufferedOutputStream;
import java.io.OutputStream;
import javax.imageio.metadata.IIOMetadataNode;
import org.junit.BeforeClass;
import org.w3c.dom.Element;

@RunWith(EvoSuiteRunner.class)
public class NullTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NullTag nullTag0 = new NullTag();
      String string0 = nullTag0.getTagName((Object) null);
      assertEquals("null", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      NullTag nullTag0 = new NullTag();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Object object0 = nullTag0.read(xmlSerializer0, (Element) iIOMetadataNode0, true);
      assertNull(object0);
  }

  @Test
  public void test2()  throws Throwable  {
      NullTag nullTag0 = new NullTag();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      IndentingPrintWriter indentingPrintWriter0 = new IndentingPrintWriter((OutputStream) bufferedOutputStream0);
      nullTag0.write(xmlSerializer0, indentingPrintWriter0, "> X*w0X|ck", (Object) "ref");
      assertEquals(true, indentingPrintWriter0.needToPrintPrefix());
  }

  @Test
  public void test3()  throws Throwable  {
      NullTag nullTag0 = new NullTag();
      // Undeclared exception!
      try {
        nullTag0.toValue("");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"\"
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      NullTag nullTag0 = new NullTag();
      String string0 = nullTag0.getTagClassName();
      assertEquals("java.lang.Short", string0);
  }
}
