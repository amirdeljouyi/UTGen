/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.xmlser.tags;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.LTSException;
import com.lts.io.IndentingPrintWriter;
import com.lts.xmlser.XmlSerializer;
import com.lts.xmlser.tags.StringTag;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.io.Writer;
import javax.imageio.metadata.IIOMetadataNode;
import org.junit.BeforeClass;
import org.w3c.dom.Element;

@RunWith(EvoSuiteRunner.class)
public class StringTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringTag stringTag0 = new StringTag();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Object object0 = stringTag0.read(xmlSerializer0, (Element) iIOMetadataNode0, false);
      assertNull(object0);
  }

  @Test
  public void test1()  throws Throwable  {
      StringTag stringTag0 = new StringTag();
      String string0 = stringTag0.getTagName((Object) "class");
      assertEquals("string", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      StringTag stringTag0 = new StringTag();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      IndentingPrintWriter indentingPrintWriter0 = new IndentingPrintWriter((OutputStream) pipedOutputStream0);
      stringTag0.write(xmlSerializer0, indentingPrintWriter0, ", in tag ", (Object) "null");
      assertEquals(false, indentingPrintWriter0.getSuppressPrefix());
      assertEquals(true, indentingPrintWriter0.needToPrintPrefix());
      assertEquals(false, indentingPrintWriter0.suppressPrefix());
  }

  @Test
  public void test3()  throws Throwable  {
      StringTag stringTag0 = XmlSerializer.STRING_TAG;
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      IndentingPrintWriter indentingPrintWriter0 = new IndentingPrintWriter((Writer) stringWriter0);
      stringTag0.write(xmlSerializer0, indentingPrintWriter0, "", (Object) "array", true);
      assertEquals("< class=\"java.lang.String\">array</>\n", stringWriter0.toString());
      assertEquals(true, indentingPrintWriter0.needToPrintPrefix());
  }
}
