/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.xmlser.tags;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.LTSException;
import com.lts.io.IndentingPrintWriter;
import com.lts.xmlser.XmlSerializer;
import com.lts.xmlser.tags.ByteTag;
import com.lts.xmlser.tags.LongTag;
import com.lts.xmlser.tags.ShortTag;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import javax.imageio.metadata.IIOMetadataNode;
import org.junit.BeforeClass;
import org.w3c.dom.Element;

@RunWith(EvoSuiteRunner.class)
public class PrimitiveTagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ByteTag byteTag0 = new ByteTag();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      // Undeclared exception!
      try {
        byteTag0.write(xmlSerializer0, (IndentingPrintWriter) null, "q(#U`xd", (Object) "ref", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      LongTag longTag0 = new LongTag();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      try {
        longTag0.read(xmlSerializer0, (Element) iIOMetadataNode0, true);
        fail("Expecting exception: LTSException");
      } catch(LTSException e) {
        /*
         * Empty or null value for null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ShortTag shortTag0 = XmlSerializer.SHORT_TAG;
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      IndentingPrintWriter indentingPrintWriter0 = new IndentingPrintWriter((OutputStream) pipedOutputStream0);
      shortTag0.write(xmlSerializer0, indentingPrintWriter0, "gw1^`tGnoNx?", (Object) "id");
      assertEquals(true, indentingPrintWriter0.checkError());
  }
}
