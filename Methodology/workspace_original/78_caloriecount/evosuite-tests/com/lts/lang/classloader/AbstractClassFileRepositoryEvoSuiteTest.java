/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.lang.classloader;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.LTSException;
import com.lts.io.ImprovedFile;
import com.lts.lang.classloader.DirectoryClassRepository;
import java.io.File;
import java.io.IOException;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AbstractClassFileRepositoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DirectoryClassRepository directoryClassRepository0 = new DirectoryClassRepository();
      // Undeclared exception!
      try {
        directoryClassRepository0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DirectoryClassRepository directoryClassRepository0 = new DirectoryClassRepository();
      File file0 = directoryClassRepository0.getRepositoryFile();
      assertNull(file0);
  }

  @Test
  public void test2()  throws Throwable  {
      DirectoryClassRepository directoryClassRepository0 = new DirectoryClassRepository();
      byte[] byteArray0 = directoryClassRepository0.getClassData("");
      assertNull(byteArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      DirectoryClassRepository directoryClassRepository0 = new DirectoryClassRepository();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      File file0 = improvedFile0.getCanonicalFile();
      directoryClassRepository0.initialize(file0);
      List<Object> list0 = directoryClassRepository0.getClassNames();
      assertNotNull(list0);
      assertEquals(0, list0.size());
  }
}
