/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.LTSException;
import com.lts.io.DirectoryScanner;
import java.io.File;
import java.io.IOException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DirectoryScannerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = directoryScanner0.getBasedir();
      assertNull(file0);
  }

  @Test
  public void test1()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.matchPatternStart("#<o.r1[`5C@I=&*ki", "#<o.r1[`5C@I=&*ki");
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "C8S";
      stringArray0[1] = "9m*H3YALH2";
      stringArray0[2] = "d([6nW";
      stringArray0[3] = "/YSaUrYkF P!&/Np~";
      stringArray0[4] = "";
      directoryScanner0.setIncludes(stringArray0);
      boolean boolean0 = directoryScanner0.couldHoldIncluded("R'7Q\";lj2[M~Y Mf,]k");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "C8S";
      stringArray0[1] = "9m*H3YALH2";
      stringArray0[2] = "d([6nW";
      stringArray0[3] = "/YSaUrYkF P!&/Np~";
      stringArray0[4] = "";
      directoryScanner0.setIncludes(stringArray0);
      boolean boolean0 = directoryScanner0.couldHoldIncluded("");
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.matchPatternStart("**/*~/", "**/*~/");
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = new File("+0");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.scan();
      directoryScanner0.scan();
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.matchPath("**/*~", "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.matchPath("=\"w~3}(,", "=\"w~3}(,");
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.matchPath("/**/CVS", "/**/CVS");
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      directoryScanner0.addDefaultExcludes();
      boolean boolean0 = directoryScanner0.isExcluded("srQe3nQUoV(");
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.match(".+?LN<a5M4ZV&m", ".+?LN<a5M4ZV&m");
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "C ";
      stringArray0[1] = " 5Vjch. 7wJ#BA}*c";
      stringArray0[2] = "/T!pWRa OFCZ3c\"";
      stringArray0[3] = "0";
      stringArray0[4] = "*~*";
      stringArray0[5] = "";
      stringArray0[6] = "**/*~";
      directoryScanner0.setExcludes(stringArray0);
      boolean boolean0 = directoryScanner0.isExcluded("}");
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.matchPatternStart("*/V", "*/V");
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.match("^GbS9+*SmA2'Q7n", "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.match("**#*#", "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      boolean boolean0 = DirectoryScanner.match("**/*~/", "**/*~/");
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "[uF$SS~";
      stringArray0[1] = "zmsa#=9(M";
      stringArray0[2] = "";
      stringArray0[3] = "[";
      stringArray0[4] = "";
      stringArray0[5] = "u/";
      // Undeclared exception!
      try {
        directoryScanner0.setIncludes(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test17()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "0X|ckB/XFyX//";
      // Undeclared exception!
      try {
        directoryScanner0.setExcludes(stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      // Undeclared exception!
      try {
        directoryScanner0.scan();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No basedir set
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      directoryScanner0.setBasedir("*-*/C8S");
      // Undeclared exception!
      try {
        directoryScanner0.scan();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * basedir does not exist
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = new File("+0");
      File file1 = file0.getCanonicalFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.scan();
      String[] stringArray0 = directoryScanner0.getExcludedFiles();
      String[] stringArray1 = directoryScanner0.getNotIncludedDirectories();
      assertNotSame(stringArray1, stringArray0);
  }

  @Test
  public void test21()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[10];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "^";
      stringArray0[4] = "";
      stringArray0[6] = "^";
      stringArray0[0] = "";
      stringArray0[5] = "^";
      stringArray0[7] = "";
      stringArray0[8] = "";
      stringArray0[9] = "X6]~5Xl/p?It";
      directoryScanner0.setIncludes(stringArray0);
      File file0 = new File("^");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.scan();
      String[] stringArray1 = directoryScanner0.getNotIncludedDirectories();
      assertNotSame(stringArray1, stringArray0);
  }

  @Test
  public void test22()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = new File(".hfcaHJ0y", "IO error scanning directory ");
      try {
        directoryScanner0.scandir(file0, "", true);
        fail("Expecting exception: LTSException");
      } catch(LTSException e) {
        /*
         * IO error scanning directory /mnt/fastdata/ac1gf/SF110/dist/78_caloriecount/.hfcaHJ0y/IO error scanning directory 
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = new File("+0");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.scan();
      directoryScanner0.scandir(file2, "", false);
      assertEquals(1372806611000L, file2.lastModified());
  }

  @Test
  public void test24()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = new File("+0");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.scan();
      String[] stringArray0 = directoryScanner0.getIncludedFiles();
      assertNotNull(stringArray0);
  }

  @Test
  public void test25()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "ck>?Y|gV@>jrpr)91LO";
      stringArray0[2] = "ck>?Y|gV@>jrpr)91LO";
      stringArray0[3] = "7A-JOl^El Ptk";
      File file0 = new File("7A-JOl^El Ptk");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.setIncludes(stringArray0);
      directoryScanner0.scan();
      String[] stringArray1 = directoryScanner0.getNotIncludedFiles();
      assertNotSame(stringArray1, stringArray0);
  }

  @Test
  public void test26()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      File file0 = new File("+0");
      File file1 = file0.getCanonicalFile();
      File file2 = file1.getParentFile();
      directoryScanner0.setBasedir(file2);
      directoryScanner0.scan();
      String[] stringArray0 = directoryScanner0.getIncludedDirectories();
      assertNotNull(stringArray0);
  }

  @Test
  public void test27()  throws Throwable  {
      DirectoryScanner directoryScanner0 = new DirectoryScanner();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "**/*~";
      stringArray0[1] = "**/*~";
      stringArray0[2] = "";
      stringArray0[3] = "F'IiU!(%";
      stringArray0[4] = "D/ku*TIb";
      directoryScanner0.setExcludes(stringArray0);
      directoryScanner0.addDefaultExcludes();
  }
}
