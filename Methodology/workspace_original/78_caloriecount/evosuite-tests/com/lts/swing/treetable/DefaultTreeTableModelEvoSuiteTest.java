/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.treetable;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.treetable.DefaultTreeTableModel;
import java.util.Map;
import java.util.Properties;
import javax.swing.event.TreeModelListener;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.table.TableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultTreeTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      defaultTreeTableModel0.unmapNodeToRow((TreeNode) defaultMutableTreeNode0);
      assertEquals(true, defaultMutableTreeNode0.isLeaf());
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.setValueAt((Object) "rolloverEnabled", (Object) "rolloverEnabled", 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.getChild((Object) "JScrollBar.isFreeStanding", 0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to javax.swing.tree.TreeNode
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.getChildCount((Object) defaultTreeTableModel0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * com.lts.swing.treetable.DefaultTreeTableModel cannot be cast to javax.swing.tree.TreeNode
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      DefaultMutableTreeNode defaultMutableTreeNode0 = (DefaultMutableTreeNode)defaultTreeTableModel0.getRoot();
      assertNotNull(defaultMutableTreeNode0);
      
      boolean boolean0 = defaultTreeTableModel0.isCellEditable((Object) defaultMutableTreeNode0, 0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.valueForPathChanged((TreePath) null, (Object) "11111111111111111111100110111000");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      defaultTreeTableModel0.addTreeModelListener((TreeModelListener) basicTreeUI_TreeModelHandler0);
      assertEquals(0, defaultTreeTableModel0.getColumnCount());
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      defaultTreeTableModel0.setTreeModel((TreeModel) defaultTreeTableModel0);
      assertEquals(0, defaultTreeTableModel0.getColumnCount());
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      defaultTreeTableModel0.mapNodeToRow((TreeNode) null, 0);
      int int0 = defaultTreeTableModel0.nodeToRow((Object) null);
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      defaultTreeTableModel0.removeTreeModelListener((TreeModelListener) basicTreeUI_TreeModelHandler0);
      assertEquals(0, defaultTreeTableModel0.getColumnCount());
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.getIndexOfChild((Object) defaultTreeTableModel0, (Object) defaultTreeTableModel0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * com.lts.swing.treetable.DefaultTreeTableModel cannot be cast to javax.swing.tree.TreeNode
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      String string0 = defaultTreeTableModel0.getColumnName(0);
      assertEquals("A", string0);
      assertNotNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      defaultTreeTableModel0.setTableModel((TableModel) null);
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      Properties properties0 = new Properties();
      defaultTreeTableModel0.setNodeToRowMap((Map) properties0);
      assertEquals(0, defaultTreeTableModel0.getColumnCount());
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      DefaultMutableTreeNode defaultMutableTreeNode0 = (DefaultMutableTreeNode)defaultTreeTableModel0.getRoot();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.getValueAt((Object) defaultMutableTreeNode0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      // Undeclared exception!
      try {
        defaultTreeTableModel0.isLeaf((Object) defaultTreeTableModel0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * com.lts.swing.treetable.DefaultTreeTableModel cannot be cast to javax.swing.tree.TreeNode
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      int int0 = defaultTreeTableModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      Class<Object> class0 = defaultTreeTableModel0.getColumnClass((-1608));
      assertNotNull(class0);
      assertEquals("class java.lang.Object", class0.toString());
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultTreeTableModel defaultTreeTableModel0 = new DefaultTreeTableModel();
      Class<Object> class0 = defaultTreeTableModel0.getColumnClass(0);
      assertEquals(1537, class0.getModifiers());
  }
}
