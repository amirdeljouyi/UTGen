/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.treetable;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.treetable.DefaultTableTreeModel;
import java.util.Map;
import javax.print.attribute.standard.PrinterStateReasons;
import javax.swing.event.TreeModelListener;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.table.TableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DefaultTableTreeModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getColumnCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getChild((Object) "content", (-151));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getRoot();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      defaultTableTreeModel0.setTableModel((TableModel) null);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode((Object) null, false);
      // Undeclared exception!
      try {
        defaultTableTreeModel0.mapNodeToRow((TreeNode) defaultMutableTreeNode0, 14);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getIndexOfChild((Object) "MnemonicKey", (Object) "MnemonicKey");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      PrinterStateReasons printerStateReasons0 = new PrinterStateReasons();
      defaultTableTreeModel0.setNodeToRowMap((Map) printerStateReasons0);
      int int0 = defaultTableTreeModel0.nodeToRow((Object) null);
      assertEquals((-1), int0);
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.addTreeModelListener((TreeModelListener) basicTreeUI_TreeModelHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.unmapNodeToRow((TreeNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.isLeaf((Object) "contentAreaFilled");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.isCellEditable((Object) "glassPane", 689);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getValueAt((Object) "media", 11);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.removeTreeModelListener((TreeModelListener) basicTreeUI_TreeModelHandler0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.setValueAt((Object) "AcceleratorKey", (Object) null, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getColumnName(606);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getChildCount((Object) defaultTableTreeModel0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      defaultTableTreeModel0.setTreeModel((TreeModel) defaultTableTreeModel0);
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.valueForPathChanged((TreePath) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      // Undeclared exception!
      try {
        defaultTableTreeModel0.getColumnClass(34);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultTableTreeModel defaultTableTreeModel0 = new DefaultTableTreeModel();
      Class<Object> class0 = defaultTableTreeModel0.getColumnClass(0);
      assertEquals("TreeTableModel", class0.getSimpleName());
  }
}
