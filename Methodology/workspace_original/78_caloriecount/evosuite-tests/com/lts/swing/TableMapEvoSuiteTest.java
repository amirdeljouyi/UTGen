/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.TableMap;
import java.util.Vector;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      TableModelEvent tableModelEvent0 = new TableModelEvent((TableModel) tableMap0, 1664);
      tableMap0.tableChanged(tableModelEvent0);
      assertEquals(0, tableMap0.getRowCount());
  }

  @Test
  public void test1()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      tableMap0.setModel((TableModel) defaultTableModel0);
      int int0 = tableMap0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      // Undeclared exception!
      try {
        tableMap0.getColumnClass((-896));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      // Undeclared exception!
      try {
        tableMap0.setValueAt((Object) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      // Undeclared exception!
      try {
        tableMap0.getColumnName(1011);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      TableModel tableModel0 = tableMap0.getModel();
      assertNull(tableModel0);
  }

  @Test
  public void test6()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      // Undeclared exception!
      try {
        tableMap0.isCellEditable((-130), 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      // Undeclared exception!
      try {
        tableMap0.getValueAt(0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      int int0 = tableMap0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      tableMap0.setModel((TableModel) defaultTableModel0);
      int int0 = tableMap0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      TableMap tableMap0 = new TableMap();
      tableMap0.findColumn("6");
      assertEquals(0, tableMap0.getColumnCount());
  }
}
