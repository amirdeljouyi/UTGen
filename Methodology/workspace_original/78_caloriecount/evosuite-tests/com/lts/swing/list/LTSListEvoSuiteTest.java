/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.list;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.list.LTSList;
import com.lts.swing.list.ListListener;
import com.lts.swing.list.ListListenerAdaptor;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LTSListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSMouseListener lTSList_LTSMouseListener0 = lTSList0.new LTSMouseListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) lTSList0, 20, (long) 20, 20, 20, 20, 20, true, 20, 20, 20);
      lTSList_LTSMouseListener0.mousePressed((MouseEvent) mouseWheelEvent0);
      assertEquals(20, mouseWheelEvent0.getX());
  }

  @Test
  public void test1()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSKeyAdapter lTSList_LTSKeyAdapter0 = lTSList0.new LTSKeyAdapter(lTSList0);
      KeyEvent keyEvent0 = new KeyEvent((Component) lTSList0, 10, (long) 10, 10, 10, 'l');
      lTSList_LTSKeyAdapter0.keyPressed(keyEvent0);
      assertEquals(10, keyEvent0.getModifiers());
  }

  @Test
  public void test2()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSMouseListener lTSList_LTSMouseListener0 = lTSList0.new LTSMouseListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) lTSList0, (-16), (-27L), (-16), (-16), (-16), (-16), true, (-16), (-16), 0);
      lTSList_LTSMouseListener0.mouseClicked((MouseEvent) mouseWheelEvent0);
      assertEquals(false, mouseWheelEvent0.isShiftDown());
  }

  @Test
  public void test3()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      ListListenerAdaptor listListenerAdaptor0 = new ListListenerAdaptor(lTSList0);
      lTSList0.removeListListener((ListListener) listListenerAdaptor0);
      assertEquals(-1, lTSList0.getMaxSelectionIndex());
  }

  @Test
  public void test4()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSKeyAdapter lTSList_LTSKeyAdapter0 = lTSList0.new LTSKeyAdapter(lTSList0);
      KeyEvent keyEvent0 = new KeyEvent((Component) lTSList0, 12, (long) 12, 12, 155, 'l');
      lTSList_LTSKeyAdapter0.keyPressed(keyEvent0);
      assertEquals(false, keyEvent0.isAltGraphDown());
  }

  @Test
  public void test5()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      lTSList0.addSelectionInterval(1059, 1);
      LTSList.LTSMouseListener lTSList_LTSMouseListener0 = lTSList0.new LTSMouseListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) lTSList0, 10, (long) 10, 10, 10, 0, 0, 1, 10, false, 10, 10, 0);
      lTSList_LTSMouseListener0.mouseClicked((MouseEvent) mouseWheelEvent0);
      assertEquals(false, mouseWheelEvent0.isPopupTrigger());
  }

  @Test
  public void test6()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      lTSList0.deleteEntry((-1525));
      assertEquals(true, lTSList0.isOptimizedDrawingEnabled());
  }

  @Test
  public void test7()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSMouseListener lTSList_LTSMouseListener0 = lTSList0.new LTSMouseListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) lTSList0, (-16), (-27L), (-16), (-16), (-16), (-16), true, (-16), (-16), 0);
      lTSList_LTSMouseListener0.mouseReleased((MouseEvent) mouseWheelEvent0);
      assertEquals("java.awt.event.MouseWheelEvent[unknown type,(-16,-16),absolute(0,0),button=0,modifiers=Alt Graph+Button1,extModifiers=Meta+Ctrl+Alt+Shift+Alt Graph+Button1+Button2+Button3,clickCount=-16,scrollType=unknown scroll type,scrollAmount=-16,wheelRotation=0] on com.lts.swing.list.LTSList[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=50331944,maximumSize=,minimumSize=,preferredSize=,fixedCellHeight=-1,fixedCellWidth=-1,horizontalScrollIncrement=-1,selectionBackground=javax.swing.plaf.ColorUIResource[r=184,g=207,b=229],selectionForeground=sun.swing.PrintColorUIResource[r=51,g=51,b=51],visibleRowCount=8,layoutOrientation=0]", mouseWheelEvent0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSMouseListener lTSList_LTSMouseListener0 = lTSList0.new LTSMouseListener();
      MouseEvent mouseEvent0 = new MouseEvent((Component) lTSList0, 1, (long) 1, 1, 1, 1, 1059, false, 1);
      lTSList_LTSMouseListener0.mouseReleased(mouseEvent0);
      assertEquals(false, mouseEvent0.isPopupTrigger());
  }

  @Test
  public void test9()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList.LTSKeyAdapter lTSList_LTSKeyAdapter0 = lTSList0.new LTSKeyAdapter(lTSList0);
      KeyEvent keyEvent0 = new KeyEvent((Component) lTSList0, (-952), 1675L, (-952), (-952), '-', 0);
      lTSList_LTSKeyAdapter0.keyPressed(keyEvent0);
      assertEquals(-952, keyEvent0.getID());
  }

  @Test
  public void test10()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      lTSList0.initialize();
      assertEquals(-1, lTSList0.getMaxSelectionIndex());
  }

  @Test
  public void test11()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      LTSList lTSList1 = new LTSList();
      LTSList.LTSMouseListener lTSList_LTSMouseListener0 = lTSList1.new LTSMouseListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) lTSList0, 293, (long) 293, 293, 293, 293, 293, false, 293, 293, 293);
      lTSList_LTSMouseListener0.mouseClicked((MouseEvent) mouseWheelEvent0);
      assertEquals(37, mouseWheelEvent0.getModifiers());
  }

  @Test
  public void test12()  throws Throwable  {
      LTSList lTSList0 = new LTSList();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) lTSList0, 194, (long) 194, 194, 194, 194, 194, 194, 194, true, 194, 194, 194);
      lTSList0.doubleMouseClick((MouseEvent) mouseWheelEvent0);
      assertEquals(0, lTSList0.getDebugGraphicsOptions());
  }
}
