/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.SimpleGridBagConstraint;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SimpleGridBagConstraintEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.horizontalConstraint((-1), 10);
      assertEquals(0.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertNotNull(simpleGridBagConstraint0);
      assertEquals((-1), simpleGridBagConstraint0.gridx);
      assertEquals(1, simpleGridBagConstraint0.gridheight);
      assertEquals(10, simpleGridBagConstraint0.gridy);
      assertEquals(2, simpleGridBagConstraint0.fill);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(0, simpleGridBagConstraint0.ipady);
  }

  @Test
  public void test1()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = new SimpleGridBagConstraint();
      assertEquals(0, simpleGridBagConstraint0.getFill());
      assertEquals(0, simpleGridBagConstraint0.getXPad());
      assertEquals(1.0, simpleGridBagConstraint0.getXWeight(), 0.01D);
      assertEquals(0, simpleGridBagConstraint0.getGridX());
      assertEquals(0, simpleGridBagConstraint0.getGridY());
      assertEquals(10, simpleGridBagConstraint0.getAnchor());
      assertEquals(1.0, simpleGridBagConstraint0.getYWeight(), 0.01D);
      assertEquals(0, simpleGridBagConstraint0.getYPad());
      assertEquals(1, simpleGridBagConstraint0.getWidth());
      assertEquals(1, simpleGridBagConstraint0.getHeight());
  }

  @Test
  public void test2()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.fillConstraint(0, 0, (-686));
      assertEquals(1, simpleGridBagConstraint0.fill);
      assertEquals(0, simpleGridBagConstraint0.gridy);
      assertNotNull(simpleGridBagConstraint0);
      assertEquals(0, simpleGridBagConstraint0.gridx);
  }

  @Test
  public void test3()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.verticalConstraint(0, 0, 1653);
      GridBagConstraints gridBagConstraints0 = simpleGridBagConstraint0.createButton(1781, (-1));
      assertEquals(0, simpleGridBagConstraint0.gridx);
      assertEquals(3, simpleGridBagConstraint0.fill);
      assertEquals(0, simpleGridBagConstraint0.gridy);
      assertEquals(0, gridBagConstraints0.anchor);
      assertEquals(0, gridBagConstraints0.ipady);
      assertEquals(0, gridBagConstraints0.ipadx);
      assertEquals(0, gridBagConstraints0.gridwidth);
      assertEquals((-1), gridBagConstraints0.gridy);
      assertEquals(0, gridBagConstraints0.gridheight);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(0, gridBagConstraints0.fill);
      assertEquals(1781, gridBagConstraints0.gridx);
      assertEquals(0, simpleGridBagConstraint0.getGridY());
      assertEquals(0, simpleGridBagConstraint0.getGridX());
  }

  @Test
  public void test4()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.verticalConstraint((-844), (-844), (Insets) null);
      assertEquals(0, simpleGridBagConstraint0.ipadx);
      assertEquals(1.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals(1, simpleGridBagConstraint0.gridheight);
      assertEquals(0, simpleGridBagConstraint0.ipady);
      assertEquals(1, simpleGridBagConstraint0.gridwidth);
      assertEquals((-844), simpleGridBagConstraint0.gridx);
      assertEquals(0.0, simpleGridBagConstraint0.weightx, 0.01D);
      assertEquals((-844), simpleGridBagConstraint0.gridy);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(3, simpleGridBagConstraint0.fill);
  }

  @Test
  public void test5()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.buttonConstraint(400, 0);
      assertEquals(0.0, simpleGridBagConstraint0.weightx, 0.01D);
      assertEquals(0.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals(0, simpleGridBagConstraint0.gridy);
      assertNotNull(simpleGridBagConstraint0);
      assertEquals(1, simpleGridBagConstraint0.gridwidth);
      assertEquals(0, simpleGridBagConstraint0.ipady);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(400, simpleGridBagConstraint0.gridx);
  }

  @Test
  public void test6()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.labelConstraint(0, (-1808), 1);
      assertEquals(17, simpleGridBagConstraint0.anchor);
      assertEquals((-1808), simpleGridBagConstraint0.gridy);
      assertEquals(0.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals(0, simpleGridBagConstraint0.gridx);
  }

  @Test
  public void test7()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.horizontalConstraint(441, (-1107), (-1808));
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(441, simpleGridBagConstraint0.gridx);
      assertEquals(1, simpleGridBagConstraint0.gridwidth);
      assertEquals((-1107), simpleGridBagConstraint0.gridy);
      assertEquals(1.0, simpleGridBagConstraint0.weightx, 0.01D);
      assertEquals(0.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals(2, simpleGridBagConstraint0.fill);
  }

  @Test
  public void test8()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.fillConstraint((-1808), (-1808));
      assertNotNull(simpleGridBagConstraint0);
      assertEquals(1.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals((-1808), simpleGridBagConstraint0.gridy);
      assertEquals(1.0, simpleGridBagConstraint0.weightx, 0.01D);
      assertEquals((-1808), simpleGridBagConstraint0.gridx);
  }

  @Test
  public void test9()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.titleConstraint(0, 262);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(0, simpleGridBagConstraint0.ipadx);
      assertEquals(0, simpleGridBagConstraint0.ipady);
      assertEquals(262, simpleGridBagConstraint0.gridy);
      assertNotNull(simpleGridBagConstraint0);
      assertEquals(0, simpleGridBagConstraint0.gridx);
  }

  @Test
  public void test10()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.titleConstraint(0, (-187), 0);
      GridBagConstraints gridBagConstraints0 = simpleGridBagConstraint0.createButton(0, (-1), 0);
      assertEquals((-1), gridBagConstraints0.gridy);
      assertEquals(0, gridBagConstraints0.fill);
      assertEquals(0, gridBagConstraints0.anchor);
      assertEquals((-187), simpleGridBagConstraint0.gridy);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(0, simpleGridBagConstraint0.getGridX());
      assertEquals(0, simpleGridBagConstraint0.getGridY());
      assertEquals(0, gridBagConstraints0.gridx);
      assertEquals(0, gridBagConstraints0.gridheight);
      assertEquals(0, gridBagConstraints0.gridwidth);
      assertEquals(1, simpleGridBagConstraint0.gridheight);
      assertEquals(0, simpleGridBagConstraint0.gridx);
      assertEquals(0, gridBagConstraints0.ipady);
      assertEquals(0, gridBagConstraints0.ipadx);
  }

  @Test
  public void test11()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.labelConstraint(1, 1);
      assertEquals(17, simpleGridBagConstraint0.anchor);
      assertEquals(0, simpleGridBagConstraint0.fill);
      assertEquals(0, simpleGridBagConstraint0.ipady);
      assertEquals(1, simpleGridBagConstraint0.gridy);
      assertEquals(1, simpleGridBagConstraint0.gridx);
      assertNotNull(simpleGridBagConstraint0);
  }

  @Test
  public void test12()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.comboBoxConstraint(0, 0, 233);
      assertEquals(0, simpleGridBagConstraint0.gridx);
      assertEquals(0, simpleGridBagConstraint0.gridy);
  }

  @Test
  public void test13()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.verticalConstraint((-1619), (-1619));
      assertEquals((-1619), simpleGridBagConstraint0.gridy);
      assertEquals(1.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals((-1619), simpleGridBagConstraint0.gridx);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertNotNull(simpleGridBagConstraint0);
      assertEquals(0.0, simpleGridBagConstraint0.weightx, 0.01D);
      assertEquals(3, simpleGridBagConstraint0.fill);
      assertEquals(1, simpleGridBagConstraint0.gridwidth);
  }

  @Test
  public void test14()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.comboBoxConstraint(0, 1318);
      assertNotNull(simpleGridBagConstraint0);
      assertEquals(17, simpleGridBagConstraint0.anchor);
      assertEquals(0.0, simpleGridBagConstraint0.weighty, 0.01D);
      assertEquals(0, simpleGridBagConstraint0.gridx);
      assertEquals(0, simpleGridBagConstraint0.fill);
      assertEquals(1318, simpleGridBagConstraint0.gridy);
  }

  @Test
  public void test15()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.insetConstraint(0, 0, 10);
      assertEquals(0, simpleGridBagConstraint0.gridy);
      assertEquals(0, simpleGridBagConstraint0.gridx);
      assertEquals(10, simpleGridBagConstraint0.anchor);
      assertEquals(0, simpleGridBagConstraint0.ipadx);
  }

  @Test
  public void test16()  throws Throwable  {
      SimpleGridBagConstraint simpleGridBagConstraint0 = SimpleGridBagConstraint.labelConstraint((-686), (-611), (Insets) null);
      assertEquals(17, simpleGridBagConstraint0.anchor);
      assertEquals((-686), simpleGridBagConstraint0.gridx);
      assertEquals(0, simpleGridBagConstraint0.ipadx);
      assertEquals(0, simpleGridBagConstraint0.ipady);
      assertEquals(0, simpleGridBagConstraint0.fill);
      assertEquals((-611), simpleGridBagConstraint0.gridy);
      assertEquals(0.0, simpleGridBagConstraint0.weightx, 0.01D);
      assertEquals(1, simpleGridBagConstraint0.gridheight);
      assertEquals(1, simpleGridBagConstraint0.gridwidth);
      assertEquals(0.0, simpleGridBagConstraint0.weighty, 0.01D);
  }
}
