/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.SimpleMouseAdapter;
import java.awt.Component;
import java.awt.IllegalComponentStateException;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTextArea;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SimpleMouseAdapterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SimpleMouseAdapter simpleMouseAdapter0 = new SimpleMouseAdapter();
      JOptionPane jOptionPane0 = new JOptionPane((Object) "page-up", 1);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jOptionPane0, 1, (-1266L), 1466, 0, 1, 1466, (-208), (-208), false, 0, 1466, 40);
      simpleMouseAdapter0.doubleClick((MouseEvent) mouseWheelEvent0);
      assertEquals(false, mouseWheelEvent0.isConsumed());
  }

  @Test
  public void test1()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea("", 0, 0);
      SimpleMouseAdapter simpleMouseAdapter0 = new SimpleMouseAdapter((JPopupMenu) null);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jTextArea0, 0, (-515L), 0, 0, 127, (-851), true, 998, 0, 0);
      simpleMouseAdapter0.mousePressed((MouseEvent) mouseWheelEvent0);
      assertEquals(0, mouseWheelEvent0.getScrollAmount());
  }

  @Test
  public void test2()  throws Throwable  {
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      SimpleMouseAdapter simpleMouseAdapter0 = new SimpleMouseAdapter(jPopupMenu0);
      // Undeclared exception!
      try {
        simpleMouseAdapter0.showPopup((Component) jPopupMenu0, 399, 399);
        fail("Expecting exception: IllegalComponentStateException");
      } catch(IllegalComponentStateException e) {
        /*
         * component must be showing on the screen to determine its location
         */
      }
  }
}
