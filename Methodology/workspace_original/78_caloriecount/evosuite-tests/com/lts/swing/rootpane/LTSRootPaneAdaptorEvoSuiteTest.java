/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.rootpane;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.rootpane.RootPaneJInternalFrame;
import java.awt.Window;
import javax.swing.JInternalFrame;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LTSRootPaneAdaptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("child, ", true);
      RootPaneJInternalFrame rootPaneJInternalFrame0 = new RootPaneJInternalFrame(jInternalFrame0);
      JInternalFrame jInternalFrame1 = (JInternalFrame)rootPaneJInternalFrame0.getComponent();
      assertEquals(false, jInternalFrame1.isManagingFocus());
  }

  @Test
  public void test1()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("child, ", true);
      RootPaneJInternalFrame rootPaneJInternalFrame0 = new RootPaneJInternalFrame(jInternalFrame0);
      boolean boolean0 = rootPaneJInternalFrame0.getVisible();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      RootPaneJInternalFrame rootPaneJInternalFrame0 = new RootPaneJInternalFrame(jInternalFrame0);
      Window window0 = rootPaneJInternalFrame0.getWindow();
      assertNull(window0);
  }

  @Test
  public void test3()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("child, ", true);
      RootPaneJInternalFrame rootPaneJInternalFrame0 = new RootPaneJInternalFrame(jInternalFrame0);
      rootPaneJInternalFrame0.setVisible(true);
      assertEquals(true, jInternalFrame0.isVisible());
      assertEquals(true, rootPaneJInternalFrame0.isVisible());
  }
}
