/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.thread;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.application.swing.ApplicationBlockingThread;
import com.lts.swing.thread.BlockingThread;
import java.awt.Component;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JSlider;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BlockingThreadEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BlockingThread.HideCallback blockingThread_HideCallback0 = new BlockingThread.HideCallback((Object) "mnemonic");
      JSlider jSlider0 = new JSlider(0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jSlider0, 0, 209L, (-1250), 0, (-1), 0, false, (-1250), (-1), (-1392));
      blockingThread_HideCallback0.componentHidden((ComponentEvent) mouseWheelEvent0);
      assertEquals(209L, mouseWheelEvent0.getWhen());
  }

  @Test
  public void test1()  throws Throwable  {
      ApplicationBlockingThread applicationBlockingThread0 = new ApplicationBlockingThread();
      // Undeclared exception!
      try {
        applicationBlockingThread0.displayAndWait((Component) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        BlockingThread.threadDisplayAndWait((Component) null);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * No component has been set to display
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      ApplicationBlockingThread applicationBlockingThread0 = new ApplicationBlockingThread();
      applicationBlockingThread0.wakeUp();
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        BlockingThread.staticDisplayAndWait((Component) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ApplicationBlockingThread applicationBlockingThread0 = new ApplicationBlockingThread();
      BlockingThread.go((Runnable) applicationBlockingThread0);
  }

  @Test
  public void test6()  throws Throwable  {
      ApplicationBlockingThread applicationBlockingThread0 = new ApplicationBlockingThread();
      applicationBlockingThread0.startThread();
  }

  @Test
  public void test7()  throws Throwable  {
      ApplicationBlockingThread applicationBlockingThread0 = new ApplicationBlockingThread();
      applicationBlockingThread0.setup();
  }

  @Test
  public void test8()  throws Throwable  {
      BlockingThread blockingThread0 = BlockingThread.getCurrentBlockingThread();
      assertNull(blockingThread0);
  }
}
