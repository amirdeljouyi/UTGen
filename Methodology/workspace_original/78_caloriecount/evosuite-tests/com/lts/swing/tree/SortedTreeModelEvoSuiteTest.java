/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.tree.SortedTreeModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.MutableTreeNode;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortedTreeModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SortedTreeModel sortedTreeModel0 = new SortedTreeModel((DefaultMutableTreeNode) null);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode((Object) "ToolTipText", true);
      // Undeclared exception!
      try {
        sortedTreeModel0.addChild(defaultMutableTreeNode0, defaultMutableTreeNode0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * new child is an ancestor
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      SortedTreeModel sortedTreeModel0 = new SortedTreeModel(defaultMutableTreeNode0);
      DefaultMutableTreeNode defaultMutableTreeNode1 = new DefaultMutableTreeNode();
      sortedTreeModel0.addChild(defaultMutableTreeNode1);
      // Undeclared exception!
      try {
        sortedTreeModel0.addChild(defaultMutableTreeNode1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1 > 0
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      SortedTreeModel sortedTreeModel0 = new SortedTreeModel(defaultMutableTreeNode0);
      DefaultMutableTreeNode defaultMutableTreeNode1 = new DefaultMutableTreeNode((Object) "0x1.cf3ddbf34e1d3p6", true);
      defaultMutableTreeNode0.add((MutableTreeNode) defaultMutableTreeNode1);
      // Undeclared exception!
      try {
        sortedTreeModel0.addChild(defaultMutableTreeNode0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * new child is an ancestor
         */
      }
  }
}
