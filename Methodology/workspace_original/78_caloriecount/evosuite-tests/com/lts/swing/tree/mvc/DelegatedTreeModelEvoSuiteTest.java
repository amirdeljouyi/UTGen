/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.tree.mvc;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.tree.mvc.ApplicationNode;
import com.lts.swing.tree.mvc.ApplicationTree;
import com.lts.swing.tree.mvc.DelegatedTreeModel;
import javax.swing.event.TreeModelListener;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DelegatedTreeModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      delegatedTreeModel0.removeFromMap((ApplicationNode) null);
  }

  @Test
  public void test1()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      delegatedTreeModel0.addToMap((ApplicationNode) null, defaultMutableTreeNode0);
      assertEquals(0, defaultMutableTreeNode0.getChildCount());
  }

  @Test
  public void test2()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.nodeAdded((ApplicationNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.getChild((Object) delegatedTreeModel0, 1617);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      delegatedTreeModel0.removeTreeModelListener((TreeModelListener) basicTreeUI_TreeModelHandler0);
  }

  @Test
  public void test5()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.removeChildNode((ApplicationNode) null, (ApplicationNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.nodeRemoved((ApplicationNode) null, (ApplicationNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.getRoot();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.isLeaf((Object) "Redo");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.getChildCount((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.createChildNode((ApplicationNode) null, (ApplicationNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      delegatedTreeModel0.addTreeModelListener((TreeModelListener) basicTreeUI_TreeModelHandler0);
  }

  @Test
  public void test12()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.getIndexOfChild((Object) "ShortDescription", (Object) "ShortDescription");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      // Undeclared exception!
      try {
        delegatedTreeModel0.nodeChanged((ApplicationNode) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DelegatedTreeModel delegatedTreeModel0 = new DelegatedTreeModel((ApplicationTree) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      // Undeclared exception!
      try {
        delegatedTreeModel0.valueForPathChanged((TreePath) null, (Object) basicTreeUI0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
