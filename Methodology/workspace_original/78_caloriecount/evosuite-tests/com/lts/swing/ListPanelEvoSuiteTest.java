/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.Suspender;
import com.lts.event.Callback;
import com.lts.swing.LTSPanel;
import com.lts.swing.ListPanel;
import com.lts.swing.SimpleChangeableListModel;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.IllegalComponentStateException;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JList;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ListPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      LTSPanel lTSPanel0 = (LTSPanel)listPanel0.createButtonPanel();
      assertNotNull(lTSPanel0);
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(true, listPanel0.showButtons());
      assertEquals(0, listPanel0.getButtonPanelMode());
      assertEquals(4, lTSPanel0.getGridy());
      assertEquals(4, lTSPanel0.getComponentCount());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals("Add", listPanel0.getAddButtonText());
  }

  @Test
  public void test1()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      ListPanel.ListReturnKeyListener listPanel_ListReturnKeyListener0 = listPanel0.new ListReturnKeyListener();
      listPanel_ListReturnKeyListener0.performAction((Object) "x-java-file-list");
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(true, listPanel0.getShowButtons());
  }

  @Test
  public void test2()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      ListPanel.ListPanelButtonListener listPanel_ListPanelButtonListener0 = listPanel0.getListener();
      assertNotNull(listPanel_ListPanelButtonListener0);
      
      ActionEvent actionEvent0 = new ActionEvent((Object) "Meta+Shift+Button1", 1361, "Meta+Shift+Button1");
      listPanel_ListPanelButtonListener0.actionPerformed(actionEvent0);
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Up", listPanel0.getUpButtonText());
  }

  @Test
  public void test3()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      ListPanel.ListMouseListener listPanel_ListMouseListener0 = listPanel0.getMouseListener();
      assertNotNull(listPanel_ListMouseListener0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) listPanel0, 0, 321L, (-265), 0, (-265), 880, 0, (-265), true, 0);
      // Undeclared exception!
      try {
        listPanel_ListMouseListener0.maybeShowPopup(mouseEvent0);
        fail("Expecting exception: IllegalComponentStateException");
      } catch(IllegalComponentStateException e) {
        /*
         * component must be showing on the screen to determine its location
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      ListPanel.ListMouseListener listPanel_ListMouseListener0 = listPanel0.getMouseListener();
      assertNotNull(listPanel_ListMouseListener0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) listPanel0, 0, (long) 0, 0, 0, 1, 8, false, 0);
      listPanel_ListMouseListener0.mouseReleased(mouseEvent0);
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals(true, listPanel0.showButtons());
  }

  @Test
  public void test5()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      boolean boolean0 = listPanel0.showButtons();
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.getDisplayButton(1295);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setDownButtonText("p");
      assertEquals("p", listPanel0.getDownButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
  }

  @Test
  public void test8()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.initialize();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.upButtonPressed();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      assertEquals(false, listPanel0.editOnDoubleClick());
      
      listPanel0.setEditOnDoubleClick(true);
      assertEquals(true, listPanel0.getEditOnDoubleClick());
      assertEquals(true, listPanel0.editOnDoubleClick());
  }

  @Test
  public void test11()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setShowButtons(true);
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(true, listPanel0.showButtons());
      assertEquals(2, listPanel0.getButtonOrientation());
  }

  @Test
  public void test12()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setAddButtonCallback((Callback) null);
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
  }

  @Test
  public void test13()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setAddButtonText("<_");
      assertEquals("<_", listPanel0.getAddButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
  }

  @Test
  public void test14()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      ListPanel.ListMouseListener listPanel_ListMouseListener0 = listPanel0.new ListMouseListener();
      MouseEvent mouseEvent0 = new MouseEvent((Component) listPanel0, 0, (long) 'v', 0, 0, 5, (-1132), true, 0);
      listPanel_ListMouseListener0.mouseClicked(mouseEvent0);
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(true, listPanel0.showButtons());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Add", listPanel0.getAddButtonText());
  }

  @Test
  public void test15()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setDeleteButtonCallback((Callback) null);
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(true, listPanel0.getShowButtons());
  }

  @Test
  public void test16()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setDoubleClickCallback((Callback) null);
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
  }

  @Test
  public void test17()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      String string0 = listPanel0.getEditButtonText();
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertNotNull(string0);
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Edit", string0);
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(true, listPanel0.getShowButtons());
  }

  @Test
  public void test18()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.getAll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test19()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      assertEquals("Up", listPanel0.getUpButtonText());
      
      listPanel0.setUpButtonText((String) null);
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
  }

  @Test
  public void test20()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setButtonPanelMode(0);
      assertEquals(0, listPanel0.getButtonPanelMode());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(true, listPanel0.showButtons());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Down", listPanel0.getDownButtonText());
  }

  @Test
  public void test21()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setButtonOrientation(386);
      listPanel0.addButtonToPanel((JButton) null, (LTSPanel) listPanel0);
      assertEquals(386, listPanel0.getButtonOrientation());
  }

  @Test
  public void test22()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setDeleteButtonText("p");
      assertEquals("p", listPanel0.getDeleteButtonText());
  }

  @Test
  public void test23()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setEditCallback((Callback) null);
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals("Edit", listPanel0.getEditButtonText());
  }

  @Test
  public void test24()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setDisplayButton(1842, true);
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(0, listPanel0.getButtonPanelMode());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
  }

  @Test
  public void test25()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.getDoubleClickCallback();
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals(true, listPanel0.showButtons());
  }

  @Test
  public void test26()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.editElement((Object) "rolloverIcon");
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(false, listPanel0.editOnDoubleClick());
  }

  @Test
  public void test27()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setList((JList) null);
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(true, listPanel0.showButtons());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
  }

  @Test
  public void test28()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      boolean boolean0 = listPanel0.confirmDelete((Object) null);
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals(true, boolean0);
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(true, listPanel0.showButtons());
  }

  @Test
  public void test29()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      boolean boolean0 = listPanel0.getEditOnDoubleClick();
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(false, boolean0);
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
  }

  @Test
  public void test30()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setEditButtonText(".label.");
      assertEquals(".label.", listPanel0.getEditButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
  }

  @Test
  public void test31()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      assertEquals(1, listPanel0.getResponseToEnter());
      
      listPanel0.setResponseToEnter(0);
      assertEquals(0, listPanel0.getResponseToEnter());
      assertEquals("Add", listPanel0.getAddButtonText());
  }

  @Test
  public void test32()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setDownButtonCallback((Callback) null);
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
  }

  @Test
  public void test33()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setEditButton((JButton) null);
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
  }

  @Test
  public void test34()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.setUpButtonCallback((Callback) null);
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals(false, listPanel0.editOnDoubleClick());
  }

  @Test
  public void test35()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      Suspender suspender0 = new Suspender();
      listPanel0.setEditButtonCallback((Callback) suspender0);
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals(false, listPanel0.editOnDoubleClick());
  }

  @Test
  public void test36()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      ListPanel.ListReturnKeyListener listPanel_ListReturnKeyListener0 = listPanel0.new ListReturnKeyListener();
      // Undeclared exception!
      try {
        listPanel_ListReturnKeyListener0.performAction((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      SimpleChangeableListModel simpleChangeableListModel0 = new SimpleChangeableListModel();
      List<Object> list0 = simpleChangeableListModel0.asList();
      listPanel0.addAll(list0);
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals(1, listPanel0.getResponseToEnter());
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals(false, listPanel0.getEditOnDoubleClick());
  }

  @Test
  public void test38()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      listPanel0.addAll((List) null);
      assertEquals("Up", listPanel0.getUpButtonText());
      assertEquals("Add", listPanel0.getAddButtonText());
      assertEquals("Edit", listPanel0.getEditButtonText());
      assertEquals(true, listPanel0.getShowButtons());
      assertEquals("Delete", listPanel0.getDeleteButtonText());
      assertEquals(2, listPanel0.getButtonOrientation());
      assertEquals("Down", listPanel0.getDownButtonText());
      assertEquals(false, listPanel0.editOnDoubleClick());
      assertEquals(1, listPanel0.getResponseToEnter());
  }

  @Test
  public void test39()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.addButtonPressed();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test40()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.deleteButtonPressed();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test41()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.downButtonPressed();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test42()  throws Throwable  {
      ListPanel listPanel0 = new ListPanel();
      // Undeclared exception!
      try {
        listPanel0.editButtonPressed();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
