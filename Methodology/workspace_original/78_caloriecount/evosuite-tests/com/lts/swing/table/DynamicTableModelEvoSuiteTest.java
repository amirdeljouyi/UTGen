/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.DynamicTableModel;
import java.lang.reflect.Array;
import java.util.List;
import javax.swing.JTable;
import javax.swing.event.TableModelListener;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DynamicTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      dynamicTableModel0.getColumnClass((-1));
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test1()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      // Undeclared exception!
      try {
        dynamicTableModel0.isCellEditable(1452, (-607));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -607
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      // Undeclared exception!
      try {
        dynamicTableModel0.getValueAt((-1029), 1214);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      dynamicTableModel0.clear();
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test4()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      boolean[] booleanArray0 = new boolean[9];
      dynamicTableModel0.setColumnsEditable(booleanArray0);
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test5()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      // Undeclared exception!
      try {
        dynamicTableModel0.removeRow(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      // Undeclared exception!
      try {
        dynamicTableModel0.setCellEditable(1331, 296, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 296
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      Class<?>[] classArray0 = (Class<?>[]) Array.newInstance(Class.class, 4);
      dynamicTableModel0.setColumnClasses(classArray0);
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test8()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try {
        dynamicTableModel0.update(0, objectArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      // Undeclared exception!
      try {
        dynamicTableModel0.setValueAt((Object) dynamicTableModel0, 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      JTable jTable0 = new JTable();
      dynamicTableModel0.removeTableModelListener((TableModelListener) jTable0);
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test11()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      dynamicTableModel0.setData((List<Object[]>) null);
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test12()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      dynamicTableModel0.addTableModelListener((TableModelListener) null);
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test13()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      int int0 = dynamicTableModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      // Undeclared exception!
      try {
        dynamicTableModel0.getColumnName((-981));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -981
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      dynamicTableModel0.getRowCount();
      assertEquals(0, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test16()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try {
        dynamicTableModel0.addRow((-1821), objectArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: -1821, Size: 0
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      Object[] objectArray0 = new Object[1];
      dynamicTableModel0.addRow((-1), objectArray0);
      assertEquals(1, dynamicTableModel0.getRowCount());
  }

  @Test
  public void test18()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      String[] stringArray0 = new String[7];
      dynamicTableModel0.setColumnNames(stringArray0);
      assertEquals(7, dynamicTableModel0.getColumnCount());
  }

  @Test
  public void test19()  throws Throwable  {
      DynamicTableModel dynamicTableModel0 = new DynamicTableModel();
      Object[][] objectArray0 = new Object[10][10];
      dynamicTableModel0.setData(objectArray0);
      assertEquals(10, dynamicTableModel0.getRowCount());
  }
}
