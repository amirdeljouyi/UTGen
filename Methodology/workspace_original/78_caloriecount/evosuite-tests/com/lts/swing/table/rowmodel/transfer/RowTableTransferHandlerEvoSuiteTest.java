/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel.transfer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.application.data.coll.ApplicationDataList;
import com.lts.caloriecount.ui.foodwin.FoodRowModel;
import com.lts.swing.table.rowmodel.ApplicationDataListRowModel;
import com.lts.swing.table.rowmodel.RowModel;
import com.lts.swing.table.rowmodel.tablemodel.SimpleRowModelTableModel;
import com.lts.swing.table.rowmodel.transfer.RowTableTransferHandler;
import com.lts.swing.table.rowmodel.transfer.RowTableTransferable;
import java.awt.Component;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.InputEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.JToolTip;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RowTableTransferHandlerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      JTable jTable0 = new JTable();
      StringSelection stringSelection0 = new StringSelection((String) null);
      boolean boolean0 = rowTableTransferHandler0.importData((JComponent) jTable0, (Transferable) stringSelection0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      // Undeclared exception!
      try {
        rowTableTransferHandler0.createTransferable((JComponent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      rowTableTransferHandler0.exportDone((JComponent) null, (Transferable) null, 2);
  }

  @Test
  public void test3()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      JTextPane jTextPane0 = new JTextPane();
      JToolTip jToolTip0 = jTextPane0.createToolTip();
      int int0 = rowTableTransferHandler0.getSourceActions((JComponent) jToolTip0);
      assertEquals(2, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      Object[][] objectArray0 = new Object[4][3];
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) rowTableTransferHandler0;
      objectArray0[0] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[0]);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) jTable0, 1, (long) 1, 1758, (-1211), (-1211), (-1211), true, (-1211), (-572), (-3));
      rowTableTransferHandler0.exportAsDrag((JComponent) jTable0, (InputEvent) mouseWheelEvent0, (-572));
      assertEquals(1L, mouseWheelEvent0.getWhen());
  }

  @Test
  public void test5()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("HHmm");
      StringSelection stringSelection0 = new StringSelection("HHmm");
      boolean boolean0 = rowTableTransferHandler0.importData((JComponent) jCheckBoxMenuItem0, (Transferable) stringSelection0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      FoodRowModel foodRowModel0 = new FoodRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) foodRowModel0);
      Object[][] objectArray0 = new Object[4][7];
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = (Object) rowTableTransferHandler0;
      objectArray1[1] = (Object) applicationDataListRowModel0;
      objectArray1[2] = (Object) rowTableTransferHandler0;
      objectArray1[3] = (Object) foodRowModel0;
      objectArray1[4] = (Object) 291;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      JTable jTable1 = new JTable((TableModel) applicationDataListRowModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable1);
      boolean boolean0 = rowTableTransferHandler0.sameTable(jTable0, rowTableTransferable0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      FoodRowModel foodRowModel0 = new FoodRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) foodRowModel0);
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      // Undeclared exception!
      try {
        rowTableTransferHandler0.performImport(jTable0, rowTableTransferable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      int[] intArray0 = new int[2];
      intArray0[0] = 1677;
      Object[] objectArray0 = new Object[10];
      // Undeclared exception!
      try {
        rowTableTransferHandler0.handleMove((SimpleRowModelTableModel) null, (SimpleRowModelTableModel) null, 1677, intArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      int[] intArray0 = new int[2];
      Object[] objectArray0 = new Object[10];
      // Undeclared exception!
      try {
        rowTableTransferHandler0.handleMove((SimpleRowModelTableModel) null, (SimpleRowModelTableModel) null, 1677, intArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      RowTableTransferHandler rowTableTransferHandler0 = new RowTableTransferHandler();
      FoodRowModel foodRowModel0 = new FoodRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) foodRowModel0);
      // Undeclared exception!
      try {
        rowTableTransferHandler0.copyValues(0, (SimpleRowModelTableModel) applicationDataListRowModel0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
