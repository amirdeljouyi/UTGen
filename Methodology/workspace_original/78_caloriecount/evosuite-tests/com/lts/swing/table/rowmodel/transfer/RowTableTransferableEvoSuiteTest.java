/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel.transfer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.application.data.coll.ApplicationDataList;
import com.lts.caloriecount.ui.entry.EntryRowModel;
import com.lts.swing.table.rowmodel.ApplicationDataListRowModel;
import com.lts.swing.table.rowmodel.RowModel;
import com.lts.swing.table.rowmodel.transfer.RowTableTransferable;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RowTableTransferableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      Object[] objectArray0 = rowTableTransferable0.getData();
      assertNotNull(objectArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      int[] intArray0 = rowTableTransferable0.getSourceRows();
      assertNotNull(intArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      RowTableTransferable rowTableTransferable1 = (RowTableTransferable)rowTableTransferable0.getTransferData((DataFlavor) null);
      assertSame(rowTableTransferable0, rowTableTransferable1);
  }

  @Test
  public void test3()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      boolean boolean0 = rowTableTransferable0.isDataFlavorSupported((DataFlavor) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      int[] intArray0 = rowTableTransferable0.getRows();
      assertNotNull(intArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      ApplicationDataListRowModel applicationDataListRowModel1 = (ApplicationDataListRowModel)rowTableTransferable0.getSourceTableModel();
      assertSame(applicationDataListRowModel0, applicationDataListRowModel1);
  }

  @Test
  public void test6()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      JTable jTable1 = rowTableTransferable0.getTable();
      assertEquals(0, jTable1.getWidth());
  }

  @Test
  public void test7()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0, (TableColumnModel) defaultTableColumnModel0);
      RowTableTransferable rowTableTransferable0 = new RowTableTransferable(jTable0);
      DataFlavor[] dataFlavorArray0 = rowTableTransferable0.getTransferDataFlavors();
      assertNotNull(dataFlavorArray0);
  }
}
