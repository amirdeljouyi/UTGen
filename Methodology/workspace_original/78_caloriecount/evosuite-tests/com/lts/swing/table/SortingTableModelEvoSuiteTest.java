/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.SortingTableModel;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.StyleConstants;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortingTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Object[][] objectArray0 = new Object[8][3];
      JTable jTable0 = new JTable();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        defaultTableModel0.addRow(objectArray0[1]);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      Class<?> class0 = sortingTableModel0.getColumnClass(0);
      assertEquals(false, class0.isAnonymousClass());
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) defaultTableModel0, (TableColumnModel) defaultTableColumnModel0);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortingTableModel0.setValueAt((Object) "rolloverIcon", 5, 5);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      JTable jTable0 = new JTable(vector0, vector0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      int int0 = sortingTableModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      JTable jTable0 = new JTable();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortingTableModel0.getValueAt(12, 12);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      JTable jTable0 = new JTable();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      int int0 = sortingTableModel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      assertNotNull(sortingTableModel0);
      
      String string0 = sortingTableModel0.getColumnName((-1));
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      sortingTableModel0.removeTableModelListener((TableModelListener) jTable0);
      assertEquals(1, jTable0.countComponents());
  }

  @Test
  public void test8()  throws Throwable  {
      JTable jTable0 = new JTable();
      DefaultTableModel defaultTableModel0 = (DefaultTableModel)jTable0.getModel();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortingTableModel0.isCellEditable(0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][7];
      Object[] objectArray1 = new Object[9];
      StyleConstants styleConstants0 = (StyleConstants)AttributeSet.NameAttribute;
      objectArray1[0] = (Object) styleConstants0;
      objectArray0[0] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      TableModelEvent tableModelEvent0 = new TableModelEvent((TableModel) defaultTableModel0, (-810), (-810), 40, 40);
      // Undeclared exception!
      try {
        sortingTableModel0.processModelChanged(tableModelEvent0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * 40
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) null, (TableColumnModel) defaultTableColumnModel0);
      SortingTableModel sortingTableModel0 = null;
      try {
        sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable((TableModel) defaultTableModel0, (TableColumnModel) null);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      TableModelEvent tableModelEvent0 = new TableModelEvent((TableModel) sortingTableModel0, (-1), (-1), (-1), (-1));
      // Undeclared exception!
      try {
        sortingTableModel0.processModelChanged(tableModelEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      JTable jTable0 = new JTable();
      Vector<JTableHeader> vector0 = new Vector<JTableHeader>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      TableModelEvent tableModelEvent0 = new TableModelEvent((TableModel) defaultTableModel0, 0, 0);
      // Undeclared exception!
      try {
        sortingTableModel0.processModelChanged(tableModelEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      JTable jTable0 = new JTable(vector0, vector0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      TableModelEvent tableModelEvent0 = new TableModelEvent((TableModel) sortingTableModel0, 905, 127, 127);
      // Undeclared exception!
      try {
        sortingTableModel0.processModelChanged(tableModelEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      JTable jTable0 = new JTable(269, 269);
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortingTableModel0.processRowsDeleted(269, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Vector<JTableHeader> vector0 = new Vector<JTableHeader>();
      JTable jTable0 = new JTable(vector0, vector0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortingTableModel0.processRowsInserted((-1155), (-1155));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Object[][] objectArray0 = new Object[8][7];
      Object[] objectArray1 = new Object[6];
      StyleConstants styleConstants0 = (StyleConstants)AttributeSet.NameAttribute;
      objectArray1[0] = (Object) styleConstants0;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = (Object) "uninitializedValue";
      objectArray2[1] = objectArray1[0];
      objectArray2[2] = objectArray1[0];
      objectArray2[3] = objectArray1[0];
      objectArray2[4] = objectArray1[0];
      objectArray2[5] = objectArray2[4];
      JTable jTable0 = new JTable(objectArray0, objectArray2);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortingTableModel sortingTableModel0 = new SortingTableModel(jTable0, (TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        sortingTableModel0.processRowsInserted(1755, (-244));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
