/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.dragndrop;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.dragndrop.SimplifiedTransferHandlerAdaptor;
import java.awt.Component;
import javax.swing.JComponent;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SimplifiedTransferHandlerAdaptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      simplifiedTransferHandlerAdaptor0.remove((JComponent) defaultTreeCellRenderer0, (Object) "selected");
      assertEquals(10, defaultTreeCellRenderer0.getHorizontalAlignment());
  }

  @Test
  public void test1()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      simplifiedTransferHandlerAdaptor0.initialize();
      assertEquals(false, simplifiedTransferHandlerAdaptor0.supportsCopy());
      assertEquals(false, simplifiedTransferHandlerAdaptor0.supportsCut());
      assertEquals(false, simplifiedTransferHandlerAdaptor0.supportsMove());
      assertEquals(false, simplifiedTransferHandlerAdaptor0.supportsPaste());
  }

  @Test
  public void test2()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      boolean boolean0 = simplifiedTransferHandlerAdaptor0.supportsCut();
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      boolean boolean0 = simplifiedTransferHandlerAdaptor0.supportsCopy();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      boolean boolean0 = simplifiedTransferHandlerAdaptor0.paste((Component) null, (Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      boolean boolean0 = simplifiedTransferHandlerAdaptor0.supportsPaste();
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      boolean boolean0 = simplifiedTransferHandlerAdaptor0.supportsMove();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      SimplifiedTransferHandlerAdaptor simplifiedTransferHandlerAdaptor0 = new SimplifiedTransferHandlerAdaptor();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Object object0 = simplifiedTransferHandlerAdaptor0.copy((JComponent) defaultTreeCellRenderer0);
      assertNull(object0);
  }
}
