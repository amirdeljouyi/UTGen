/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel.transfer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.rowmodel.transfer.TableTransferData;
import com.lts.swing.table.rowmodel.transfer.TableTransferable;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableTransferableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[6];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      TableTransferable tableTransferable0 = new TableTransferable(intArray0, (TableModel) defaultTableModel0);
      DataFlavor[] dataFlavorArray0 = tableTransferable0.getTransferDataFlavors();
      assertNotNull(dataFlavorArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[6];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      TableTransferable tableTransferable0 = new TableTransferable(intArray0, (TableModel) defaultTableModel0);
      TableTransferData tableTransferData0 = tableTransferable0.getData();
      assertNotNull(tableTransferData0);
  }

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[6];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      TableTransferable tableTransferable0 = new TableTransferable(intArray0, (TableModel) defaultTableModel0);
      DataFlavor dataFlavor0 = TableTransferable.getFlavor();
      TableTransferData tableTransferData0 = (TableTransferData)tableTransferable0.getTransferData(dataFlavor0);
      assertNotNull(tableTransferData0);
  }

  @Test
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[6];
      TableTransferable tableTransferable0 = new TableTransferable(intArray0, (TableModel) null);
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      try {
        tableTransferable0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      } catch(UnsupportedFlavorException e) {
        /*
         * 
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[6];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      TableTransferable tableTransferable0 = new TableTransferable(intArray0, (TableModel) defaultTableModel0);
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      boolean boolean0 = tableTransferable0.isDataFlavorSupported(dataFlavor0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[6];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      TableTransferable tableTransferable0 = new TableTransferable(intArray0, (TableModel) defaultTableModel0);
      DataFlavor dataFlavor0 = TableTransferable.getFlavor();
      assertNotNull(dataFlavor0);
      
      boolean boolean0 = tableTransferable0.isDataFlavorSupported(dataFlavor0);
      assertEquals(true, boolean0);
  }
}
