/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.dragndrop.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.dragndrop.test.StackTraceEvent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StackTraceEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      String string0 = stackTraceEvent0.getSimpleName();
      assertEquals("com.lts.swing.table.dragndrop.test.StackTraceEvent.initialize:26", string0);
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      stackTraceEvent0.getElement();
      assertEquals("com.lts.swing.table.dragndrop.test.StackTraceEvent.initialize:26", stackTraceEvent0.getSimpleName());
  }

  @Test
  public void test2()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      StackTraceElement[] stackTraceElementArray0 = stackTraceEvent0.getTrace();
      assertNotNull(stackTraceElementArray0);
      
      // Undeclared exception!
      try {
        StackTraceEvent.copySubtrace((-1095), stackTraceElementArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1095
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      boolean boolean0 = stackTraceEvent0.equals(stackTraceEvent0);
      assertEquals("com.lts.swing.table.dragndrop.test.StackTraceEvent.initialize:26", stackTraceEvent0.getSimpleName());
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      boolean boolean0 = stackTraceEvent0.isAncestorOf(stackTraceEvent0);
      assertEquals("com.lts.swing.table.dragndrop.test.StackTraceEvent.initialize:26", stackTraceEvent0.getSimpleName());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      boolean boolean0 = stackTraceEvent0.isParentOf(stackTraceEvent0);
      assertEquals(false, boolean0);
      assertEquals("com.lts.swing.table.dragndrop.test.StackTraceEvent.initialize:26", stackTraceEvent0.getSimpleName());
  }

  @Test
  public void test6()  throws Throwable  {
      StackTraceEvent stackTraceEvent0 = new StackTraceEvent();
      assertEquals("com.lts.swing.table.dragndrop.test.StackTraceEvent.initialize:26", stackTraceEvent0.getSimpleName());
      
      stackTraceEvent0.initialize(13);
      assertEquals("java.util.concurrent.ThreadPoolExecutor$Worker.run:908", stackTraceEvent0.getSimpleName());
  }
}
