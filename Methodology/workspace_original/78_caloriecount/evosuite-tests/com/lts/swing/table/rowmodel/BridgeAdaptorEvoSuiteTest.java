/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.rowmodel.BridgeAdaptor;
import javax.swing.JTable;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BridgeAdaptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(240, 240);
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      assertNotNull(bridgeAdaptor0);
      
      int int0 = bridgeAdaptor0.getRowCount();
      assertEquals(240, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      assertNotNull(bridgeAdaptor0);
      
      String string0 = bridgeAdaptor0.getColumnName(3);
      assertNotNull(string0);
      assertEquals("D", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Object[][] objectArray0 = new Object[6][3];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[5]);
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        bridgeAdaptor0.getValueAt(1415, 1190);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1415 >= 6
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      JTable jTable0 = new JTable();
      bridgeAdaptor0.addTableModelListener((TableModelListener) jTable0);
      assertEquals(false, jTable0.getFillsViewportHeight());
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      Object[][] objectArray0 = new Object[1][10];
      Object[] objectArray1 = new Object[10];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) 0;
      objectArray1[2] = (Object) 0;
      objectArray1[3] = (Object) 0;
      objectArray1[4] = (Object) defaultTableModel0;
      objectArray1[5] = (Object) defaultTableModel0;
      objectArray1[6] = (Object) defaultTableModel0;
      objectArray1[7] = (Object) 0;
      objectArray1[8] = (Object) defaultTableModel0;
      objectArray1[9] = (Object) defaultTableModel0;
      objectArray0[0] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[0]);
      bridgeAdaptor0.removeTableModelListener((TableModelListener) jTable0);
      assertEquals(true, jTable0.isBackgroundSet());
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      Class<?> class0 = bridgeAdaptor0.getColumnClass(0);
      assertEquals(false, class0.isSynthetic());
  }

  @Test
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        bridgeAdaptor0.setValueAt(objectArray0[0], (-1), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      int int0 = bridgeAdaptor0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      BridgeAdaptor bridgeAdaptor0 = new BridgeAdaptor((TableModel) defaultTableModel0);
      assertNotNull(bridgeAdaptor0);
      
      boolean boolean0 = bridgeAdaptor0.isCellEditable(3, 3);
      assertEquals(true, boolean0);
  }
}
