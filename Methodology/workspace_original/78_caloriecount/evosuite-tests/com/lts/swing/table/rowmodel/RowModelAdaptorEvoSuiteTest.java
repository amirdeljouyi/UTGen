/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.foodwin.FoodRowModel;
import com.lts.caloriecount.ui.frequent.FrequentRowModel;
import com.lts.caloriecount.ui.propertywindow.PropertyRowModel;
import java.util.Comparator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RowModelAdaptorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PropertyRowModel propertyRowModel0 = new PropertyRowModel();
      // Undeclared exception!
      try {
        propertyRowModel0.getColumnClass(1039);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1039
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      assertNotNull(foodRowModel0);
      
      String string0 = foodRowModel0.getColumnName(0);
      assertNotNull(string0);
      assertEquals("Calories", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      int int0 = frequentRowModel0.getColumnCount();
      assertEquals(3, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      // Undeclared exception!
      try {
        foodRowModel0.isColumnEditable((-62));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -62
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      Comparator<Object> comparator0 = foodRowModel0.getComparator();
      assertNull(comparator0);
  }

  @Test
  public void test5()  throws Throwable  {
      PropertyRowModel propertyRowModel0 = new PropertyRowModel();
      // Undeclared exception!
      try {
        propertyRowModel0.setValueAt((Object) null, (-1112), (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      // Undeclared exception!
      try {
        foodRowModel0.update((Object) "Name", (Object) "Name");
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      String[] stringArray0 = foodRowModel0.getColumnNames();
      assertNotNull(stringArray0);
  }
}
