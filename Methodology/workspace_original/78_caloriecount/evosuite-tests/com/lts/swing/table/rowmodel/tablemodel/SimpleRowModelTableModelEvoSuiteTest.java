/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel.tablemodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.application.data.coll.ApplicationDataList;
import com.lts.caloriecount.ui.entry.EntryRowModel;
import com.lts.caloriecount.ui.foodwin.FoodRowModel;
import com.lts.caloriecount.ui.frequent.FrequentRowModel;
import com.lts.caloriecount.ui.propertywindow.PropertyRowModel;
import com.lts.swing.table.rowmodel.ApplicationDataListRowModel;
import com.lts.swing.table.rowmodel.RowModel;
import javax.swing.JTable;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SimpleRowModelTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PropertyRowModel propertyRowModel0 = new PropertyRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) propertyRowModel0);
      JTable jTable0 = new JTable((TableModel) applicationDataListRowModel0);
      assertNotNull(jTable0);
      
      applicationDataListRowModel0.removeTableModelListener((TableModelListener) jTable0);
      assertEquals(2, jTable0.getColumnCount());
      assertEquals(2, applicationDataListRowModel0.getColumnCount());
  }

  @Test
  public void test1()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) frequentRowModel0);
      // Undeclared exception!
      try {
        applicationDataListRowModel0.getColumnClass(1349);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1349
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) foodRowModel0);
      // Undeclared exception!
      try {
        applicationDataListRowModel0.copyRowData((-5));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      PropertyRowModel propertyRowModel0 = new PropertyRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) propertyRowModel0);
      // Undeclared exception!
      try {
        applicationDataListRowModel0.isCellEditable(0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) null);
      // Undeclared exception!
      try {
        applicationDataListRowModel0.setValueAt((Object) "section", 493, 493);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) frequentRowModel0);
      FrequentRowModel frequentRowModel1 = (FrequentRowModel)applicationDataListRowModel0.getRowModel();
      assertSame(frequentRowModel0, frequentRowModel1);
  }

  @Test
  public void test6()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      // Undeclared exception!
      try {
        applicationDataListRowModel0.append((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      EntryRowModel entryRowModel0 = new EntryRowModel();
      ApplicationDataListRowModel applicationDataListRowModel0 = new ApplicationDataListRowModel((ApplicationDataList) null, (RowModel) entryRowModel0);
      applicationDataListRowModel0.initializeRowModel((RowModel) entryRowModel0);
      assertEquals(3, applicationDataListRowModel0.getColumnCount());
  }
}
