/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.SortedTableView;
import java.awt.Image;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortedTableViewEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Comparator<Object> comparator0 = SortedTableView.SortingNode.descendingComparator;
      SortedTableView.InverseComparator sortedTableView_InverseComparator0 = new SortedTableView.InverseComparator(comparator0);
      // Undeclared exception!
      try {
        sortedTableView_InverseComparator0.compare((Object) "CheckBox.", (Object) "CheckBox.");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * java.lang.String cannot be cast to com.lts.swing.table.SortedTableView$SortingNode
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Object[][] objectArray0 = new Object[10][5];
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) "";
      objectArray0[2] = objectArray1;
      objectArray0[6] = objectArray0[2];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertEquals(true, sortedTableView0.getSortAscending());
      assertEquals(0, sortedTableView0.getSortingColumn());
      assertNotNull(sortedTableView0);
  }

  @Test
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      sortedTableView0.findColumn("/org/jdesktop/swingx/color/colorwell.png");
      assertEquals(0, sortedTableView0.getSortingColumn());
      assertEquals(9, sortedTableView0.getColumnCount());
      assertEquals(true, sortedTableView0.getSortAscending());
  }

  @Test
  public void test3()  throws Throwable  {
      Object[][] objectArray0 = new Object[6][6];
      Object[] objectArray1 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertEquals(true, sortedTableView0.getSortAscending());
      assertNotNull(sortedTableView0);
      
      sortedTableView0.setSortAscending(false);
      assertEquals(false, sortedTableView0.getSortAscending());
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      // Undeclared exception!
      try {
        sortedTableView0.setValueAt((Object) "MnemonicKey", 2015, 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 2015 >= 0
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(7, 7);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      int int0 = sortedTableView0.getSortingColumn();
      assertEquals(true, sortedTableView0.getSortAscending());
      assertEquals(0, int0);
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      // Undeclared exception!
      try {
        sortedTableView0.isCellEditable(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Object[][] objectArray0 = new Object[6][6];
      Object[] objectArray1 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      SortedTableView sortedTableView1 = null;
      try {
        sortedTableView1 = new SortedTableView((TableModel) sortedTableView0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(7, 7);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      sortedTableView0.setSortingColumn(0);
      assertEquals(true, sortedTableView0.getSortAscending());
      assertEquals(0, sortedTableView0.getSortingColumn());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      
      boolean boolean0 = sortedTableView0.getSortAscending();
      assertEquals(0, sortedTableView0.getSortingColumn());
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Object[][] objectArray0 = new Object[10][5];
      Object object0 = Image.UndefinedProperty;
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = object0;
      objectArray0[6] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      SortedTableView sortedTableView0 = new SortedTableView((TableModel) defaultTableModel0);
      assertNotNull(sortedTableView0);
      assertEquals(0, sortedTableView0.getSortingColumn());
      assertEquals(true, sortedTableView0.getSortAscending());
  }
}
