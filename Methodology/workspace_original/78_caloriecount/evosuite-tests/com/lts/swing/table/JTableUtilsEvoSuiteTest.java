/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.table.JTableUtils;
import java.awt.Component;
import java.awt.RenderingHints;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jdesktop.swingx.color.EyeDropperColorChooserPanel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JTableUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JTableUtils jTableUtils0 = new JTableUtils();
      assertNotNull(jTableUtils0);
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 3);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      // Undeclared exception!
      try {
        JTableUtils.setColumnWidth(jTable0, 1539, 1539);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1539 >= 3
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][8];
      Object[] objectArray1 = new Object[9];
      Object object0 = RenderingHints.VALUE_INTERPOLATION_BICUBIC;
      objectArray1[0] = object0;
      objectArray1[1] = object0;
      Object[] objectArray2 = new Object[3];
      objectArray2[0] = objectArray1[0];
      objectArray2[1] = object0;
      objectArray2[2] = objectArray1[1];
      JTable jTable0 = new JTable(objectArray0, objectArray2);
      JTableUtils.setSelectedRow(jTable0, (-1));
      assertEquals(0, jTable0.getSelectedRowCount());
      assertEquals(-1, jTable0.getSelectedRow());
  }

  @Test
  public void test3()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableUtils.setupDoubleClick(jTable0, (ActionListener) null);
      assertEquals(16, jTable0.getRowHeight());
  }

  @Test
  public void test4()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableUtils.scrollToRow(jTable0, (-325));
      assertEquals(false, jTable0.isMinimumSizeSet());
  }

  @Test
  public void test5()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try {
        JTableUtils.setupComboBox(3, jTable0, (List) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 3 >= 0
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      JTable jTable0 = new JTable(vector0, vector0);
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try {
        JTableUtils.setupComboBox((-1836), jTable0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("xf&?vD)I<+cNzY$]]", (Icon) null);
      JTableUtils.DoubleClickListener jTableUtils_DoubleClickListener0 = new JTableUtils.DoubleClickListener((ActionListener) null);
      jTableUtils_DoubleClickListener0.showPopup((Component) jRadioButtonMenuItem0, 1, 1);
      assertEquals(false, jRadioButtonMenuItem0.isMinimumSizeSet());
  }

  @Test
  public void test8()  throws Throwable  {
      EyeDropperColorChooserPanel eyeDropperColorChooserPanel0 = new EyeDropperColorChooserPanel();
      JTableUtils.DoubleClickListener jTableUtils_DoubleClickListener0 = new JTableUtils.DoubleClickListener((ActionListener) null);
      MouseEvent mouseEvent0 = new MouseEvent((Component) eyeDropperColorChooserPanel0, 1142, (-1842L), 0, (-527), (-527), 1142, false);
      // Undeclared exception!
      try {
        jTableUtils_DoubleClickListener0.mousePressed(mouseEvent0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 3);
      JTable jTable0 = new JTable((TableModel) defaultTableModel0);
      JTableUtils.centerColumn(1, jTable0);
      assertEquals(0, jTable0.getDebugGraphicsOptions());
  }

  @Test
  public void test10()  throws Throwable  {
      JTable jTable0 = new JTable(0, 0);
      JTableUtils.scrollToCell(jTable0, 0, 13);
      assertEquals(0, jTable0.getRowCount());
  }

  @Test
  public void test11()  throws Throwable  {
      Vector<JViewport> vector0 = new Vector<JViewport>();
      JTable jTable0 = new JTable(vector0, vector0);
      JScrollPane jScrollPane0 = new JScrollPane((Component) jTable0);
      JTableUtils.scrollToCell(jTable0, (-549), 0);
      assertEquals(true, jTable0.isVisible());
  }

  @Test
  public void test12()  throws Throwable  {
      JTable jTable0 = new JTable();
      List<Object> list0 = JTableUtils.getSelectedColumns(jTable0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][6];
      Object object0 = RenderingHints.VALUE_ANTIALIAS_DEFAULT;
      Object[] objectArray1 = new Object[10];
      objectArray1[0] = object0;
      objectArray1[1] = object0;
      objectArray1[2] = object0;
      objectArray1[3] = object0;
      objectArray1[4] = object0;
      objectArray1[5] = object0;
      objectArray1[6] = objectArray1[5];
      objectArray1[7] = object0;
      objectArray1[8] = object0;
      objectArray1[9] = objectArray1[4];
      objectArray0[1] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[1]);
      // Undeclared exception!
      try {
        JTableUtils.getSelectedColumns(jTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * -1
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][8];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTable jTable0 = new JTable(vector0, vector0);
      double[] doubleArray0 = new double[1];
      JTableUtils.setPreferredColumnPercents2(jTable0, doubleArray0);
      assertEquals(0, jTable0.getSelectedColumnCount());
  }

  @Test
  public void test15()  throws Throwable  {
      Vector<JViewport> vector0 = new Vector<JViewport>();
      JTable jTable0 = new JTable(vector0, vector0);
      double[] doubleArray0 = new double[10];
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertEquals(0, jTable0.getX());
  }

  @Test
  public void test16()  throws Throwable  {
      Object[][] objectArray0 = new Object[12][8];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      Vector<Object> vector0 = defaultTableModel0.getDataVector();
      JTable jTable0 = new JTable(vector0, vector0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[6] = (double) 1;
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertEquals(false, jTable0.getScrollableTracksViewportHeight());
  }
}
