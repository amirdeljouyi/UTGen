/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing.table.rowmodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.data.CalorieCountData;
import com.lts.caloriecount.data.entry.EntryList;
import com.lts.caloriecount.data.frequent.FrequentFoodList;
import com.lts.caloriecount.ui.frequent.FrequentRowModel;
import com.lts.datalist.DataList;
import com.lts.swing.table.TableModelHelper;
import com.lts.swing.table.rowmodel.RowModel;
import com.lts.swing.table.rowmodel.RowModelDataListBridge;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class RowModelTableModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CalorieCountData calorieCountData0 = new CalorieCountData();
      EntryList entryList0 = calorieCountData0.getMeals();
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge((DataList) entryList0, (RowModel) frequentRowModel0);
      boolean boolean0 = rowModelDataListBridge0.isCellEditable(0, 0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      FrequentFoodList frequentFoodList0 = new FrequentFoodList();
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge((DataList) frequentFoodList0, (RowModel) frequentRowModel0);
      rowModelDataListBridge0.setRowModel((RowModel) frequentRowModel0);
      assertEquals(3, frequentRowModel0.getColumnCount());
  }

  @Test
  public void test2()  throws Throwable  {
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge();
      // Undeclared exception!
      try {
        rowModelDataListBridge0.getValueAt((-1), (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      CalorieCountData calorieCountData0 = new CalorieCountData();
      EntryList entryList0 = calorieCountData0.getMeals();
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge((DataList) entryList0, (RowModel) frequentRowModel0);
      JTable jTable0 = new JTable((TableModel) rowModelDataListBridge0, (TableColumnModel) null, (ListSelectionModel) null);
      assertNotNull(jTable0);
      
      rowModelDataListBridge0.removeTableModelListener((TableModelListener) jTable0);
      assertEquals(3, jTable0.getColumnCount());
      assertEquals(3, rowModelDataListBridge0.getColumnCount());
  }

  @Test
  public void test4()  throws Throwable  {
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge();
      // Undeclared exception!
      try {
        rowModelDataListBridge0.setValueAt((Object) "/mnt/fastdata/ac1gf/SF110/dist/78_caloriecount/8cvx5M0.ip&O$=cA/8cvx5M0.ip&O$=cA", 11, 11);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      CalorieCountData calorieCountData0 = new CalorieCountData();
      EntryList entryList0 = calorieCountData0.getMeals();
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge((DataList) entryList0, (RowModel) frequentRowModel0);
      FrequentRowModel frequentRowModel1 = (FrequentRowModel)rowModelDataListBridge0.getRowModel();
      assertSame(frequentRowModel1, frequentRowModel0);
  }

  @Test
  public void test6()  throws Throwable  {
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge();
      TableModelHelper tableModelHelper0 = rowModelDataListBridge0.getHelper();
      rowModelDataListBridge0.setHelper(tableModelHelper0);
  }

  @Test
  public void test7()  throws Throwable  {
      RowModelDataListBridge rowModelDataListBridge0 = new RowModelDataListBridge();
      rowModelDataListBridge0.setHelper((TableModelHelper) null);
  }
}
