/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.swing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.swing.GridBagPanel;
import java.awt.Component;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableCellRenderer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GridBagPanelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      JScrollPane jScrollPane0 = new JScrollPane();
      gridBagPanel0.addTitle((Component) jScrollPane0, 2022);
      assertEquals(1, gridBagPanel0.countComponents());
      assertEquals(1, gridBagPanel0.getComponentCount());
  }

  @Test
  public void test1()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      // Undeclared exception!
      try {
        gridBagPanel0.addFill((Component) gridBagPanel0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * adding container's parent to itself
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      // Undeclared exception!
      try {
        gridBagPanel0.addButton((Component) gridBagPanel0, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * adding container's parent to itself
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      assertEquals(0, gridBagPanel0.getColumn());
      
      gridBagPanel0.nextColumn();
      assertEquals(1, gridBagPanel0.getColumn());
      assertEquals(0, gridBagPanel0.getRow());
  }

  @Test
  public void test4()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      JSpinner jSpinner0 = new JSpinner();
      gridBagPanel0.addHorizontal((Component) jSpinner0);
      assertEquals(1, gridBagPanel0.getComponentCount());
      assertEquals(1, gridBagPanel0.getColumn());
  }

  @Test
  public void test5()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      DefaultTableCellRenderer defaultTableCellRenderer0 = new DefaultTableCellRenderer();
      gridBagPanel0.addButton((Component) defaultTableCellRenderer0);
      assertEquals(1, gridBagPanel0.countComponents());
      assertEquals(0, gridBagPanel0.getColumn());
  }

  @Test
  public void test6()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      // Undeclared exception!
      try {
        gridBagPanel0.addLabel((Component) gridBagPanel0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * adding container's parent to itself
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      // Undeclared exception!
      try {
        gridBagPanel0.addTitle((Component) gridBagPanel0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * adding container's parent to itself
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      GridBagPanel gridBagPanel0 = new GridBagPanel();
      assertEquals(0, gridBagPanel0.getRow());
      
      gridBagPanel0.nextRow();
      assertEquals(1, gridBagPanel0.getRow());
  }
}
