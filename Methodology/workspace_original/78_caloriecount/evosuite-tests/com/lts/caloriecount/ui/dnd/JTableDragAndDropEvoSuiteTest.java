/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.caloriecount.ui.dnd;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.frequent.FrequentTableDragAndDrop;
import java.awt.Component;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import javax.swing.JComponent;
import javax.swing.JTable;
import javax.swing.TransferHandler;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class JTableDragAndDropEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FrequentTableDragAndDrop frequentTableDragAndDrop0 = new FrequentTableDragAndDrop();
      JTable jTable0 = new JTable((TableModel) null);
      frequentTableDragAndDrop0.moveMarkData((JComponent) jTable0);
      frequentTableDragAndDrop0.moveDeleteData((JComponent) jTable0);
      assertEquals(true, jTable0.isEnabled());
  }

  @Test
  public void test1()  throws Throwable  {
      JTable jTable0 = new JTable((TableModel) null);
      FrequentTableDragAndDrop frequentTableDragAndDrop0 = new FrequentTableDragAndDrop();
      Object object0 = frequentTableDragAndDrop0.moveCopyData((JComponent) jTable0);
      StringSelection stringSelection0 = new StringSelection((String) null);
      TransferHandler.TransferSupport transferHandler_TransferSupport0 = new TransferHandler.TransferSupport((Component) jTable0, (Transferable) stringSelection0);
      frequentTableDragAndDrop0.movePasteData(transferHandler_TransferSupport0, object0);
      assertEquals(false, transferHandler_TransferSupport0.isDrop());
  }

  @Test
  public void test2()  throws Throwable  {
      JTable jTable0 = new JTable((TableModel) null);
      FrequentTableDragAndDrop frequentTableDragAndDrop0 = new FrequentTableDragAndDrop();
      Object object0 = frequentTableDragAndDrop0.moveCopyData((JComponent) jTable0);
      frequentTableDragAndDrop0.delete((JComponent) jTable0, object0);
      assertEquals(-1, jTable0.getSelectedColumn());
  }

  @Test
  public void test3()  throws Throwable  {
      FrequentTableDragAndDrop frequentTableDragAndDrop0 = new FrequentTableDragAndDrop();
      JTable jTable0 = new JTable((TableModel) null);
      jTable0.changeSelection(1, 1, false, false);
      frequentTableDragAndDrop0.moveMarkData((JComponent) jTable0);
      // Undeclared exception!
      try {
        frequentTableDragAndDrop0.moveDeleteData((JComponent) jTable0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
