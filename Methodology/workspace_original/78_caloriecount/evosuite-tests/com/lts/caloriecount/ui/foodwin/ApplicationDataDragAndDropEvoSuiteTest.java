/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.caloriecount.ui.foodwin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.data.CalorieCountData;
import com.lts.caloriecount.data.food.FoodList;
import com.lts.caloriecount.ui.dnd.DragAndDropHandler;
import com.lts.caloriecount.ui.foodwin.FoodSelectDragAndDrop;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ApplicationDataDragAndDropEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FoodSelectDragAndDrop foodSelectDragAndDrop0 = new FoodSelectDragAndDrop((FoodList) null);
      JTable jTable0 = new JTable(0, 0);
      // Undeclared exception!
      try {
        foodSelectDragAndDrop0.deleteRow(jTable0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CalorieCountData calorieCountData0 = new CalorieCountData();
      FoodSelectDragAndDrop foodSelectDragAndDrop0 = new FoodSelectDragAndDrop((FoodList) null);
      Object[][] objectArray0 = new Object[7][6];
      objectArray0[0] = (Object[]) calorieCountData0.ourElements;
      JTable jTable0 = new JTable(objectArray0, objectArray0[0]);
      // Undeclared exception!
      try {
        foodSelectDragAndDrop0.pasteRow(jTable0, (-777), (Object) calorieCountData0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * com.lts.caloriecount.data.CalorieCountData cannot be cast to com.lts.application.data.ApplicationDataElement
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FoodSelectDragAndDrop foodSelectDragAndDrop0 = new FoodSelectDragAndDrop((FoodList) null);
      JTable jTable0 = new JTable((TableModel) null);
      // Undeclared exception!
      try {
        foodSelectDragAndDrop0.copyRow(jTable0, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FoodSelectDragAndDrop foodSelectDragAndDrop0 = new FoodSelectDragAndDrop((FoodList) null);
      assertNotNull(foodSelectDragAndDrop0);
      
      DragAndDropHandler.DragAndDropOperations dragAndDropHandler_DragAndDropOperations0 = DragAndDropHandler.DragAndDropOperations.Cut;
      boolean boolean0 = foodSelectDragAndDrop0.supportsOperation(dragAndDropHandler_DragAndDropOperations0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      FoodList foodList0 = new FoodList();
      FoodSelectDragAndDrop foodSelectDragAndDrop0 = new FoodSelectDragAndDrop(foodList0);
      assertNotNull(foodSelectDragAndDrop0);
      
      boolean boolean0 = foodSelectDragAndDrop0.supportsOperation((DragAndDropHandler.DragAndDropOperations) null);
      assertEquals(false, boolean0);
  }
}
