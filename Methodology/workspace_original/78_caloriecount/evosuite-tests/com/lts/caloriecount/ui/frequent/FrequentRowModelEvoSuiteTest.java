/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.caloriecount.ui.frequent;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.frequent.FrequentRowModel;
import com.lts.caloriecount.ui.frequent.InvalidOperationException;
import com.lts.exception.NotImplementedException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FrequentRowModelEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      assertNotNull(frequentRowModel0);
      
      // Undeclared exception!
      try {
        frequentRowModel0.compareRows((Object) "1785.686043195585", (Object) "1785.686043195585");
        fail("Expecting exception: InvalidOperationException");
      } catch(InvalidOperationException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      assertNotNull(frequentRowModel0);
      
      // Undeclared exception!
      try {
        frequentRowModel0.setValueAt(1879, (Object) "ToolTipText", 1879, (Object) "ToolTipText");
        fail("Expecting exception: NotImplementedException");
      } catch(NotImplementedException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      assertNotNull(frequentRowModel0);
      
      // Undeclared exception!
      try {
        frequentRowModel0.getValueAt(0, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      assertNotNull(frequentRowModel0);
      
      // Undeclared exception!
      try {
        frequentRowModel0.getValueAt((-2046), (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * -2046
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      FrequentRowModel frequentRowModel0 = new FrequentRowModel();
      assertNotNull(frequentRowModel0);
      
      // Undeclared exception!
      try {
        frequentRowModel0.getValueAt(1, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
