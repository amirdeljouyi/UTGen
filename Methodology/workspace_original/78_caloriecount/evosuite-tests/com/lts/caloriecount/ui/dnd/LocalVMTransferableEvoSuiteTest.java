/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.caloriecount.ui.dnd;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.dnd.LocalVMTransferable;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LocalVMTransferableEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LocalVMTransferable localVMTransferable0 = new LocalVMTransferable((Object) null);
      boolean boolean0 = localVMTransferable0.isDataFlavorSupported(localVMTransferable0.JVM_OBJECT_FLAVOR);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      LocalVMTransferable.initializeStaticData();
  }

  @Test
  public void test2()  throws Throwable  {
      LocalVMTransferable localVMTransferable0 = new LocalVMTransferable((Object) null);
      DataFlavor[] dataFlavorArray0 = localVMTransferable0.getTransferDataFlavors();
      assertNotNull(dataFlavorArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      LocalVMTransferable localVMTransferable0 = new LocalVMTransferable((Object) "java.io.InputStream");
      try {
        localVMTransferable0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      } catch(UnsupportedFlavorException e) {
        /*
         * application/x-java-file-list
         */
      }
  }
}
