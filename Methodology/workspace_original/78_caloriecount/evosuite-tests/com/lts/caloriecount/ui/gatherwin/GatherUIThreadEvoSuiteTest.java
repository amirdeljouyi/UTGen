/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.caloriecount.ui.gatherwin;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.gatherwin.GatherUIThread;
import com.lts.util.DefaultSharedQueue;
import com.lts.util.SharedQueue;
import java.awt.HeadlessException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class GatherUIThreadEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      GatherUIThread gatherUIThread0 = new GatherUIThread((SharedQueue) defaultSharedQueue0);
      gatherUIThread0.gatherNow();
      assertEquals("===] Shared Queue Report [===\n\nQueue contents:\n0\n", defaultSharedQueue0.getReport());
  }

  @Test
  public void test1()  throws Throwable  {
      GatherUIThread gatherUIThread0 = new GatherUIThread((SharedQueue) null);
      gatherUIThread0.start();
      assertEquals("Gather UI Thread", gatherUIThread0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      GatherUIThread gatherUIThread0 = new GatherUIThread((SharedQueue) defaultSharedQueue0);
      // Undeclared exception!
      try {
        gatherUIThread0.performGather();
        fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      GatherUIThread gatherUIThread0 = new GatherUIThread((SharedQueue) defaultSharedQueue0);
      boolean boolean0 = gatherUIThread0.applicationHasFocus();
      assertEquals(false, boolean0);
  }
}
