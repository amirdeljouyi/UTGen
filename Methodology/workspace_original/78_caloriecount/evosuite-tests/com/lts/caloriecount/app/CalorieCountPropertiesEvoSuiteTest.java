/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.caloriecount.app;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.app.CalorieCountProperties;
import java.io.File;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CalorieCountPropertiesEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Properties properties0 = new Properties();
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      boolean boolean0 = calorieCountProperties0.reloadWindows();
      assertEquals(true, boolean0);
      
      calorieCountProperties0.initializeDefaults();
      assertEquals(true, calorieCountProperties0.reloadWindows());
  }

  @Test
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put((Object) "app.lastDirectory", (Object) "app.lastDirectory");
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      File file0 = calorieCountProperties0.getLastDirectory();
      assertNull(file0);
  }

  @Test
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      File file0 = calorieCountProperties0.getLastDirectory();
      assertNull(file0);
  }

  @Test
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      // Undeclared exception!
      try {
        calorieCountProperties0.setLastDirectory((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      File file0 = new File("", "");
      calorieCountProperties0.setLastDirectory(file0);
      assertEquals(1, calorieCountProperties0.size());
      assertEquals("{app.lastDirectory=/}", calorieCountProperties0.toString());
  }

  @Test
  public void test5()  throws Throwable  {
      Properties properties0 = new Properties();
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      File file0 = new File("at?V.86`eRH3J", "at?V.86`eRH3J");
      // Undeclared exception!
      try {
        calorieCountProperties0.setLastDirectory(file0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Properties properties0 = new Properties();
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties(properties0);
      calorieCountProperties0.reloadWindows();
      boolean boolean0 = calorieCountProperties0.reloadWindows();
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties((Properties) null);
      calorieCountProperties0.put((Object) "", (Object) "");
      calorieCountProperties0.getBooleanProperty("");
      assertEquals(true, calorieCountProperties0.reloadWindows());
  }

  @Test
  public void test8()  throws Throwable  {
      CalorieCountProperties calorieCountProperties0 = new CalorieCountProperties((Properties) null);
      boolean boolean0 = calorieCountProperties0.getBooleanProperty("");
      assertEquals(false, boolean0);
      assertEquals(true, calorieCountProperties0.reloadWindows());
  }
}
