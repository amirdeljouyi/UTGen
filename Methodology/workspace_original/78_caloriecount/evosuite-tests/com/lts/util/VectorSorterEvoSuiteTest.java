/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.util.CompareMethod;
import com.lts.util.IntegerCompareMethod;
import com.lts.util.StringCompareMethod;
import com.lts.util.VectorSorter;
import java.util.Vector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class VectorSorterEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      VectorSorter vectorSorter0 = new VectorSorter();
      assertNotNull(vectorSorter0);
  }

  @Test
  public void test1()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod();
      VectorSorter.sort((Vector) null, (CompareMethod) integerCompareMethod0);
      assertEquals(true, integerCompareMethod0.ascending());
  }

  @Test
  public void test2()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod((-1068));
      VectorSorter.sort((Vector) vector0, (CompareMethod) stringCompareMethod0);
      assertEquals(true, vector0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "[]");
      vector0.add((Object) "[]");
      vector0.add((Object) "DQbIWE~sy@5p");
      vector0.add((Object) "[[]]");
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod((-1068));
      VectorSorter.sort((Vector) vector0, (CompareMethod) stringCompareMethod0);
      assertEquals(false, stringCompareMethod0.ascending());
  }
}
