/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util.notifyinglist;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.entry.EntryRowModel;
import com.lts.caloriecount.ui.foodwin.FoodRowModel;
import com.lts.caloriecount.ui.propertywindow.PropertyRowModel;
import com.lts.swing.table.rowmodel.RowModel;
import com.lts.util.notifyinglist.ListEvent;
import com.lts.util.notifyinglist.NotifyingList;
import com.lts.util.notifyinglist.NotifyingListAdaptor;
import com.lts.util.notifyinglist.NotifyingListListener;
import com.lts.util.notifyinglist.OtherNotifyingListAdaptor;
import com.lts.util.notifyinglist.TableBridge;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TableBridgeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      EntryRowModel entryRowModel0 = new EntryRowModel();
      TableBridge<Object> tableBridge0 = new TableBridge<Object>((NotifyingList<Object>) otherNotifyingListAdaptor0, (RowModel) entryRowModel0);
      ListEvent.EventType listEvent_EventType0 = ListEvent.EventType.AllChanged;
      ListEvent listEvent0 = new ListEvent(listEvent_EventType0);
      tableBridge0.listEvent(listEvent0);
      assertEquals(0, tableBridge0.getRowCount());
  }

  @Test
  public void test1()  throws Throwable  {
      NotifyingListAdaptor<Integer> notifyingListAdaptor0 = new NotifyingListAdaptor<Integer>();
      FoodRowModel foodRowModel0 = new FoodRowModel();
      TableBridge<Integer> tableBridge0 = new TableBridge<Integer>((NotifyingList<Integer>) notifyingListAdaptor0, (RowModel) foodRowModel0);
      tableBridge0.append((Object) "LOWER_RIGHT_CORNER");
      int[] intArray0 = new int[1];
      notifyingListAdaptor0.removeAll(intArray0);
      assertEquals("{}", notifyingListAdaptor0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      OtherNotifyingListAdaptor<NotifyingListListener> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<NotifyingListListener>();
      PropertyRowModel propertyRowModel0 = new PropertyRowModel();
      TableBridge<NotifyingListListener> tableBridge0 = new TableBridge<NotifyingListListener>((NotifyingList<NotifyingListListener>) otherNotifyingListAdaptor0, (RowModel) propertyRowModel0);
      int[] intArray0 = new int[10];
      // Undeclared exception!
      try {
        tableBridge0.remove(intArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      EntryRowModel entryRowModel0 = new EntryRowModel();
      TableBridge<Object> tableBridge0 = new TableBridge<Object>((NotifyingList<Object>) otherNotifyingListAdaptor0, (RowModel) entryRowModel0);
      // Undeclared exception!
      try {
        tableBridge0.getRow((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      NotifyingListAdaptor<Integer> notifyingListAdaptor0 = new NotifyingListAdaptor<Integer>();
      FoodRowModel foodRowModel0 = new FoodRowModel();
      TableBridge<Integer> tableBridge0 = new TableBridge<Integer>((NotifyingList<Integer>) notifyingListAdaptor0, (RowModel) foodRowModel0);
      ListEvent.EventType listEvent_EventType0 = ListEvent.EventType.Update;
      ListEvent listEvent0 = new ListEvent(listEvent_EventType0);
      tableBridge0.listEvent(listEvent0);
      assertEquals((-1), listEvent0.index);
  }

  @Test
  public void test5()  throws Throwable  {
      OtherNotifyingListAdaptor<Integer> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Integer>();
      FoodRowModel foodRowModel0 = new FoodRowModel();
      TableBridge<Integer> tableBridge0 = new TableBridge<Integer>((NotifyingList<Integer>) otherNotifyingListAdaptor0, (RowModel) foodRowModel0);
      // Undeclared exception!
      try {
        tableBridge0.update(6, (Object) "SwingDisplayedMnemonicIndexKey");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 6, Size: 0
         */
      }
  }
}
