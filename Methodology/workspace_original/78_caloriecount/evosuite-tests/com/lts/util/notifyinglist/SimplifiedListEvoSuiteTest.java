/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util.notifyinglist;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.entry.EntryRowModel;
import com.lts.exception.NotImplementedException;
import com.lts.swing.table.rowmodel.RowModel;
import com.lts.util.TreeNode;
import com.lts.util.notifyinglist.ListProxy;
import com.lts.util.notifyinglist.NotifyingList;
import com.lts.util.notifyinglist.NotifyingListAdaptor;
import com.lts.util.notifyinglist.OtherNotifyingListAdaptor;
import com.lts.util.notifyinglist.TableBridge;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.List;
import java.util.ListIterator;
import java.util.Vector;

@RunWith(EvoSuiteRunner.class)
public class SimplifiedListEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.clear()V: root-Branch
   * 2 com.lts.util.notifyinglist.SimplifiedList.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      OtherNotifyingListAdaptor<Integer> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Integer>();
      otherNotifyingListAdaptor0.clear();
      assertEquals(false, otherNotifyingListAdaptor0.isEmpty());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.listIterator(I)Ljava/util/ListIterator;: root-Branch
   * 2 com.lts.util.notifyinglist.SimplifiedList.iterator()Ljava/util/Iterator;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      OtherNotifyingListAdaptor<Integer> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Integer>();
      ListProxy<Integer> listProxy0 = new ListProxy<Integer>((NotifyingList<Integer>) otherNotifyingListAdaptor0);
      // Undeclared exception!
      try {
        listProxy0.addAll((Collection<? extends Integer>) listProxy0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: -1
         */
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.specializedCaseToArray([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 2 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 19 IF_ICMPGE L274 - false
   * 3 com.lts.util.notifyinglist.SimplifiedList.add(ILjava/lang/Object;)V: root-Branch
   * 4 com.lts.util.notifyinglist.SimplifiedList.size()I: root-Branch
   * 5 com.lts.util.notifyinglist.SimplifiedList.add(Ljava/lang/Object;)Z: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      NotifyingListAdaptor<String> notifyingListAdaptor0 = new NotifyingListAdaptor<String>();
      ListProxy<String> listProxy0 = new ListProxy<String>((NotifyingList<String>) notifyingListAdaptor0);
      Object[] objectArray0 = new Object[1];
      notifyingListAdaptor0.add("R4NW)(LtpVR");
      listProxy0.add("R4NW)(LtpVR");
      // Undeclared exception!
      try {
        listProxy0.toArray(objectArray0);
        fail("Expecting exception: NotImplementedException");
      } catch(NotImplementedException e) {
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.set(ILjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 2 com.lts.util.notifyinglist.SimplifiedList.get(I)Ljava/lang/Object;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      NotifyingListAdaptor<TableBridge<Object>> notifyingListAdaptor0 = new NotifyingListAdaptor<TableBridge<Object>>((List<TableBridge<Object>>) null);
      ListProxy<TableBridge<Object>> listProxy0 = new ListProxy<TableBridge<Object>>((NotifyingList<TableBridge<Object>>) notifyingListAdaptor0);
      EntryRowModel entryRowModel0 = new EntryRowModel();
      TableBridge<Object> tableBridge0 = new TableBridge<Object>((NotifyingList<Object>) otherNotifyingListAdaptor0, (RowModel) entryRowModel0);
      // Undeclared exception!
      try {
        listProxy0.set(0, tableBridge0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.remove(I)Ljava/lang/Object;: root-Branch
   * 2 com.lts.util.notifyinglist.SimplifiedList.indexOf(Ljava/lang/Object;)I: root-Branch
   * 3 com.lts.util.notifyinglist.SimplifiedList.remove(Ljava/lang/Object;)Z: I10 Branch 10 IF_ICMPNE L178 - true
   * 4 com.lts.util.notifyinglist.SimplifiedList.removeAll(Ljava/util/Collection;)Z: I12 Branch 11 IFEQ L200 - false
   * 5 com.lts.util.notifyinglist.SimplifiedList.removeAll(Ljava/util/Collection;)Z: I21 Branch 12 IFEQ L202 - false
   */
  @Test
  public void test4()  throws Throwable  {
      OtherNotifyingListAdaptor<List<Integer>> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<List<Integer>>();
      ListProxy<List<Integer>> listProxy0 = new ListProxy<List<Integer>>((NotifyingList<List<Integer>>) otherNotifyingListAdaptor0);
      Vector<Integer> vector0 = new Vector<Integer>();
      otherNotifyingListAdaptor0.add((List<Integer>) vector0);
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      
      // Undeclared exception!
      try {
        listProxy0.removeAll((Collection<?>) otherNotifyingListAdaptor0);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 com.lts.util.notifyinglist.SimplifiedList.subList(II)Ljava/util/List;: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      // Undeclared exception!
      try {
        otherNotifyingListAdaptor0.subList(0, 0);
        fail("Expecting exception: NotImplementedException");
      } catch(NotImplementedException e) {
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 com.lts.util.notifyinglist.SimplifiedList.listIterator()Ljava/util/ListIterator;: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      ListIterator<Object> listIterator0 = otherNotifyingListAdaptor0.listIterator();
      assertEquals(-1, listIterator0.previousIndex());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 com.lts.util.notifyinglist.SimplifiedList.addAll(Ljava/util/Collection;)Z: I8 Branch 1 IFEQ L77 - true
   */
  @Test
  public void test7()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      ListProxy<String> listProxy0 = new ListProxy<String>((NotifyingList<String>) otherNotifyingListAdaptor0);
      boolean boolean0 = listProxy0.addAll((Collection<? extends String>) otherNotifyingListAdaptor0);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 com.lts.util.notifyinglist.SimplifiedList.addAll(Ljava/util/Collection;)Z: I8 Branch 1 IFEQ L77 - false
   */
  @Test
  public void test8()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      NotifyingListAdaptor<Object> notifyingListAdaptor0 = new NotifyingListAdaptor<Object>((List<Object>) otherNotifyingListAdaptor0);
      ListProxy<Object> listProxy0 = new ListProxy<Object>((NotifyingList<Object>) notifyingListAdaptor0);
      otherNotifyingListAdaptor0.add((Object) "ROW_HEADER");
      // Undeclared exception!
      try {
        listProxy0.addAll((Collection<?>) otherNotifyingListAdaptor0);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
      }
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.addAll(ILjava/util/Collection;)Z: I8 Branch 2 IFEQ L87 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.addAll(ILjava/util/Collection;)Z: I8 Branch 2 IFEQ L87 - true
   */
  @Test
  public void test9()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor0.add("");
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor1 = new OtherNotifyingListAdaptor<Object>();
      boolean boolean0 = otherNotifyingListAdaptor1.addAll(0, (Collection<?>) otherNotifyingListAdaptor0);
      assertEquals(1, otherNotifyingListAdaptor0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.contains(Ljava/lang/Object;)Z: I6 Branch 3 IF_ICMPEQ L105 - true
   * 2 com.lts.util.notifyinglist.SimplifiedList.containsAll(Ljava/util/Collection;)Z: I8 Branch 4 IFEQ L111 - false
   * 3 com.lts.util.notifyinglist.SimplifiedList.containsAll(Ljava/util/Collection;)Z: I17 Branch 5 IFNE L113 - false
   */
  @Test
  public void test10()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor0.add("");
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor1 = new OtherNotifyingListAdaptor<Object>();
      boolean boolean0 = otherNotifyingListAdaptor1.containsAll((Collection<?>) otherNotifyingListAdaptor0);
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 4 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.contains(Ljava/lang/Object;)Z: I6 Branch 3 IF_ICMPEQ L105 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.containsAll(Ljava/util/Collection;)Z: I8 Branch 4 IFEQ L111 - true
   * 3 com.lts.util.notifyinglist.SimplifiedList.containsAll(Ljava/util/Collection;)Z: I17 Branch 5 IFNE L113 - true
   * 4 com.lts.util.notifyinglist.SimplifiedList.containsAll(Ljava/util/Collection;)Z: I8 Branch 4 IFEQ L111 - false
   */
  @Test
  public void test11()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor1 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor1.add("$ename");
      otherNotifyingListAdaptor0.add((Object) "$ename");
      ListProxy<String> listProxy0 = new ListProxy<String>((NotifyingList<String>) otherNotifyingListAdaptor1);
      boolean boolean0 = listProxy0.containsAll((Collection<?>) otherNotifyingListAdaptor0);
      assertEquals(true, otherNotifyingListAdaptor1.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 com.lts.util.notifyinglist.SimplifiedList.isEmpty()Z: I4 Branch 6 IFLE L135 - true
   */
  @Test
  public void test12()  throws Throwable  {
      OtherNotifyingListAdaptor<List<Object>> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<List<Object>>();
      boolean boolean0 = otherNotifyingListAdaptor0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 com.lts.util.notifyinglist.SimplifiedList.isEmpty()Z: I4 Branch 6 IFLE L135 - false
   */
  @Test
  public void test13()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      otherNotifyingListAdaptor0.add((Object) "$ename");
      ListProxy<Object> listProxy0 = new ListProxy<Object>((NotifyingList<Object>) otherNotifyingListAdaptor0);
      boolean boolean0 = listProxy0.isEmpty();
      assertEquals(1, otherNotifyingListAdaptor0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I16 Branch 8 IFLT L150 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I28 Branch 9 IFEQ L153 - false
   * 3 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I14 Branch 7 IFNE L150 - false
   */
  @Test
  public void test14()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor0.add("");
      int int0 = otherNotifyingListAdaptor0.lastIndexOf((Object) "");
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      assertEquals(0, int0);
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I28 Branch 9 IFEQ L153 - true
   * 2 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I14 Branch 7 IFNE L150 - false
   * 3 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I16 Branch 8 IFLT L150 - true
   * 4 com.lts.util.notifyinglist.SimplifiedList.lastIndexOf(Ljava/lang/Object;)I: I16 Branch 8 IFLT L150 - false
   */
  @Test
  public void test15()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor0.add("");
      int int0 = otherNotifyingListAdaptor0.lastIndexOf((Object) "");
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      assertEquals((-1), int0);
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.remove(Ljava/lang/Object;)Z: I10 Branch 10 IF_ICMPNE L178 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.removeAll(Ljava/util/Collection;)Z: I12 Branch 11 IFEQ L200 - true
   * 3 com.lts.util.notifyinglist.SimplifiedList.removeAll(Ljava/util/Collection;)Z: I21 Branch 12 IFEQ L202 - true
   * 4 com.lts.util.notifyinglist.SimplifiedList.removeAll(Ljava/util/Collection;)Z: I12 Branch 11 IFEQ L200 - false
   */
  @Test
  public void test16()  throws Throwable  {
      OtherNotifyingListAdaptor<Integer> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Integer>();
      otherNotifyingListAdaptor0.add((Integer) 2);
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor1 = new OtherNotifyingListAdaptor<Object>();
      boolean boolean0 = otherNotifyingListAdaptor1.removeAll((Collection<?>) otherNotifyingListAdaptor0);
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I27 Branch 14 IF_ACMPEQ L215 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I33 Branch 15 IFEQ L217 - true
   * 3 com.lts.util.notifyinglist.SimplifiedList.remove(Ljava/lang/Object;)Z: I10 Branch 10 IF_ICMPNE L178 - false
   * 4 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I18 Branch 13 IF_ICMPGE L213 - true
   * 5 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I18 Branch 13 IF_ICMPGE L213 - false
   * 6 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I27 Branch 14 IF_ACMPEQ L215 - true
   */
  @Test
  public void test17()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      boolean boolean0 = otherNotifyingListAdaptor0.removeAll(stringArray0);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I33 Branch 15 IFEQ L217 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I18 Branch 13 IF_ICMPGE L213 - true
   * 3 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I18 Branch 13 IF_ICMPGE L213 - false
   * 4 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I27 Branch 14 IF_ACMPEQ L215 - true
   * 5 com.lts.util.notifyinglist.SimplifiedList.removeAll([Ljava/lang/Object;)Z: I27 Branch 14 IF_ACMPEQ L215 - false
   */
  @Test
  public void test18()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor0.add("");
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      boolean boolean0 = otherNotifyingListAdaptor0.removeAll(stringArray0);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.retainAll(Ljava/util/Collection;)Z: I12 Branch 16 IFEQ L231 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.retainAll(Ljava/util/Collection;)Z: I21 Branch 17 IFGT L233 - false
   * 3 com.lts.util.notifyinglist.SimplifiedList.get(I)Ljava/lang/Object;: root-Branch
   * 4 com.lts.util.notifyinglist.SimplifiedList.remove(I)Ljava/lang/Object;: root-Branch
   * 5 com.lts.util.notifyinglist.SimplifiedList.indexOf(Ljava/lang/Object;)I: root-Branch
   * 6 com.lts.util.notifyinglist.SimplifiedList.remove(Ljava/lang/Object;)Z: I10 Branch 10 IF_ICMPNE L178 - true
   */
  @Test
  public void test19()  throws Throwable  {
      OtherNotifyingListAdaptor<Object> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<Object>();
      otherNotifyingListAdaptor0.add((Object) "572");
      assertEquals(true, otherNotifyingListAdaptor0.isEmpty());
      
      OtherNotifyingListAdaptor<Integer> otherNotifyingListAdaptor1 = new OtherNotifyingListAdaptor<Integer>();
      // Undeclared exception!
      try {
        otherNotifyingListAdaptor0.retainAll((Collection<?>) otherNotifyingListAdaptor1);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
      }
  }

  //Test case number: 20
  /*
   * 11 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.retainAll(Ljava/util/Collection;)Z: I21 Branch 17 IFGT L233 - true
   * 2 com.lts.util.notifyinglist.SimplifiedList.toArray()[Ljava/lang/Object;: I18 Branch 18 IFEQ L262 - true
   * 3 com.lts.util.notifyinglist.SimplifiedList.toArray()[Ljava/lang/Object;: I18 Branch 18 IFEQ L262 - false
   * 4 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 19 IF_ICMPGE L274 - true
   * 5 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I31 Branch 20 IFEQ L281 - true
   * 6 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I31 Branch 20 IFEQ L281 - false
   * 7 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I51 Branch 21 IF_ICMPLE L287 - true
   * 8 com.lts.util.notifyinglist.SimplifiedList.add(ILjava/lang/Object;)V: root-Branch
   * 9 com.lts.util.notifyinglist.SimplifiedList.add(Ljava/lang/Object;)Z: root-Branch
   * 10 com.lts.util.notifyinglist.SimplifiedList.retainAll(Ljava/util/Collection;)Z: I12 Branch 16 IFEQ L231 - true
   * 11 com.lts.util.notifyinglist.SimplifiedList.retainAll(Ljava/util/Collection;)Z: I12 Branch 16 IFEQ L231 - false
   */
  @Test
  public void test20()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      otherNotifyingListAdaptor0.add("");
      TreeNode treeNode0 = new TreeNode((TreeNode) null);
      TreeNode treeNode1 = new TreeNode(treeNode0, (Collection) otherNotifyingListAdaptor0);
      List<Object> list0 = treeNode1.getChildren();
      boolean boolean0 = otherNotifyingListAdaptor0.retainAll((Collection<?>) list0);
      assertEquals(1, otherNotifyingListAdaptor0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 6 covered goals:
   * 1 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I51 Branch 21 IF_ICMPLE L287 - false
   * 2 com.lts.util.notifyinglist.SimplifiedList.size()I: root-Branch
   * 3 com.lts.util.notifyinglist.SimplifiedList.iterator()Ljava/util/Iterator;: root-Branch
   * 4 com.lts.util.notifyinglist.SimplifiedList.<init>()V: root-Branch
   * 5 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 19 IF_ICMPGE L274 - true
   * 6 com.lts.util.notifyinglist.SimplifiedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I31 Branch 20 IFEQ L281 - true
   */
  @Test
  public void test21()  throws Throwable  {
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      Object[] objectArray0 = new Object[24];
      Object[] objectArray1 = otherNotifyingListAdaptor0.toArray(objectArray0);
      assertSame(objectArray1, objectArray0);
  }
}
