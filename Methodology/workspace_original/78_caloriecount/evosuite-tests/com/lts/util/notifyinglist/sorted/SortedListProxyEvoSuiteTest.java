/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util.notifyinglist.sorted;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.caloriecount.ui.dayview.MealRowModel;
import com.lts.caloriecount.ui.foodwin.FoodRowModel;
import com.lts.util.notifyinglist.ListEvent;
import com.lts.util.notifyinglist.ListProxy;
import com.lts.util.notifyinglist.NotifyingList;
import com.lts.util.notifyinglist.NotifyingListAdaptor;
import com.lts.util.notifyinglist.NotifyingListListener;
import com.lts.util.notifyinglist.OtherNotifyingListAdaptor;
import com.lts.util.notifyinglist.sorted.IndirectComparator;
import com.lts.util.notifyinglist.sorted.SortedListProxy;
import java.util.Comparator;
import java.util.List;
import java.util.Vector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SortedListProxyEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NotifyingListAdaptor<IndirectComparator> notifyingListAdaptor0 = new NotifyingListAdaptor<IndirectComparator>();
      SortedListProxy<IndirectComparator> sortedListProxy0 = new SortedListProxy<IndirectComparator>((Comparator) null, (NotifyingList<IndirectComparator>) notifyingListAdaptor0);
      IndirectComparator indirectComparator0 = new IndirectComparator();
      // Undeclared exception!
      try {
        sortedListProxy0.kernelUpdate(15, indirectComparator0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 15, Size: 0
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      FoodRowModel foodRowModel0 = new FoodRowModel();
      NotifyingListAdaptor<NotifyingList<Object>> notifyingListAdaptor0 = new NotifyingListAdaptor<NotifyingList<Object>>();
      ListProxy<NotifyingList<Object>> listProxy0 = new ListProxy<NotifyingList<Object>>((NotifyingList<NotifyingList<Object>>) notifyingListAdaptor0);
      SortedListProxy<NotifyingList<Object>> sortedListProxy0 = new SortedListProxy<NotifyingList<Object>>((Comparator) null, (NotifyingList<NotifyingList<Object>>) listProxy0);
      sortedListProxy0.remove((Object) foodRowModel0);
      assertEquals(0, sortedListProxy0.kernelSize());
      assertEquals(false, sortedListProxy0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      MealRowModel mealRowModel0 = new MealRowModel();
      Comparator<Object> comparator0 = mealRowModel0.getComparator();
      OtherNotifyingListAdaptor<String> otherNotifyingListAdaptor0 = new OtherNotifyingListAdaptor<String>();
      NotifyingListAdaptor<String> notifyingListAdaptor0 = new NotifyingListAdaptor<String>((List<String>) otherNotifyingListAdaptor0);
      SortedListProxy<String> sortedListProxy0 = new SortedListProxy<String>((Comparator) null, (NotifyingList<String>) notifyingListAdaptor0);
      SortedListProxy<String> sortedListProxy1 = new SortedListProxy<String>((Comparator) comparator0, (NotifyingList<String>) sortedListProxy0);
      sortedListProxy1.kernelCreate(0, "vi(4?bp7S53E#");
      assertEquals(1, otherNotifyingListAdaptor0.size());
      
      boolean boolean0 = sortedListProxy1.kernelDelete(0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      NotifyingListAdaptor<Object> notifyingListAdaptor0 = new NotifyingListAdaptor<Object>();
      SortedListProxy<Object> sortedListProxy0 = new SortedListProxy<Object>((Comparator) null, (NotifyingList<Object>) notifyingListAdaptor0);
      NotifyingListListener[] notifyingListListenerArray0 = new NotifyingListListener[8];
      NotifyingListListener[] notifyingListListenerArray1 = sortedListProxy0.toArray(notifyingListListenerArray0);
      assertEquals(false, sortedListProxy0.isEmpty());
      assertNotNull(notifyingListListenerArray1);
      assertEquals(0, sortedListProxy0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      IndirectComparator indirectComparator0 = new IndirectComparator();
      NotifyingListAdaptor<NotifyingListListener> notifyingListAdaptor0 = new NotifyingListAdaptor<NotifyingListListener>();
      SortedListProxy<NotifyingListListener> sortedListProxy0 = new SortedListProxy<NotifyingListListener>((Comparator) indirectComparator0, (NotifyingList<NotifyingListListener>) notifyingListAdaptor0);
      ListEvent.EventType listEvent_EventType0 = ListEvent.EventType.AllChanged;
      ListEvent listEvent0 = new ListEvent(listEvent_EventType0, (-946), (Object) "Monospaced");
      notifyingListAdaptor0.add((NotifyingListListener) sortedListProxy0);
      sortedListProxy0.listEvent(listEvent0);
      assertEquals(1, notifyingListAdaptor0.size());
      assertEquals(1, sortedListProxy0.kernelSize());
  }

  @Test
  public void test5()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      NotifyingListAdaptor<Integer> notifyingListAdaptor0 = new NotifyingListAdaptor<Integer>((List<Integer>) vector0);
      ListProxy<Integer> listProxy0 = new ListProxy<Integer>((NotifyingList<Integer>) notifyingListAdaptor0);
      SortedListProxy<Integer> sortedListProxy0 = new SortedListProxy<Integer>((Comparator) null, (NotifyingList<Integer>) listProxy0);
      ListEvent.EventType listEvent_EventType0 = ListEvent.EventType.Update;
      ListEvent listEvent0 = new ListEvent(listEvent_EventType0, (-740), (Object) "selection-begin-line");
      // Undeclared exception!
      try {
        sortedListProxy0.listEvent(listEvent0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
