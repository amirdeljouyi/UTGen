/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.util.IntegerCompareMethod;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IntegerCompareMethodEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod();
      // Undeclared exception!
      try {
        integerCompareMethod0.compare((Object) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * null argument
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod((-1738));
      Integer integer0 = new Integer((-1738));
      // Undeclared exception!
      try {
        integerCompareMethod0.compare((Object) integer0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * null argument
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod((-708));
      Integer integer0 = Integer.getInteger("VSJ]_n0UR2@DP_", 1427);
      int int0 = integerCompareMethod0.compare((Object) integer0, (Object) integer0);
      assertEquals(false, integerCompareMethod0.ascending());
      assertEquals(0, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod((-708));
      Integer integer0 = Integer.getInteger("VSJ]_n0UR2@DP_", 1427);
      Integer integer1 = new Integer(1);
      int int0 = integerCompareMethod0.compare((Object) integer0, (Object) integer1);
      assertEquals((-1), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod((-708));
      assertEquals(false, integerCompareMethod0.ascending());
      
      Integer integer0 = Integer.getInteger("VSJ]_n0UR2@DP_", 1427);
      integerCompareMethod0.setMode(0);
      Integer integer1 = new Integer(1);
      int int0 = integerCompareMethod0.compare((Object) integer0, (Object) integer1);
      assertEquals(true, integerCompareMethod0.ascending());
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod();
      Integer integer0 = new Integer((-3));
      Integer integer1 = new Integer(0);
      int int0 = integerCompareMethod0.compare((Object) integer0, (Object) integer1);
      assertEquals((-1), int0);
  }

  @Test
  public void test6()  throws Throwable  {
      IntegerCompareMethod integerCompareMethod0 = new IntegerCompareMethod(1);
      Integer integer0 = new Integer(973);
      Integer integer1 = new Integer(0);
      int int0 = integerCompareMethod0.compare((Object) integer1, (Object) integer0);
      assertEquals(1, int0);
  }
}
