/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.util.DefaultSharedQueue;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SharedQueueEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      List<Object> list0 = defaultSharedQueue0.copyContents();
      assertEquals(0, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      defaultSharedQueue0.put((Object) "===] Shared Queue Report [===\n\nQueue contents:\n");
      assertEquals("===] Shared Queue Report [===\n\nQueue contents:\n===] Shared Queue Report [===\n\nQueue contents:\n\n", defaultSharedQueue0.getReport());
      
      defaultSharedQueue0.next();
      assertEquals("===] Shared Queue Report [===\n\nQueue contents:\n", defaultSharedQueue0.getReport());
  }

  @Test
  public void test2()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      // Undeclared exception!
      try {
        defaultSharedQueue0.clear();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
      assertEquals("===] Shared Queue Report [===\n\nQueue contents:\n", defaultSharedQueue0.getReport());
  }

  @Test
  public void test3()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      String string0 = defaultSharedQueue0.getReport();
      assertEquals("===] Shared Queue Report [===\n\nQueue contents:\n", string0);
      assertNotNull(string0);
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      Object object0 = defaultSharedQueue0.basicNext();
      assertNull(object0);
  }
}
