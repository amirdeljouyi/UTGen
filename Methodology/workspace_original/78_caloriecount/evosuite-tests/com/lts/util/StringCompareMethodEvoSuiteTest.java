/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.util.StringCompareMethod;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StringCompareMethodEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod(0);
      // Undeclared exception!
      try {
        stringCompareMethod0.compare((Object) "Q^Tanm]d5AUey+55b.", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * null argument
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod();
      // Undeclared exception!
      try {
        stringCompareMethod0.compare((Object) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * null argument
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod();
      int int0 = stringCompareMethod0.compare((Object) "M", (Object) "");
      assertEquals(1, int0);
      assertEquals(true, stringCompareMethod0.ascending());
  }

  @Test
  public void test3()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod(0);
      int int0 = stringCompareMethod0.compare((Object) "><=", (Object) "><=");
      assertEquals(true, stringCompareMethod0.ascending());
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod((-1));
      int int0 = stringCompareMethod0.compare((Object) "M", (Object) "");
      assertEquals(false, stringCompareMethod0.ascending());
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod(0);
      int int0 = stringCompareMethod0.compare((Object) "", (Object) "Yl}UH(t^H}>xr");
      assertEquals((-1), int0);
      assertEquals(true, stringCompareMethod0.ascending());
  }

  @Test
  public void test6()  throws Throwable  {
      StringCompareMethod stringCompareMethod0 = new StringCompareMethod(4);
      int int0 = stringCompareMethod0.compare((Object) "", (Object) "Yl}UH(t^H}>xr");
      assertEquals((-1), int0);
      assertEquals(false, stringCompareMethod0.ascending());
  }
}
