/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util.scheduler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.util.DefaultSharedQueue;
import com.lts.util.SharedQueue;
import com.lts.util.scheduler.NewScheduler;
import org.evosuite.testcase.CodeUnderTestException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class NewSchedulerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      NewScheduler newScheduler0 = NewScheduler.getInstance();
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      newScheduler0.notifyAt((SharedQueue) defaultSharedQueue0, 59L);
      NewScheduler.ScheduledEvent newScheduler_ScheduledEvent0 = new NewScheduler.ScheduledEvent(59L, (SharedQueue) defaultSharedQueue0, (Object) "===] Shared Queue Report [===\n\nQueue contents:\n");
  }

  @Test
  public void test1()  throws Throwable  {
      NewScheduler newScheduler0 = new NewScheduler();
      // Undeclared exception!
      try {
        newScheduler0.notifyAt((SharedQueue) null, (-561L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      NewScheduler newScheduler0 = NewScheduler.getInstance();
      assertNotNull(newScheduler0);
      
      newScheduler0.process();
      assertEquals(2000L, newScheduler0.getNextSleepTime());
  }
}
