/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.util.CalendarUtil;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CalendarUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      long long0 = CalendarUtil.timeOfDay(1352L);
      assertEquals(1352L, long0);
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = CalendarUtil.yesterday(0L);
      assertNotNull(date0);
      
      long long0 = CalendarUtil.nextDay(date0);
      assertEquals((-3600000L), long0);
  }

  @Test
  public void test2()  throws Throwable  {
      SimpleDateFormat simpleDateFormat0 = new SimpleDateFormat();
      String string0 = CalendarUtil.formatForToday(simpleDateFormat0);
      assertEquals("01/01/70 1:00 AM", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      long long0 = CalendarUtil.todayMsec((-3600000L));
      assertEquals((-3600000L), long0);
  }

  @Test
  public void test4()  throws Throwable  {
      Date date0 = CalendarUtil.yesterday(0L);
      assertNotNull(date0);
      
      long long0 = CalendarUtil.startOfNextDay(date0);
      assertEquals((-90000000L), date0.getTime());
      assertEquals((-3600000L), long0);
  }

  @Test
  public void test5()  throws Throwable  {
      long long0 = CalendarUtil.tomorrowMsec();
      assertEquals(82800000L, long0);
  }

  @Test
  public void test6()  throws Throwable  {
      CalendarUtil calendarUtil0 = new CalendarUtil();
      assertEquals((-3600000L), calendarUtil0.todayMsec());
  }

  @Test
  public void test7()  throws Throwable  {
      Date date0 = CalendarUtil.yesterday();
      assertNotNull(date0);
      
      long long0 = CalendarUtil.startOfDay(date0);
      assertEquals((-90000000L), date0.getTime());
      assertEquals((-90000000L), long0);
  }

  @Test
  public void test8()  throws Throwable  {
      long long0 = CalendarUtil.todayMsec();
      assertEquals((-3600000L), long0);
  }

  @Test
  public void test9()  throws Throwable  {
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)CalendarUtil.calendarToday();
      assertNotNull(gregorianCalendar0);
      assertEquals("java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GB\",offset=0,dstSavings=3600000,useDaylight=true,transitions=242,lastRule=java.util.SimpleTimeZone[id=GB,offset=0,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1970,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=1,HOUR_OF_DAY=1,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0]", gregorianCalendar0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      long long0 = CalendarUtil.yesterdayMsec(688L);
      assertEquals((-90000000L), long0);
  }
}
