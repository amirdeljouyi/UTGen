/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.ui.datetime;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.ui.datetime.DateTimeField;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DateTimeFieldEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DateTimeField dateTimeField0 = new DateTimeField();
      assertNotNull(dateTimeField0);
      
      long long0 = dateTimeField0.getTime();
      assertEquals(false, dateTimeField0.boldText);
      assertEquals(true, dateTimeField0.boldLabels);
      assertEquals((-1000L), long0);
      assertEquals(4, dateTimeField0.getGridx());
      assertEquals(100, dateTimeField0.timeFieldSize);
  }

  @Test
  public void test1()  throws Throwable  {
      DateTimeField dateTimeField0 = new DateTimeField();
      assertNotNull(dateTimeField0);
      
      long long0 = dateTimeField0.getDateOnly();
      assertEquals((-3600000L), long0);
      assertEquals(false, dateTimeField0.boldText);
      assertEquals(100, dateTimeField0.timeFieldSize);
      assertEquals(true, dateTimeField0.boldLabels);
      assertEquals(4, dateTimeField0.getGridx());
  }

  @Test
  public void test2()  throws Throwable  {
      DateTimeField dateTimeField0 = new DateTimeField();
      assertNotNull(dateTimeField0);
      
      dateTimeField0.setTime((-7L));
      long long0 = dateTimeField0.getTimeOnly();
      assertEquals((-1000L), dateTimeField0.getTimeOnly());
      assertEquals(4, dateTimeField0.getGridx());
      assertEquals((-1000L), long0);
  }

  @Test
  public void test3()  throws Throwable  {
      DateTimeField dateTimeField0 = new DateTimeField();
      assertNotNull(dateTimeField0);
      
      long long0 = dateTimeField0.getTimeOnly();
      assertEquals(false, dateTimeField0.boldText);
      assertEquals(100, dateTimeField0.timeFieldSize);
      assertEquals((-1L), long0);
      assertEquals(true, dateTimeField0.boldLabels);
      assertEquals(4, dateTimeField0.countComponents());
  }
}
