/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.application.data;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.application.ApplicationException;
import com.lts.application.ApplicationRepository;
import com.lts.application.data.AppDataHelper;
import com.lts.application.repository.DirectoryRepository;
import java.io.File;
import java.util.List;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AppDataHelperEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AppDataHelper appDataHelper0 = new AppDataHelper();
      assertNotNull(appDataHelper0);
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("HV;/d{)huNd\"b0d");
      DirectoryRepository directoryRepository0 = new DirectoryRepository(file0, file0);
      List<Object> list0 = AppDataHelper.loadTextList((ApplicationRepository) directoryRepository0, "HV;/d{)huNd\"b0d");
      assertEquals(0, list0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try {
        AppDataHelper.storeProperties((ApplicationRepository) null, "", properties0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      File file0 = new File("HV;/d{)huNd\"b0d");
      DirectoryRepository directoryRepository0 = new DirectoryRepository(file0, file0);
      AppDataHelper.storeProperties((ApplicationRepository) directoryRepository0, "HV;/d{)huNd\"b0d", (Properties) null);
      assertEquals(true, directoryRepository0.repositoryUsesDirectories());
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("HV;/d{)huNd\"b0d");
      DirectoryRepository directoryRepository0 = new DirectoryRepository(file0, file0);
      Properties properties0 = AppDataHelper.loadProperties((ApplicationRepository) directoryRepository0, "HV;/d{)huNd\"b0d");
      assertNull(properties0);
  }

  @Test
  public void test5()  throws Throwable  {
      File file0 = new File("&", "&");
      DirectoryRepository directoryRepository0 = new DirectoryRepository(file0, file0);
      try {
        AppDataHelper.loadXml((ApplicationRepository) directoryRepository0, "&");
        fail("Expecting exception: ApplicationException");
      } catch(ApplicationException e) {
        /*
         * com.lts.application.errors.repository.read, [0] &/&, [1] &
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try {
        AppDataHelper.loadXml((ApplicationRepository) null, "1");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        AppDataHelper.storeXml((ApplicationRepository) null, "Z2", (Object) "Z2");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
