/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.trace;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.trace.MethodCall;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class MethodCallEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall(14);
      assertNotNull(methodCall0);
      
      String string0 = methodCall0.toString();
      assertNotNull(string0);
      assertEquals("ThreadPoolExecutor$Worker", methodCall0.getShortClass());
  }

  @Test
  public void test1()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall(15);
      assertNotNull(methodCall0);
      
      boolean boolean0 = methodCall0.isAncestorOf(methodCall0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall(14);
      assertNotNull(methodCall0);
      
      // Undeclared exception!
      try {
        methodCall0.isAncestorOf(methodCall0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MethodCall methodCall0 = new MethodCall(15);
      assertNotNull(methodCall0);
      
      MethodCall methodCall1 = new MethodCall();
      boolean boolean0 = methodCall1.isAncestorOf(methodCall0);
      assertEquals(false, boolean0);
      assertEquals("<init>", methodCall1.getMethodName());
  }
}
