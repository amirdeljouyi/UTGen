/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.compare;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.compare.CompareRecord;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CompareRecordEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      int int0 = compareRecord0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      CompareRecord compareRecord0 = new CompareRecord(object0, object0);
      int int0 = compareRecord0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      boolean boolean0 = compareRecord0.equals((Object) compareRecord0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      boolean boolean0 = compareRecord0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      CompareRecord compareRecord0 = new CompareRecord(object0, object0);
      boolean boolean0 = compareRecord0.equals(object0);
      assertEquals(false, boolean0);
      assertEquals("java.lang.Object", compareRecord0.getClassString());
  }

  @Test
  public void test5()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      CompareRecord compareRecord1 = new CompareRecord((Object) compareRecord0, (Object) null);
      CompareRecord compareRecord2 = new CompareRecord((Object) null, (Object) compareRecord0);
      boolean boolean0 = compareRecord1.equals((Object) compareRecord2);
      assertFalse(compareRecord1.equals(compareRecord0));
      assertFalse(compareRecord0.equals(compareRecord1));
      assertEquals(true, boolean0);
      assertTrue(compareRecord2.equals(compareRecord1));
  }

  @Test
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      CompareRecord compareRecord0 = new CompareRecord(object0, object0);
      CompareRecord compareRecord1 = new CompareRecord((Object) "(%d}oBVp0Ga", (Object) compareRecord0);
      assertEquals("java.lang.String", compareRecord1.getClassString());
      
      compareRecord1.object1 = object0;
      boolean boolean0 = compareRecord1.equals((Object) compareRecord0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      CompareRecord compareRecord1 = new CompareRecord((Object) compareRecord0, (Object) null);
      boolean boolean0 = compareRecord1.equals((Object) compareRecord0);
      assertFalse(compareRecord0.equals(compareRecord1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      CompareRecord compareRecord0 = new CompareRecord(object0, object0);
      String string0 = compareRecord0.getClassString();
      assertEquals("java.lang.Object", string0);
      assertNotNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      String string0 = compareRecord0.getClassString();
      assertNotNull(string0);
      assertEquals("null", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      CompareRecord compareRecord0 = new CompareRecord(object0, object0);
      String string0 = compareRecord0.toLinkString(true);
      assertEquals("java.lang.Object", string0);
      assertNotNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      CompareRecord compareRecord0 = new CompareRecord((Object) null, (Object) null);
      String string0 = compareRecord0.toLinkString(false);
      assertEquals("", string0);
  }
}
