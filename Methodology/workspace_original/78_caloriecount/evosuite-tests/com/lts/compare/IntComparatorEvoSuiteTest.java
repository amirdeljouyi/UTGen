/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.compare;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.compare.IntComparator;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class IntComparatorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IntComparator intComparator0 = new IntComparator();
      Integer integer0 = new Integer((-1735));
      int int0 = intComparator0.compare((Object) integer0, (Object) integer0);
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      IntComparator.NormalComparator intComparator_NormalComparator0 = new IntComparator.NormalComparator();
      // Undeclared exception!
      try {
        intComparator_NormalComparator0.compare((Object) "-196", (Object) "0");
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IntComparator.InverseComparator intComparator_InverseComparator0 = new IntComparator.InverseComparator();
      // Undeclared exception!
      try {
        intComparator_InverseComparator0.compare((Object) "0", (Object) null);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      IntComparator intComparator0 = new IntComparator();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-546));
      int int0 = intComparator0.compare((Object) integer0, (Object) integer1);
      assertEquals(1, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      IntComparator intComparator0 = new IntComparator();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      int int0 = intComparator0.compare((Object) integer0, (Object) integer1);
      assertEquals((-1), int0);
  }
}
