/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.cmdline;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.LTSException;
import com.lts.cmdline.Argspec;
import com.lts.cmdline.CmdlineUtil;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class CmdlineUtilEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      CmdlineUtil cmdlineUtil0 = new CmdlineUtil();
      String[] stringArray0 = new String[7];
      Properties properties0 = new Properties();
      Boolean boolean0 = Boolean.FALSE;
      Argspec argspec0 = new Argspec("", "", boolean0, boolean0);
      try {
        cmdlineUtil0.processMissingArgument(properties0, argspec0, "", stringArray0, (-1330));
        fail("Expecting exception: LTSException");
      } catch(LTSException e) {
        /*
         * Missing argument for option: 
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      CmdlineUtil cmdlineUtil0 = new CmdlineUtil();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "--Tm\"??Uq";
      Properties properties0 = cmdlineUtil0.processArgv((List) linkedList0, (String[]) null, (Map) null);
      try {
        cmdlineUtil0.processArgv((List) linkedList0, stringArray0, (Map) properties0);
        fail("Expecting exception: LTSException");
      } catch(LTSException e) {
        /*
         * unrecognized option: Tm\"??Uq
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      CmdlineUtil cmdlineUtil0 = new CmdlineUtil();
      LinkedList<Argspec> linkedList0 = new LinkedList<Argspec>();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "+";
      Properties properties0 = new Properties();
      cmdlineUtil0.processArgv((List) linkedList0, stringArray0, (Map) properties0);
      assertEquals(false, linkedList0.isEmpty());
      assertEquals(6, linkedList0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      CmdlineUtil cmdlineUtil0 = new CmdlineUtil();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-NFfy\"FZxpWKbTnf78{";
      // Undeclared exception!
      try {
        cmdlineUtil0.processArgv((List) linkedList0, stringArray0, (Map) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      CmdlineUtil cmdlineUtil0 = new CmdlineUtil();
      String[] stringArray0 = new String[11];
      stringArray0[0] = "P";
      stringArray0[1] = "P";
      stringArray0[2] = "++";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try {
        cmdlineUtil0.processArgv((List) linkedList0, stringArray0, (Map) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
