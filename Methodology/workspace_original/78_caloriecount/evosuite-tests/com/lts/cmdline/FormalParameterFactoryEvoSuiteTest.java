/*
 * This file was automatically generated by EvoSuite
 */

package com.lts.cmdline;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.lts.cmdline.BasicFormalParameter;
import com.lts.cmdline.CommandLineException;
import com.lts.cmdline.FormalParameterFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class FormalParameterFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "uRbwbTG(L:m|$X";
      stringArray0[1] = "argument";
      BasicFormalParameter basicFormalParameter0 = (BasicFormalParameter)formalParameterFactory0.toFormalParameter(stringArray0);
      assertNotNull(basicFormalParameter0);
  }

  @Test
  public void test1()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "switch-arg";
      stringArray0[1] = "switch-arg";
      BasicFormalParameter basicFormalParameter0 = (BasicFormalParameter)formalParameterFactory0.toFormalParameter(stringArray0);
      assertNotNull(basicFormalParameter0);
  }

  @Test
  public void test2()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[2];
      try {
        formalParameterFactory0.toFormalParameter(stringArray0);
        fail("Expecting exception: CommandLineException");
      } catch(CommandLineException e) {
        /*
         * com.lts.cmdline.CommandLineMessages.errors.invalidFormalParameterSpecification, [0] Specifications should have at least 4 fields
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[6];
      try {
        formalParameterFactory0.toFormalParameter(stringArray0);
        fail("Expecting exception: CommandLineException");
      } catch(CommandLineException e) {
        /*
         * com.lts.cmdline.CommandLineMessages.errors.invalidFormalParameterSpecification, [0] Null property name
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "O";
      try {
        formalParameterFactory0.toFormalParameter(stringArray0);
        fail("Expecting exception: CommandLineException");
      } catch(CommandLineException e) {
        /*
         * com.lts.cmdline.CommandLineMessages.errors.invalidFormalParameterSpecification, [0] null specification type
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^eQ<q$Lck|;:$E";
      stringArray0[1] = "switch";
      BasicFormalParameter basicFormalParameter0 = (BasicFormalParameter)formalParameterFactory0.toFormalParameter(stringArray0);
      assertNotNull(basicFormalParameter0);
  }

  @Test
  public void test6()  throws Throwable  {
      FormalParameterFactory formalParameterFactory0 = new FormalParameterFactory();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "switch";
      stringArray0[1] = "";
      try {
        formalParameterFactory0.toFormalParameter(stringArray0);
        fail("Expecting exception: CommandLineException");
      } catch(CommandLineException e) {
        /*
         * com.lts.cmdline.CommandLineMessages.errors.invalidFormalParameterSpecification, [0] unrecognized specification type: 
         */
      }
  }
}
