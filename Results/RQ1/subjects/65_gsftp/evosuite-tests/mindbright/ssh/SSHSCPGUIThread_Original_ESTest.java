/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 05:08:49 GMT 2024
 */

package mindbright.ssh;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gotoservers.ftp.RemoteFileBrowser;
import com.isnetworks.ssh.FileDisplay;
import java.awt.Frame;
import java.awt.HeadlessException;
import mindbright.gui.ProgressBar;
import mindbright.ssh.SSHSCPGUIThread;
import mindbright.ssh.SSHSCPPanel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SSHSCPGUIThread_Original_ESTest extends SSHSCPGUIThread_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartFileThrowsNullPointerException() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.startFile("Unable to rename file ", (-2064L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRoundReturningPositive() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, true, (SSHSCPPanel) null);
      double round = sSHSCPGUIThread.round(1563.4180847058092);
      assertEquals(1563.4, round, 0.01);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRoundReturningNegative() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      double round = sSHSCPGUIThread.round((-3442.850444855619));
      assertEquals((-3442.9), round, 0.01);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCutNameReturningNonEmptyString() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, true, (SSHSCPPanel) null);
      String cutName = sSHSCPGUIThread.cutName("}) ZcL6hcoC[ O", 32);
      assertEquals("}) ZcL6hcoC[ O", cutName);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCutNameReturningEmptyString() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, false, (SSHSCPPanel) null);
      String cutName = sSHSCPGUIThread.cutName("", 176);
      assertEquals("", cutName);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAddUniqueReturningPositive() throws Throwable  {
      String[] arg0 = new String[9];
      arg0[0] = "Destination:";
      int addUnique = SSHSCPGUIThread.addUnique(arg0, "Destination:", 58);
      assertEquals(58, addUnique);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartDirThrowsNullPointerException0() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.startDir("com.isnetworks.ssh.FileDisplay");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testProgressThrowsNullPointerException0() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      sSHSCPGUIThread.lastTime = 1L;
      ProgressBar progressBar = new ProgressBar((-1530), (-1530), (-1530));
      sSHSCPGUIThread.progress = progressBar;
      System.setCurrentTimeMillis(1L);
      sSHSCPGUIThread.curFileSize = 1L;
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.progress(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testProgressThrowsNullPointerException1() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      ProgressBar progressBar = new ProgressBar((-1530), (-1530), (-1530));
      sSHSCPGUIThread.progress = progressBar;
      sSHSCPGUIThread.curFileSize = 1L;
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.progress(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testProgressWithZero() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      sSHSCPGUIThread.curFileSize = 328L;
      sSHSCPGUIThread.progress(0L);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testProgressThrowsNullPointerException2() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, false, (SSHSCPPanel) null);
      sSHSCPGUIThread.curFileSize = 328L;
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.progress(328L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testProgress() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      sSHSCPGUIThread.progress(2778L);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartDirThrowsNullPointerException1() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, false, false, true, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.startDir("i;E-~}1UvIQhme");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartDirThrowsNullPointerException2() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, true, true, false, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.startDir("C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartDirThrowsNullPointerException3() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      sSHSCPGUIThread.startTime = 1L;
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.startDir("America/Godthab");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStarExpandThrowsNullPointerException() throws Throwable  {
      String[] arg0 = SSHSCPGUIThread.spaceSplit("y/iQ?~}1UMPIQ*N;c8");
      // Undeclared exception!
      try { 
        SSHSCPGUIThread.starExpand(arg0, "y/iQ?~}1UMPIQ*N;c8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStarExpand() throws Throwable  {
      String[] arg0 = SSHSCPGUIThread.spaceSplit(" does not exist or you do not have permission to access it.");
      String[] starExpand = SSHSCPGUIThread.starExpand(arg0, "|Cz:G\"");
      assertEquals(11, starExpand.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAddUniqueReturningNegative() throws Throwable  {
      String[] arg0 = SSHSCPGUIThread.spaceSplit("access\"");
      assertNotNull(arg0);
      
      int addUnique = SSHSCPGUIThread.addUnique(arg0, " does not exist or you do not have permission to access it.", (-1446209631));
      assertEquals(1, arg0.length);
      assertEquals((-1446209631), addUnique);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitAndSpaceSplitReturningNonEmptyArray0() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("\"&^p<ltZ}\"K/E");
      assertEquals(1, spaceSplit.length);
      assertNotNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitAndSpaceSplitReturningNonEmptyArray1() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("FTP response 421 received.  Server closed connection.");
      assertEquals(7, spaceSplit.length);
      assertNotNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitAndSpaceSplitReturningNonEmptyArray2() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("\"hbrg\"M#+|zUoTN^H Wv");
      assertEquals(3, spaceSplit.length);
      assertNotNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitAndSpaceSplitReturningNull0() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("\"7M@<+wUoTND^ Wv");
      assertNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitAndSpaceSplitReturningNull1() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("EwUFDfi5*X.J/ \"mR");
      assertNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitAndSpaceSplitReturningNonEmptyArray3() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("Ckj^#/");
      assertNotNull(spaceSplit);
      assertEquals(1, spaceSplit.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitWithEmptyString() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit("");
      assertNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSpaceSplitWithNull() throws Throwable  {
      String[] spaceSplit = SSHSCPGUIThread.spaceSplit((String) null);
      assertNull(spaceSplit);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRunThrowsHeadlessException0() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, false, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.run();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRunThrowsHeadlessException1() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.run();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRoundReturningZero() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, true, (SSHSCPPanel) null);
      double round = sSHSCPGUIThread.round(0.0);
      assertEquals(0.0, round, 0.01);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testConnectedThrowsNullPointerException() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.connected("localhost:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEndFileThrowsNullPointerException() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, true, true, true, true, (SSHSCPPanel) null);
      // Undeclared exception!
      try { 
        sSHSCPGUIThread.endFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("mindbright.ssh.SSHSCPGUIThread", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEndDir() throws Throwable  {
      SSHSCPGUIThread sSHSCPGUIThread = new SSHSCPGUIThread((Frame) null, (FileDisplay) null, (FileDisplay) null, (RemoteFileBrowser) null, false, false, false, false, (SSHSCPPanel) null);
      sSHSCPGUIThread.endDir();
  }
}
