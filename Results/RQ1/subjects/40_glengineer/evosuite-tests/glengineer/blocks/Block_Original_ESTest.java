/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 01:03:32 GMT 2024
 */

package glengineer.blocks;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import glengineer.blocks.HorizontalBlock;
import glengineer.blocks.Scheme;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Block_Original_ESTest extends Block_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0() throws Throwable  {
      HorizontalBlock horizontalBlock = null;
      try {
        horizontalBlock = new HorizontalBlock((Scheme) null, 1273, 1273, 1273, (-2421));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // improper block definition: 1273,1273, 1273,-2421.
         //
         verifyException("glengineer.blocks.Block", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1() throws Throwable  {
      HorizontalBlock horizontalBlock = null;
      try {
        horizontalBlock = new HorizontalBlock((Scheme) null, 1898, (-1111), 1898, 1898);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // improper block definition: 1898,-1111, 1898,1898.
         //
         verifyException("glengineer.blocks.Block", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2() throws Throwable  {
      HorizontalBlock horizontalBlock = null;
      try {
        horizontalBlock = new HorizontalBlock((Scheme) null, (-973), (-973), (-973), (-973));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // improper block definition: -973,-973, -973,-973.
         //
         verifyException("glengineer.blocks.Block", e);
      }
  }
}
