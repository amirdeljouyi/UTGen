/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 19 16:03:02 GMT 2024
 */

package com.google.common.base;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.google.common.base.Objects;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Objects_Original_ESTest extends Objects_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualReturningFalse() throws Throwable  {
      Object arg1 = new Object();
      Integer arg0 = new Integer((-1304));
      boolean equal = Objects.equal(arg0, arg1);
      assertFalse(equal);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualReturningTrue() throws Throwable  {
      Integer arg1 = new Integer((-1304));
      Integer arg0 = new Integer((-1304));
      boolean equal = Objects.equal(arg0, arg1);
      assertTrue(equal);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualWithNull() throws Throwable  {
      Object arg1 = new Object();
      boolean equal = Objects.equal((Object) null, arg1);
      assertFalse(equal);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualWithNonNull() throws Throwable  {
      Object arg1 = new Object();
      boolean equal = Objects.equal(arg1, arg1);
      assertTrue(equal);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFirstNonNull() throws Throwable  {
      Object arg1 = new Object();
      Object firstNonNull = Objects.firstNonNull(arg1, arg1);
      assertSame(arg1, firstNonNull);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testHashCode() throws Throwable  {
      Object[] arg0 = new Object[0];
      Objects.hashCode(arg0);
  }
}
