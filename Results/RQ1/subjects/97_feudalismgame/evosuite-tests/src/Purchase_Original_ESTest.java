/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 11:37:01 GMT 2024
 */

package src;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Purchase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Purchase_Original_ESTest extends Purchase_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testVassalThrowsNoSuchElementException() throws Throwable  {
      Purchase purchase = new Purchase();
      LinkedList<Fiefdoms> linkedList = new LinkedList<Fiefdoms>();
      ListIterator<Fiefdoms> arg0 = linkedList.listIterator(0);
      // Undeclared exception!
      try { 
        purchase.vassal(arg0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMercenaryThrowsNoSuchElementException() throws Throwable  {
      Purchase purchase = new Purchase();
      LinkedList<Fiefdoms> linkedList = new LinkedList<Fiefdoms>();
      Iterator<Fiefdoms> arg0 = linkedList.descendingIterator();
      // Undeclared exception!
      try { 
        purchase.mercenary(arg0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCastlePersonalThrowsNoSuchElementException() throws Throwable  {
      Purchase purchase = new Purchase();
      LinkedList<Fiefdoms> linkedList = new LinkedList<Fiefdoms>();
      ListIterator<Fiefdoms> arg0 = linkedList.listIterator(0);
      // Undeclared exception!
      try { 
        purchase.castlePersonal(arg0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCastleFiefdomThrowsNoSuchElementException() throws Throwable  {
      Purchase purchase = new Purchase();
      ArrayList<Object> arrayList = new ArrayList<Object>();
      Iterator<Object> arg0 = arrayList.iterator();
      // Undeclared exception!
      try { 
        purchase.castleFiefdom(arg0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testPerform() throws Throwable  {
      Purchase purchase = new Purchase();
      ArrayList<Fiefdoms> arg0 = new ArrayList<Fiefdoms>();
      purchase.perform(arg0);
      assertEquals(0, arg0.size());
  }
}
