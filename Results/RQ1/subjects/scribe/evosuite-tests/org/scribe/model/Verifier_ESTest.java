/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Wed Mar 20 11:40:35 GMT 2024
 */

package org.scribe.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.scribe.model.Verifier;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Verifier_ESTest extends Verifier_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetValueReturningEmptyString() throws Throwable  {
      // Given
      Verifier verifier = new Verifier("");
      
      // When
      String value = verifier.getValue();
      
      // Then
      assertEquals("", value);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetValueReturningNonEmptyString() throws Throwable  {
      // Given the Verifier class with a constructor that takes in a String argument
      Verifier verifier = new Verifier("?z`C'R:$@?jbPm)M");
      
      // When the getValue() method is called on the Verifier object
      String value = verifier.getValue();
      
      // Then the returned value should be equal to the original input String argument
      assertEquals("?z`C'R:$@?jbPm)M", value);
  }
}
