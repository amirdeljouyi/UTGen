/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Wed Mar 20 11:32:05 GMT 2024
 */

package org.scribe.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.HttpURLConnection;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.scribe.model.Response;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Response_Original_ESTest extends Response_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateResponseThrowsNullPointerException() throws Throwable  {
      HttpURLConnection arg0 = mock(HttpURLConnection.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(arg0).getResponseCode();
      doReturn((Map) null).when(arg0).getHeaderFields();
      Response response = null;
      try {
        response = new Response(arg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scribe.model.Response", e);
      }
  }
}
