/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 18 07:34:12 GMT 2024
 */

package umd.cs.shop;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSState;
import umd.cs.shop.JSSubstitution;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JSState_Original_ESTest extends JSState_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testApplyOpThrowsNullPointerException() throws Throwable  {
      JSState arg3 = new JSState();
      JSOperator arg0 = new JSOperator();
      JSSubstitution arg1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        arg3.applyOp(arg0, arg1, arg3, arg3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSState", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testApply() throws Throwable  {
      JSState jSState = new JSState();
      JSPlan arg0 = new JSPlan();
      JSState apply = jSState.apply(arg0);
      assertNotSame(apply, jSState);
  }
}
