/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 11:48:13 GMT 2024
 */

package Joshua.FoxHunt;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import Joshua.FoxHunt.HuntDisplay;
import java.awt.Dimension;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HuntDisplay_ESTest extends HuntDisplay_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetPreferredSize() throws Throwable  {
      // Setup
      HuntDisplay huntDisplay = new HuntDisplay();
      huntDisplay.prefSize = null;
      
      // Action
      Dimension preferredSize = huntDisplay.getPreferredSize();
      
      // Assertion
      assertNull(preferredSize);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetMinimumSize() throws Throwable  {
      // Given: A HuntDisplay with minSize set to null
      HuntDisplay huntDisplay = new HuntDisplay();
      huntDisplay.minSize = null;
      
      // When: Calling getMinimumSize on the HuntDisplay
      Dimension minimumSize = huntDisplay.getMinimumSize();
      
      // Then: The method returns null
      assertNull(minimumSize);
  }
}
