/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 02:32:39 GMT 2024
 */


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Scanner_Original_ESTest extends Scanner_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAdvScanning0() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendLineToFile(arg0, "<=");
      FileSystemHandling.appendStringToFile(arg0, "oecned:TfROGRAM\n   F: <~, lHe&1p  coEumn 1");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
      ArrayList advScanning = scanner.advScanning(scanner.lexems);
      assertEquals(7, advScanning.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAdvScanning1() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendLineToFile(arg0, ";");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
      ArrayList advScanning = scanner.advScanning(scanner.lexems);
      assertEquals(1, advScanning.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAdvScanning2() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, "===================");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
      ArrayList advScanning = scanner.advScanning(scanner.lexems);
      assertEquals(19, advScanning.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner0() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, ":=");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAdvScanning3() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, "INTEGER OR REAL VARIABLE");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
      ArrayList advScanning = scanner.advScanning(scanner.lexems);
      assertEquals(4, advScanning.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testPrintLexems() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendLineToFile(arg0, ";");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
      scanner.printLexems(scanner.lexems);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner1() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      byte[] arg1 = new byte[3];
      arg1[0] = (byte)13;
      FileSystemHandling.appendDataToFile(arg0, arg1);
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner2() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      byte[] arg1 = new byte[5];
      arg1[0] = (byte)71;
      arg1[1] = (byte)71;
      arg1[2] = (byte)9;
      FileSystemHandling.appendDataToFile(arg0, arg1);
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner3() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, "expected: PROGRAM\n   found: END.\n   line: 1\n   column: 1");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner4() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendLineToFile(arg0, "l.");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner5() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendLineToFile(arg0, ".");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAdvScanning4() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, "expected: PROGRAM\n   found: KEYWORD\n   line: 1\n   column: 1");
      FileSystemHandling.appendStringToFile(arg0, "O/vqD@49@7\"D]Ds-");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
      ArrayList advScanning = scanner.advScanning(scanner.lexems);
      assertEquals(11, advScanning.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner6() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, "N u2<(g");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner7() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      byte[] arg1 = new byte[7];
      arg1[0] = (byte)34;
      arg1[4] = (byte)13;
      FileSystemHandling.appendDataToFile(arg0, arg1);
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner8() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("3^1mT'#]lJ~T>nB");
      FileSystemHandling.appendStringToFile(arg0, "2.");
      Scanner scanner = new Scanner("3^1mT'#]lJ~T>nB");
  }
}
