/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Wed Mar 20 19:44:03 GMT 2024
 */

package com.ib.client;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.ib.client.ComboLeg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComboLeg_Original_ESTest extends ComboLeg_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTakingNoArgumentsAndEqualsReturningFalse0() throws Throwable  {
      ComboLeg arg0 = new ComboLeg();
      arg0.m_designatedLocation = "I";
      ComboLeg comboLeg = new ComboLeg();
      boolean equals = comboLeg.equals(arg0);
      assertEquals(0, comboLeg.m_ratio);
      assertEquals(0, comboLeg.m_shortSaleSlot);
      assertEquals(0, comboLeg.m_openClose);
      assertFalse(arg0.equals((Object)comboLeg));
      assertEquals(0, comboLeg.m_conId);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTakingNoArgumentsAndEqualsReturningFalse1() throws Throwable  {
      ComboLeg arg0 = new ComboLeg();
      ComboLeg comboLeg = new ComboLeg();
      assertTrue(comboLeg.equals((Object)arg0));
      
      comboLeg.m_exchange = "dd[G-vqX;aH{K";
      boolean equals = comboLeg.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTaking7Arguments0() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg((-3032), (-3032), "189,(_<3TYK{d.9cF", "", (-3032), (-3032), "189,(_<3TYK{d.9cF");
      ComboLeg arg0 = new ComboLeg((-3032), 1, " q:%.@2Gxj}", "", (-3032), (-3032), "} !Z.l8~5(q}}4 dW");
      assertEquals(1, arg0.m_ratio);
      
      arg0.m_ratio = (-3032);
      boolean equals = comboLeg.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTaking7Arguments1() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg((-3032), (-3032), "189,(_<3TYK{d.9cF", "", (-3032), (-1577), "189,(_<3TYK{d.9cF");
      ComboLeg arg0 = new ComboLeg((-3032), (-242), " q:%.@2Gxj}", "", (-3032), (-3032), "} !Z.l8~5(q}}4 dW");
      assertEquals((-242), arg0.m_ratio);
      
      arg0.m_ratio = (-3032);
      boolean equals = comboLeg.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTakingNoArgumentsAndCreatesComboLegTaking7Arguments() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg();
      ComboLeg arg0 = new ComboLeg(0, 0, ">-y&;a2X Y6B|pYp>l", "", 1, 1, "");
      boolean equals = comboLeg.equals(arg0);
      assertFalse(equals);
      assertEquals(0, arg0.m_ratio);
      assertEquals(1, arg0.m_shortSaleSlot);
      assertEquals(0, comboLeg.m_shortSaleSlot);
      assertEquals(0, arg0.m_conId);
      assertEquals(1, arg0.m_openClose);
      assertEquals(0, comboLeg.m_openClose);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTakingNoArgumentsAndEqualsReturningFalse2() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg();
      ComboLeg arg0 = new ComboLeg();
      assertEquals(0, arg0.m_ratio);
      
      arg0.m_ratio = 2;
      boolean equals = comboLeg.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTaking5Arguments() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg((-1611), (-1611), "", "L/YQdDs@s0}aQP&9mDx", (-1611));
      ComboLeg arg0 = new ComboLeg();
      boolean equals = comboLeg.equals(arg0);
      assertEquals((-1611), comboLeg.m_ratio);
      assertFalse(equals);
      assertEquals((-1611), comboLeg.m_conId);
      assertEquals(0, comboLeg.m_shortSaleSlot);
      assertEquals((-1611), comboLeg.m_openClose);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTakingNoArgumentsAndEqualsReturningTrue0() throws Throwable  {
      ComboLeg arg0 = new ComboLeg();
      boolean equals = arg0.equals(arg0);
      assertEquals(0, arg0.m_conId);
      assertEquals(0, arg0.m_openClose);
      assertEquals(0, arg0.m_ratio);
      assertTrue(equals);
      assertEquals(0, arg0.m_shortSaleSlot);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesComboLegTakingNoArgumentsAndEqualsReturningTrue1() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg();
      ComboLeg arg0 = new ComboLeg();
      boolean equals = comboLeg.equals(arg0);
      assertEquals(0, arg0.m_conId);
      assertEquals(0, arg0.m_shortSaleSlot);
      assertEquals(0, arg0.m_openClose);
      assertTrue(equals);
      assertEquals(0, arg0.m_ratio);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualsWithNull() throws Throwable  {
      ComboLeg comboLeg = new ComboLeg(2593, 2593, (String) null, (String) null, (-500));
      boolean equals = comboLeg.equals((Object) null);
      assertEquals(0, comboLeg.m_shortSaleSlot);
      assertFalse(equals);
      assertEquals((-500), comboLeg.m_openClose);
      assertEquals(2593, comboLeg.m_ratio);
      assertEquals(2593, comboLeg.m_conId);
  }
}
