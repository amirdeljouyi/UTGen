/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 02:43:05 GMT 2024
 */

package com.mentorgen.tools.profile.runtime;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mentorgen.tools.profile.runtime.Frame;
import com.mentorgen.tools.profile.runtime.Profile;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Profile_Original_ESTest extends Profile_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testShutdownThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.shutdown();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testInit() throws Throwable  {
      Profile.init();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testClear() throws Throwable  {
      Profile.clear();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFrameList() throws Throwable  {
      Iterable<Frame> frameList = Profile.frameList();
      assertNull(frameList);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAlloc() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.alloc("<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testUnwindThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.unwind("hj=wVf1pJ&}R+OU", "wc:", "0cr<t/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEndWaitWithEmptyStringAndEmptyString() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.endWait("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testBeginWait() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.beginWait("SV", "SV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEnd() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.end("tH!e+", "tH!e+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartTaking2ArgumentsThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.start("h:8*bvw\"(y@8/|", "h:8*bvw\"(y@8/|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStop() throws Throwable  {
      Profile.initProfiler();
      Profile.sortFrameList((Comparator<Frame>) null);
      Profile.start("g<", "g<");
      Profile.endWait("g<", "g<");
      Profile.stop();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testInteractionsThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.interactions(784L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSetFileNameThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.setFileName("W2d>3%V>JWWjeAJ@cU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetThreadTotalTimeThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.getThreadTotalTime(31L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesProfileAndCallsRun() throws Throwable  {
      Profile profile = new Profile();
      // Undeclared exception!
      try { 
        profile.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testThreadsThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.threads();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAllocationsThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.allocations();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartTakingNoArgumentsThrowsNullPointerException() throws Throwable  {
      // Undeclared exception!
      try { 
        Profile.start();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
      }
  }
}
