/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 18 05:15:24 GMT 2024
 */

package server;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import server.ServerGameModel;
import server.ServerGameRound;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServerGameModel_Original_ESTest extends ServerGameModel_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testUpdateThrowsNullPointerException0() throws Throwable  {
      ServerGameModel serverGameModel = new ServerGameModel((ServerGameRound) null);
      serverGameModel.setTime((-781L));
      // Undeclared exception!
      try { 
        serverGameModel.update();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("server.ServerGameModel", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testUpdateThrowsNullPointerException1() throws Throwable  {
      ServerGameModel serverGameModel = new ServerGameModel((ServerGameRound) null);
      // Undeclared exception!
      try { 
        serverGameModel.update();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("server.ServerGameModel", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testTwoMinutesToEndThrowsNullPointerException() throws Throwable  {
      ServerGameModel serverGameModel = new ServerGameModel((ServerGameRound) null);
      // Undeclared exception!
      try { 
        serverGameModel.twoMinutesToEnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("server.ServerGameModel", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testOneMinuteToEndThrowsNullPointerException() throws Throwable  {
      ServerGameModel serverGameModel = new ServerGameModel((ServerGameRound) null);
      // Undeclared exception!
      try { 
        serverGameModel.oneMinuteToEnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("server.ServerGameModel", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testTimeExpiredThrowsNullPointerException() throws Throwable  {
      ServerGameModel serverGameModel = new ServerGameModel((ServerGameRound) null);
      // Undeclared exception!
      try { 
        serverGameModel.timeExpired();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("server.ServerGameModel", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testTick() throws Throwable  {
      ServerGameModel serverGameModel = new ServerGameModel((ServerGameRound) null);
      serverGameModel.tick();
      assertEquals(359984L, serverGameModel.getTime());
  }
}
