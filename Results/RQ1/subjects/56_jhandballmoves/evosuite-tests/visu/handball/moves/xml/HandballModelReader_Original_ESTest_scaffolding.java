/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Mar 21 04:04:30 GMT 2024
 */

package visu.handball.moves.xml;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterEach;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class HandballModelReader_Original_ESTest_scaffolding {

  @org.junit.jupiter.api.extension.RegisterExtension
  public org.evosuite.runtime.vnet.NonFunctionalRequirementExtension nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementExtension();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeAll
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "visu.handball.moves.xml.HandballModelReader"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.OFF; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @BeforeEach
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @AfterEach
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(HandballModelReader_Original_ESTest_scaffolding.class.getClassLoader() ,
      "visu.handball.moves.model.player.Ball",
      "org.jdom.input.SAXBuilder",
      "org.jdom.Comment",
      "visu.handball.moves.Main",
      "visu.handball.moves.model.player.MovePoint",
      "visu.handball.moves.views.Field",
      "org.jdom.Content",
      "visu.handball.moves.model.ColorModelListener",
      "org.jdom.CDATA",
      "org.jdom.Document",
      "visu.handball.moves.model.MoveEvent",
      "org.jdom.JDOMException",
      "org.jdom.DefaultJDOMFactory",
      "org.jdom.DocType",
      "visu.handball.moves.model.player.HighlightableItem",
      "visu.handball.moves.views.PlayerToolBar",
      "visu.handball.moves.views.CommentView",
      "org.jdom.input.TextBuffer",
      "org.jdom.JDOMFactory",
      "visu.handball.moves.model.PlayerRemovedListener",
      "org.jdom.ProcessingInstruction",
      "visu.handball.moves.model.PassEvent",
      "visu.handball.moves.xml.HandballModelReader$1",
      "org.jdom.input.JAXPParserFactory",
      "org.jdom.input.BuilderErrorHandler",
      "visu.handball.moves.model.HandballModelListener",
      "visu.handball.moves.model.player.Player",
      "visu.handball.moves.model.player.Circle",
      "org.jdom.Text",
      "visu.handball.moves.model.animation.Animator",
      "org.jdom.EntityRef",
      "visu.handball.moves.model.animation.AnimationModel",
      "visu.handball.moves.model.player.Offender",
      "visu.handball.moves.views.StatusBar",
      "org.jdom.Parent",
      "visu.handball.moves.xml.HandballModelReader",
      "visu.handball.moves.model.player.Defender",
      "visu.handball.moves.model.HandballModel",
      "org.jdom.input.JDOMParseException",
      "org.jdom.input.SAXHandler",
      "org.jdom.ContentList",
      "org.jdom.IllegalAddException",
      "org.jdom.Element",
      "visu.handball.moves.model.HandballModel$State"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(HandballModelReader_Original_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "visu.handball.moves.xml.HandballModelReader",
      "visu.handball.moves.xml.HandballModelReader$1",
      "visu.handball.moves.Main",
      "visu.handball.moves.model.HandballModel$State",
      "visu.handball.moves.model.HandballModel",
      "visu.handball.moves.model.player.Player",
      "visu.handball.moves.model.player.Defender",
      "visu.handball.moves.model.player.Offender",
      "visu.handball.moves.model.player.Circle",
      "visu.handball.moves.model.player.Ball",
      "org.jdom.input.SAXBuilder",
      "org.jdom.DefaultJDOMFactory",
      "org.jdom.input.SAXHandler",
      "org.jdom.input.TextBuffer",
      "org.jdom.Document",
      "org.jdom.ContentList",
      "org.jdom.input.JAXPParserFactory",
      "org.jdom.input.BuilderErrorHandler",
      "org.jdom.JDOMException",
      "org.jdom.input.JDOMParseException",
      "visu.handball.moves.resources.Resources"
    );
  }
}
