/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 08:59:43 GMT 2024
 */

package org.sourceforge.ifx.basetypes;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sourceforge.ifx.basetypes.IFXBase64Binary;
import org.sourceforge.ifx.basetypes.IFXHexBinary;
import org.sourceforge.ifx.basetypes.IFXObject;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IFXObject_Original_ESTest extends IFXObject_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesIFXObjectAndCallsEquals0() throws Throwable  {
      IFXObject iFXObject = new IFXObject();
      IFXBase64Binary arg0 = new IFXBase64Binary();
      boolean equals = iFXObject.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testToString0() throws Throwable  {
      IFXHexBinary iFXHexBinary = new IFXHexBinary();
      iFXHexBinary.setString("orgsourceforge.ifx.basetypes.IFXTim");
      String string = iFXHexBinary.toString();
      assertEquals("org.sourceforge.ifx.basetypes.IFXHexBinary = {\n  Bytes = [\n    [0]:Exception! java.lang.ClassCastException: java.lang.Byte cannot be cast to org.sourceforge.ifx.basetypes.IFXObject\n  }", string);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testToString1() throws Throwable  {
      IFXBase64Binary iFXBase64Binary = new IFXBase64Binary();
      iFXBase64Binary.setString("");
      String string = iFXBase64Binary.toString();
      assertEquals("org.sourceforge.ifx.basetypes.IFXBase64Binary = {\n  Bytes = [\n\n  ]\n  String = Exception! java.lang.ClassCastException: java.lang.String cannot be cast to org.sourceforge.ifx.basetypes.IFXObject\n}", string);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesIFXObjectAndCallsToString() throws Throwable  {
      IFXObject iFXObject = new IFXObject();
      String string = iFXObject.toString();
      assertEquals("org.sourceforge.ifx.basetypes.IFXObject = {\n}", string);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesIFXObjectAndCallsEquals1() throws Throwable  {
      IFXObject iFXObject = new IFXObject();
      Object arg0 = new Object();
      boolean equals = iFXObject.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualsReturningTrue() throws Throwable  {
      IFXObject arg0 = new IFXObject();
      boolean equals = arg0.equals(arg0);
      assertTrue(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testToString2() throws Throwable  {
      IFXBase64Binary iFXBase64Binary = new IFXBase64Binary();
      String string = iFXBase64Binary.toString();
      assertEquals("org.sourceforge.ifx.basetypes.IFXBase64Binary = {\n  Bytes = NULL\n  String = Exception! java.lang.reflect.InvocationTargetException\n}", string);
  }
}
