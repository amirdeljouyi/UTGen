/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Mar 18 16:09:26 GMT 2024
 */

package org.apache.commons.lang3.time;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterEach;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class FastDateFormat_Original_ESTest_scaffolding {

  @org.junit.jupiter.api.extension.RegisterExtension
  public org.evosuite.runtime.vnet.NonFunctionalRequirementExtension nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementExtension();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeAll
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.lang3.time.FastDateFormat"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.OFF; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @BeforeEach
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @AfterEach
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FastDateFormat_Original_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.lang3.time.FastDatePrinter$TextField",
      "org.apache.commons.lang3.time.FastDatePrinter$NumberRule",
      "org.apache.commons.lang3.time.FormatCache",
      "org.apache.commons.lang3.time.FastDateParser$4",
      "org.apache.commons.lang3.time.FastDateParser$3",
      "org.apache.commons.lang3.time.FastDateParser$2",
      "org.apache.commons.lang3.time.FastDateParser$1",
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
      "org.apache.commons.lang3.time.DateParser",
      "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey",
      "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
      "org.apache.commons.lang3.time.FastDatePrinter$Rule",
      "org.apache.commons.lang3.time.FormatCache$MultipartKey",
      "org.apache.commons.lang3.time.FastDatePrinter",
      "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField",
      "org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField",
      "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
      "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
      "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral",
      "org.apache.commons.lang3.time.FastDateParser$Strategy",
      "org.apache.commons.lang3.time.FastDateParser$TextStrategy",
      "org.apache.commons.lang3.time.FastDateFormat$1",
      "org.apache.commons.lang3.time.FastDateFormat",
      "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField",
      "org.apache.commons.lang3.time.DatePrinter",
      "org.apache.commons.lang3.time.FastDateParser",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FastDateFormat_Original_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.lang3.time.FormatCache",
      "org.apache.commons.lang3.time.FastDateFormat$1",
      "org.apache.commons.lang3.time.FastDateFormat",
      "org.apache.commons.lang3.time.FormatCache$MultipartKey",
      "org.apache.commons.lang3.time.FastDatePrinter",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField",
      "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField",
      "org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField",
      "org.apache.commons.lang3.time.FastDateParser$Strategy",
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
      "org.apache.commons.lang3.time.FastDateParser$1",
      "org.apache.commons.lang3.time.FastDateParser$2",
      "org.apache.commons.lang3.time.FastDateParser$3",
      "org.apache.commons.lang3.time.FastDateParser$4",
      "org.apache.commons.lang3.time.FastDateParser",
      "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
      "org.apache.commons.lang3.time.FastDatePrinter$TextField",
      "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
      "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField",
      "org.apache.commons.lang3.time.FastDateParser$TextStrategy",
      "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey",
      "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
      "org.apache.commons.lang3.Validate",
      "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule",
      "org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField"
    );
  }
}
