/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 21 03:49:43 GMT 2024
 */

package nu.staldal.lagoon;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import nu.staldal.lagoon.LagoonGUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LagoonGUI_ESTest extends LagoonGUI_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsHeadlessException() throws Throwable  {
      // Given: We have a Java application that uses the LagoonGUI class for rendering graphics.
      // When: The application is launched without a valid display (headless mode).
      // Then: An exception should be thrown with the message "HeadlessException".
      try {
      LagoonGUI.main((String[]) null);
      fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      // Verify that the exception is of type HeadlessException and has no message (getMessage() returned null).
      verifyException("java.awt.GraphicsEnvironment", e);}
  }
}
