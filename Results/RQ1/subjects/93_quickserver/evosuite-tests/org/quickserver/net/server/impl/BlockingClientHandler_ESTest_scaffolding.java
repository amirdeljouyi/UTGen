/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Mar 18 08:48:21 GMT 2024
 */

package org.quickserver.net.server.impl;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterEach;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BlockingClientHandler_ESTest_scaffolding {

  @org.junit.jupiter.api.extension.RegisterExtension
  public org.evosuite.runtime.vnet.NonFunctionalRequirementExtension nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementExtension();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeAll
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.quickserver.net.server.impl.BlockingClientHandler"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.OFF; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @BeforeEach
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @AfterEach
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BlockingClientHandler_ESTest_scaffolding.class.getClassLoader() ,
      "org.quickserver.util.xmlreader.ThreadObjectPoolConfig",
      "org.apache.commons.pool.PoolableObjectFactory",
      "org.quickserver.sql.DBPoolUtil",
      "org.quickserver.net.server.ClientCommandHandler",
      "org.quickserver.net.server.AuthStatus",
      "org.apache.commons.pool.ObjectPool",
      "org.quickserver.util.pool.thread.ClientPool",
      "org.quickserver.util.Assertion",
      "org.quickserver.util.xmlreader.ObjectPoolConfig",
      "org.quickserver.net.server.QuickServer",
      "org.quickserver.util.xmlreader.ClientHandlerObjectPoolConfig",
      "org.quickserver.util.xmlreader.Secure",
      "org.quickserver.net.server.ClientIdentifier",
      "org.quickserver.net.server.impl.BasicClientHandler$InstanceId",
      "org.quickserver.net.server.ClientAuthenticationHandler",
      "org.quickserver.net.server.ClientExtendedEventHandler",
      "org.quickserver.net.server.ClientEventHandler",
      "org.quickserver.util.xmlreader.BasicServerConfig",
      "org.quickserver.net.server.ClientObjectHandler",
      "org.quickserver.util.xmlreader.PoolConfig",
      "org.quickserver.net.server.DataMode",
      "org.quickserver.net.ConnectionLostException",
      "org.quickserver.util.xmlreader.ByteBufferObjectPoolConfig",
      "org.quickserver.net.server.ClientEvent",
      "org.quickserver.util.xmlreader.ServerMode",
      "org.quickserver.util.xmlreader.ClientDataObjectPoolConfig",
      "org.quickserver.util.xmlreader.DefaultDataMode",
      "org.quickserver.util.xmlreader.AccessConstraintConfig",
      "org.quickserver.net.server.impl.BasicClientHandler",
      "org.quickserver.net.server.ClientHandler",
      "org.quickserver.util.xmlreader.QSAdminServerConfig",
      "org.quickserver.net.server.ClientBinaryHandler",
      "org.quickserver.net.qsadmin.QSAdminServer",
      "org.quickserver.net.ServerHook",
      "org.quickserver.util.xmlreader.QuickServerConfig",
      "org.quickserver.net.Service",
      "org.quickserver.net.server.ClientWriteHandler",
      "org.quickserver.net.server.impl.BlockingClientHandler",
      "org.quickserver.net.server.TheClient",
      "org.quickserver.util.xmlreader.AdvancedSettings",
      "org.quickserver.util.xmlreader.DBObjectPoolConfig",
      "org.quickserver.util.xmlreader.SecureStore",
      "org.quickserver.util.xmlreader.ServerHooks",
      "org.quickserver.net.AppException",
      "org.quickserver.net.server.DataType",
      "org.quickserver.net.server.ClientData",
      "org.quickserver.net.server.Authenticator"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BlockingClientHandler_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.quickserver.net.server.QuickServer",
      "org.quickserver.net.server.impl.BasicClientHandler",
      "org.quickserver.net.server.impl.BlockingClientHandler",
      "org.quickserver.net.server.DataType",
      "org.quickserver.net.server.DataMode",
      "org.quickserver.net.server.ClientEvent",
      "org.quickserver.net.server.AuthStatus",
      "org.quickserver.util.Assertion",
      "org.quickserver.util.MyString",
      "org.quickserver.net.server.impl.BasicClientHandler$InstanceId",
      "org.quickserver.net.server.TheClient",
      "org.quickserver.util.xmlreader.BasicServerConfig",
      "org.quickserver.util.xmlreader.QuickServerConfig",
      "org.quickserver.util.xmlreader.PoolConfig",
      "org.quickserver.util.xmlreader.ObjectPoolConfig",
      "org.quickserver.util.xmlreader.Secure",
      "org.quickserver.util.xmlreader.SecureStore",
      "org.quickserver.util.xmlreader.ServerMode",
      "org.quickserver.util.xmlreader.AdvancedSettings",
      "org.quickserver.util.xmlreader.DefaultDataMode",
      "org.quickserver.net.qsadmin.QSAdminShell",
      "org.quickserver.net.qsadmin.CommandHandler",
      "org.quickserver.net.server.impl.NonBlockingClientHandler",
      "org.quickserver.util.xmlreader.QSAdminServerConfig",
      "org.quickserver.net.qsadmin.QSAdminServer",
      "org.quickserver.util.xmlreader.ConfigReader",
      "org.quickserver.net.AppException",
      "org.quickserver.net.server.QuickAuthenticationHandler",
      "org.quickserver.net.qsadmin.Authenticator",
      "org.quickserver.net.server.impl.DefaultClientEventHandler",
      "org.quickserver.net.qsadmin.Data",
      "org.quickserver.util.xmlreader.ThreadObjectPoolConfig",
      "org.apache.commons.pool.BasePoolableObjectFactory",
      "org.quickserver.util.pool.thread.ThreadObjectFactory"
    );
  }
}
