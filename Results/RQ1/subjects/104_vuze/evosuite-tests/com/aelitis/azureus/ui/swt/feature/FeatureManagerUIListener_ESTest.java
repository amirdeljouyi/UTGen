/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Sun Mar 17 21:03:02 GMT 2024
 */

package com.aelitis.azureus.ui.swt.feature;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aelitis.azureus.core.AzureusCore;
import com.aelitis.azureus.ui.swt.feature.FeatureManagerUIListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gudy.azureus2.plugins.PluginInterface;
import org.gudy.azureus2.plugins.utils.FeatureManager;
import org.gudy.azureus2.pluginsimpl.local.utils.UtilitiesImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FeatureManagerUIListener_ESTest extends FeatureManagerUIListener_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testLicenceRemovedThrowsNullPointerException() throws Throwable  {
      // Arrange
      FeatureManagerUIListener featureManagerUIListener = new FeatureManagerUIListener((FeatureManager) null);
      
      // Act and Assert
      try {
      featureManagerUIListener.licenceRemoved(null);
      fail("Expecting exception: NullPointerException");
      } catch (NullPointerException e) {
      // Verify that the expected exception is thrown
      assertEquals(NullPointerException.class, e.getClass());
      // Verify that no message is provided in the exception (getMessage() returned null)
      verifyException("com.aelitis.azureus.ui.swt.feature.FeatureManagerUIListener", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testLicenceAddedThrowsRuntimeException() throws Throwable  {
      // Given
      UtilitiesImpl arg0 = new UtilitiesImpl((AzureusCore) null, (PluginInterface) null);
      FeatureManagerUIListener featureManagerUIListener = new FeatureManagerUIListener(arg0);
      
      // When
      try {
      featureManagerUIListener.licenceAdded(null);
      } catch (RuntimeException e) {
      // Then
      verifyException("org.gudy.azureus2.pluginsimpl.local.PluginInitializer", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testBuildNotifications() throws Throwable  {
      // No Comments were added
      FeatureManagerUIListener.buildNotifications();
  }
}
