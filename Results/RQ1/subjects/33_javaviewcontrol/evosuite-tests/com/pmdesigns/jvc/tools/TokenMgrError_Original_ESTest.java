/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 18 02:33:34 GMT 2024
 */

package com.pmdesigns.jvc.tools;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.pmdesigns.jvc.tools.TokenMgrError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_Original_ESTest extends TokenMgrError_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetMessageReturningNonEmptyString() throws Throwable  {
      TokenMgrError tokenMgrError = new TokenMgrError("1?J[4f\",", 0);
      String message = tokenMgrError.getMessage();
      assertEquals("1?J[4f\",", message);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAddEscapesReturningEmptyString() throws Throwable  {
      String addEscapes = TokenMgrError.addEscapes("");
      assertEquals("", addEscapes);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testLexicalErrorWithTrueAndZero() throws Throwable  {
      String LexicalError = TokenMgrError.LexicalError(true, 1035, 0, 0, "w&XE%g2Yb* ", 'y');
      assertEquals("Lexical error at line 0, column 0.  Encountered: <EOF> after : \"w&XE%g2Yb\\u007f* \"", LexicalError);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAddEscapesReturningNonEmptyString() throws Throwable  {
      String addEscapes = TokenMgrError.addEscapes("aZ?FGnI3!'Ay^");
      assertEquals("aZ?FGnI3!\\'Ay^", addEscapes);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testLexicalErrorWithAlphabeticChar() throws Throwable  {
      String LexicalError = TokenMgrError.LexicalError(false, 4, (-629), 0, "1?J[4f\",", 'z');
      assertEquals("Lexical error at line -629, column 0.  Encountered: \"z\" (122), after : \"1?J[4f\\\",\"", LexicalError);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetMessageReturningEmptyString() throws Throwable  {
      TokenMgrError tokenMgrError = new TokenMgrError("", (-2733));
      String message = tokenMgrError.getMessage();
      assertEquals("", message);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesTokenMgrErrorTaking7Arguments() throws Throwable  {
      TokenMgrError tokenMgrError = new TokenMgrError(true, (-1), (-1), (-1), "", 'y', (-1));
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesTokenMgrErrorTakingNoArguments() throws Throwable  {
      TokenMgrError tokenMgrError = new TokenMgrError();
      String message = tokenMgrError.getMessage();
      assertNull(message);
  }
}
