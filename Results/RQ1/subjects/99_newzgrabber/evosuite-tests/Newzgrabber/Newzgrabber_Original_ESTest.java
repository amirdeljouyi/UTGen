/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 18 09:34:57 GMT 2024
 */

package Newzgrabber;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Newzgrabber;
import java.awt.HeadlessException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Newzgrabber_Original_ESTest extends Newzgrabber_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateNewzgrabberTakingNoArgumentsThrowsHeadlessException() throws Throwable  {
      Newzgrabber newzgrabber = null;
      try {
        newzgrabber = new Newzgrabber();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFindDirectory0() throws Throwable  {
      String findDirectory = Newzgrabber.findDirectory("b@*'FBYIq#2%");
      assertNull(findDirectory);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testSetupBasicSystem() throws Throwable  {
      Newzgrabber.setupBasicSystem();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain0() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = "-debug";
      Newzgrabber.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsSystemExitException() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = "-batch";
      // Undeclared exception!
      try { 
        Newzgrabber.main(arg0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain1() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = "-verbose";
      Newzgrabber.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain2() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = " to hash with ";
      Newzgrabber.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain3() throws Throwable  {
      String[] arg0 = new String[1];
      Newzgrabber.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFindDirectoryReturningNonEmptyString() throws Throwable  {
      String findDirectory = Newzgrabber.findDirectory("EvoSuite_pathingJar5447796544197742539.jar");
      assertEquals("/tmp", findDirectory);
      assertNotNull(findDirectory);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFindDirectory1() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("/tmp/EvoSuite_pathingJar5447796544197742539.jar");
      FileSystemHandling.createFolder(arg0);
      String findDirectory = Newzgrabber.findDirectory("b@*'FBYIq#2%");
      assertNull(findDirectory);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainWithEmptyArray() throws Throwable  {
      String[] arg0 = new String[0];
      Newzgrabber.main(arg0);
      assertEquals(0, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateNewzgrabberTakingStringThrowsHeadlessException() throws Throwable  {
      Newzgrabber newzgrabber = null;
      try {
        newzgrabber = new Newzgrabber("&*3DK,,@@-l*4[");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
